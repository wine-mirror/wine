/* Capstone Disassembly Engine, http://www.capstone-engine.org */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013-2019 */

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
static void printInstruction(MCInst *MI, SStream *O)
{
#ifndef CAPSTONE_DIET
  static const char AsmStrs[] = {
  /* 0 */ 's', 'h', 'a', '1', 's', 'u', '0', '.', '3', '2', 9, 0,
  /* 12 */ 's', 'h', 'a', '2', '5', '6', 's', 'u', '0', '.', '3', '2', 9, 0,
  /* 26 */ 's', 'h', 'a', '1', 's', 'u', '1', '.', '3', '2', 9, 0,
  /* 38 */ 's', 'h', 'a', '2', '5', '6', 's', 'u', '1', '.', '3', '2', 9, 0,
  /* 52 */ 's', 'h', 'a', '2', '5', '6', 'h', '2', '.', '3', '2', 9, 0,
  /* 65 */ 's', 'h', 'a', '1', 'c', '.', '3', '2', 9, 0,
  /* 75 */ 's', 'h', 'a', '1', 'h', '.', '3', '2', 9, 0,
  /* 85 */ 's', 'h', 'a', '2', '5', '6', 'h', '.', '3', '2', 9, 0,
  /* 97 */ 's', 'h', 'a', '1', 'm', '.', '3', '2', 9, 0,
  /* 107 */ 's', 'h', 'a', '1', 'p', '.', '3', '2', 9, 0,
  /* 117 */ 'v', 'c', 'v', 't', 'a', '.', 's', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 132 */ 'v', 'c', 'v', 't', 'm', '.', 's', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 147 */ 'v', 'c', 'v', 't', 'n', '.', 's', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 162 */ 'v', 'c', 'v', 't', 'p', '.', 's', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 177 */ 'v', 'c', 'v', 't', 'a', '.', 'u', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 192 */ 'v', 'c', 'v', 't', 'm', '.', 'u', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 207 */ 'v', 'c', 'v', 't', 'n', '.', 'u', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 222 */ 'v', 'c', 'v', 't', 'p', '.', 'u', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 237 */ 'v', 'c', 'm', 'l', 'a', '.', 'f', '3', '2', 9, 0,
  /* 248 */ 'v', 'r', 'i', 'n', 't', 'a', '.', 'f', '3', '2', 9, 0,
  /* 260 */ 'v', 'c', 'a', 'd', 'd', '.', 'f', '3', '2', 9, 0,
  /* 271 */ 'v', 's', 'e', 'l', 'g', 'e', '.', 'f', '3', '2', 9, 0,
  /* 283 */ 'v', 'm', 'i', 'n', 'n', 'm', '.', 'f', '3', '2', 9, 0,
  /* 295 */ 'v', 'm', 'a', 'x', 'n', 'm', '.', 'f', '3', '2', 9, 0,
  /* 307 */ 'v', 'r', 'i', 'n', 't', 'm', '.', 'f', '3', '2', 9, 0,
  /* 319 */ 'v', 'r', 'i', 'n', 't', 'n', '.', 'f', '3', '2', 9, 0,
  /* 331 */ 'v', 'r', 'i', 'n', 't', 'p', '.', 'f', '3', '2', 9, 0,
  /* 343 */ 'v', 's', 'e', 'l', 'e', 'q', '.', 'f', '3', '2', 9, 0,
  /* 355 */ 'v', 's', 'e', 'l', 'v', 's', '.', 'f', '3', '2', 9, 0,
  /* 367 */ 'v', 's', 'e', 'l', 'g', 't', '.', 'f', '3', '2', 9, 0,
  /* 379 */ 'v', 'r', 'i', 'n', 't', 'x', '.', 'f', '3', '2', 9, 0,
  /* 391 */ 'v', 'r', 'i', 'n', 't', 'z', '.', 'f', '3', '2', 9, 0,
  /* 403 */ 'l', 'd', 'c', '2', 9, 0,
  /* 409 */ 'm', 'r', 'c', '2', 9, 0,
  /* 415 */ 'm', 'r', 'r', 'c', '2', 9, 0,
  /* 422 */ 's', 't', 'c', '2', 9, 0,
  /* 428 */ 'c', 'd', 'p', '2', 9, 0,
  /* 434 */ 'm', 'c', 'r', '2', 9, 0,
  /* 440 */ 'm', 'c', 'r', 'r', '2', 9, 0,
  /* 447 */ 'v', 'c', 'v', 't', 'a', '.', 's', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 462 */ 'v', 'c', 'v', 't', 'm', '.', 's', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 477 */ 'v', 'c', 'v', 't', 'n', '.', 's', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 492 */ 'v', 'c', 'v', 't', 'p', '.', 's', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 507 */ 'v', 'c', 'v', 't', 'a', '.', 'u', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 522 */ 'v', 'c', 'v', 't', 'm', '.', 'u', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 537 */ 'v', 'c', 'v', 't', 'n', '.', 'u', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 552 */ 'v', 'c', 'v', 't', 'p', '.', 'u', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 567 */ 'v', 'r', 'i', 'n', 't', 'a', '.', 'f', '6', '4', 9, 0,
  /* 579 */ 'v', 's', 'e', 'l', 'g', 'e', '.', 'f', '6', '4', 9, 0,
  /* 591 */ 'v', 'm', 'i', 'n', 'n', 'm', '.', 'f', '6', '4', 9, 0,
  /* 603 */ 'v', 'm', 'a', 'x', 'n', 'm', '.', 'f', '6', '4', 9, 0,
  /* 615 */ 'v', 'r', 'i', 'n', 't', 'm', '.', 'f', '6', '4', 9, 0,
  /* 627 */ 'v', 'r', 'i', 'n', 't', 'n', '.', 'f', '6', '4', 9, 0,
  /* 639 */ 'v', 'r', 'i', 'n', 't', 'p', '.', 'f', '6', '4', 9, 0,
  /* 651 */ 'v', 's', 'e', 'l', 'e', 'q', '.', 'f', '6', '4', 9, 0,
  /* 663 */ 'v', 's', 'e', 'l', 'v', 's', '.', 'f', '6', '4', 9, 0,
  /* 675 */ 'v', 's', 'e', 'l', 'g', 't', '.', 'f', '6', '4', 9, 0,
  /* 687 */ 'v', 'm', 'u', 'l', 'l', '.', 'p', '6', '4', 9, 0,
  /* 698 */ 'v', 'c', 'v', 't', 'a', '.', 's', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 713 */ 'v', 'c', 'v', 't', 'm', '.', 's', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 728 */ 'v', 'c', 'v', 't', 'n', '.', 's', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 743 */ 'v', 'c', 'v', 't', 'p', '.', 's', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 758 */ 'v', 'c', 'v', 't', 'a', '.', 'u', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 773 */ 'v', 'c', 'v', 't', 'm', '.', 'u', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 788 */ 'v', 'c', 'v', 't', 'n', '.', 'u', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 803 */ 'v', 'c', 'v', 't', 'p', '.', 'u', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 818 */ 'v', 'c', 'v', 't', 'a', '.', 's', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 833 */ 'v', 'c', 'v', 't', 'm', '.', 's', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 848 */ 'v', 'c', 'v', 't', 'n', '.', 's', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 863 */ 'v', 'c', 'v', 't', 'p', '.', 's', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 878 */ 'v', 'c', 'v', 't', 'a', '.', 'u', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 893 */ 'v', 'c', 'v', 't', 'm', '.', 'u', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 908 */ 'v', 'c', 'v', 't', 'n', '.', 'u', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 923 */ 'v', 'c', 'v', 't', 'p', '.', 'u', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 938 */ 'v', 'c', 'm', 'l', 'a', '.', 'f', '1', '6', 9, 0,
  /* 949 */ 'v', 'r', 'i', 'n', 't', 'a', '.', 'f', '1', '6', 9, 0,
  /* 961 */ 'v', 'c', 'a', 'd', 'd', '.', 'f', '1', '6', 9, 0,
  /* 972 */ 'v', 's', 'e', 'l', 'g', 'e', '.', 'f', '1', '6', 9, 0,
  /* 984 */ 'v', 'm', 'i', 'n', 'n', 'm', '.', 'f', '1', '6', 9, 0,
  /* 996 */ 'v', 'm', 'a', 'x', 'n', 'm', '.', 'f', '1', '6', 9, 0,
  /* 1008 */ 'v', 'r', 'i', 'n', 't', 'm', '.', 'f', '1', '6', 9, 0,
  /* 1020 */ 'v', 'r', 'i', 'n', 't', 'n', '.', 'f', '1', '6', 9, 0,
  /* 1032 */ 'v', 'r', 'i', 'n', 't', 'p', '.', 'f', '1', '6', 9, 0,
  /* 1044 */ 'v', 's', 'e', 'l', 'e', 'q', '.', 'f', '1', '6', 9, 0,
  /* 1056 */ 'v', 'i', 'n', 's', '.', 'f', '1', '6', 9, 0,
  /* 1066 */ 'v', 's', 'e', 'l', 'v', 's', '.', 'f', '1', '6', 9, 0,
  /* 1078 */ 'v', 's', 'e', 'l', 'g', 't', '.', 'f', '1', '6', 9, 0,
  /* 1090 */ 'v', 'r', 'i', 'n', 't', 'x', '.', 'f', '1', '6', 9, 0,
  /* 1102 */ 'v', 'm', 'o', 'v', 'x', '.', 'f', '1', '6', 9, 0,
  /* 1113 */ 'v', 'r', 'i', 'n', 't', 'z', '.', 'f', '1', '6', 9, 0,
  /* 1125 */ 'a', 'e', 's', 'i', 'm', 'c', '.', '8', 9, 0,
  /* 1135 */ 'a', 'e', 's', 'm', 'c', '.', '8', 9, 0,
  /* 1144 */ 'a', 'e', 's', 'd', '.', '8', 9, 0,
  /* 1152 */ 'a', 'e', 's', 'e', '.', '8', 9, 0,
  /* 1160 */ 'v', 's', 'd', 'o', 't', '.', 's', '8', 9, 0,
  /* 1170 */ 'v', 'u', 'd', 'o', 't', '.', 'u', '8', 9, 0,
  /* 1180 */ 'r', 'f', 'e', 'd', 'a', 9, 0,
  /* 1187 */ 'r', 'f', 'e', 'i', 'a', 9, 0,
  /* 1194 */ 'c', 'r', 'c', '3', '2', 'b', 9, 0,
  /* 1202 */ 'c', 'r', 'c', '3', '2', 'c', 'b', 9, 0,
  /* 1211 */ 'r', 'f', 'e', 'd', 'b', 9, 0,
  /* 1218 */ 'r', 'f', 'e', 'i', 'b', 9, 0,
  /* 1225 */ 'd', 'm', 'b', 9, 0,
  /* 1230 */ 'd', 's', 'b', 9, 0,
  /* 1235 */ 'i', 's', 'b', 9, 0,
  /* 1240 */ 't', 's', 'b', 9, 0,
  /* 1245 */ 'h', 'v', 'c', 9, 0,
  /* 1250 */ 'p', 'l', 'd', 9, 0,
  /* 1255 */ 's', 'e', 't', 'e', 'n', 'd', 9, 0,
  /* 1263 */ 'u', 'd', 'f', 9, 0,
  /* 1268 */ 'c', 'r', 'c', '3', '2', 'h', 9, 0,
  /* 1276 */ 'c', 'r', 'c', '3', '2', 'c', 'h', 9, 0,
  /* 1285 */ 'p', 'l', 'i', 9, 0,
  /* 1290 */ 'l', 'd', 'c', '2', 'l', 9, 0,
  /* 1297 */ 's', 't', 'c', '2', 'l', 9, 0,
  /* 1304 */ 'b', 'l', 9, 0,
  /* 1308 */ 's', 'e', 't', 'p', 'a', 'n', 9, 0,
  /* 1316 */ 'c', 'p', 's', 9, 0,
  /* 1321 */ 'm', 'o', 'v', 's', 9, 0,
  /* 1327 */ 'h', 'l', 't', 9, 0,
  /* 1332 */ 'b', 'k', 'p', 't', 9, 0,
  /* 1338 */ 'h', 'v', 'c', '.', 'w', 9, 0,
  /* 1345 */ 'u', 'd', 'f', '.', 'w', 9, 0,
  /* 1352 */ 'c', 'r', 'c', '3', '2', 'w', 9, 0,
  /* 1360 */ 'c', 'r', 'c', '3', '2', 'c', 'w', 9, 0,
  /* 1369 */ 'p', 'l', 'd', 'w', 9, 0,
  /* 1375 */ 'b', 'x', 9, 0,
  /* 1379 */ 'b', 'l', 'x', 9, 0,
  /* 1384 */ 'c', 'b', 'z', 9, 0,
  /* 1389 */ 'c', 'b', 'n', 'z', 9, 0,
  /* 1395 */ 's', 'r', 's', 'd', 'a', 9, 's', 'p', '!', ',', 32, 0,
  /* 1407 */ 's', 'r', 's', 'i', 'a', 9, 's', 'p', '!', ',', 32, 0,
  /* 1419 */ 's', 'r', 's', 'd', 'b', 9, 's', 'p', '!', ',', 32, 0,
  /* 1431 */ 's', 'r', 's', 'i', 'b', 9, 's', 'p', '!', ',', 32, 0,
  /* 1443 */ 's', 'r', 's', 'd', 'a', 9, 's', 'p', ',', 32, 0,
  /* 1454 */ 's', 'r', 's', 'i', 'a', 9, 's', 'p', ',', 32, 0,
  /* 1465 */ 's', 'r', 's', 'd', 'b', 9, 's', 'p', ',', 32, 0,
  /* 1476 */ 's', 'r', 's', 'i', 'b', 9, 's', 'p', ',', 32, 0,
  /* 1487 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'P', 'a', 't', 'c', 'h', 'a', 'b', 'l', 'e', 32, 'R', 'E', 'T', '.', 0,
  /* 1518 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'y', 'p', 'e', 'd', 32, 'E', 'v', 'e', 'n', 't', 32, 'L', 'o', 'g', '.', 0,
  /* 1542 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'C', 'u', 's', 't', 'o', 'm', 32, 'E', 'v', 'e', 'n', 't', 32, 'L', 'o', 'g', '.', 0,
  /* 1567 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'n', 't', 'e', 'r', '.', 0,
  /* 1590 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'a', 'i', 'l', 32, 'C', 'a', 'l', 'l', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 1613 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 1635 */ '_', '_', 'b', 'r', 'k', 'd', 'i', 'v', '0', 0,
  /* 1645 */ 'v', 'l', 'd', '1', 0,
  /* 1650 */ 'd', 'c', 'p', 's', '1', 0,
  /* 1656 */ 'v', 's', 't', '1', 0,
  /* 1661 */ 'v', 'r', 'e', 'v', '3', '2', 0,
  /* 1668 */ 'l', 'd', 'c', '2', 0,
  /* 1673 */ 'm', 'r', 'c', '2', 0,
  /* 1678 */ 'm', 'r', 'r', 'c', '2', 0,
  /* 1684 */ 's', 't', 'c', '2', 0,
  /* 1689 */ 'v', 'l', 'd', '2', 0,
  /* 1694 */ 'c', 'd', 'p', '2', 0,
  /* 1699 */ 'm', 'c', 'r', '2', 0,
  /* 1704 */ 'm', 'c', 'r', 'r', '2', 0,
  /* 1710 */ 'd', 'c', 'p', 's', '2', 0,
  /* 1716 */ 'v', 's', 't', '2', 0,
  /* 1721 */ 'v', 'l', 'd', '3', 0,
  /* 1726 */ 'd', 'c', 'p', 's', '3', 0,
  /* 1732 */ 'v', 's', 't', '3', 0,
  /* 1737 */ 'v', 'r', 'e', 'v', '6', '4', 0,
  /* 1744 */ 'v', 'l', 'd', '4', 0,
  /* 1749 */ 'v', 's', 't', '4', 0,
  /* 1754 */ 's', 'x', 't', 'a', 'b', '1', '6', 0,
  /* 1762 */ 'u', 'x', 't', 'a', 'b', '1', '6', 0,
  /* 1770 */ 's', 'x', 't', 'b', '1', '6', 0,
  /* 1777 */ 'u', 'x', 't', 'b', '1', '6', 0,
  /* 1784 */ 's', 'h', 's', 'u', 'b', '1', '6', 0,
  /* 1792 */ 'u', 'h', 's', 'u', 'b', '1', '6', 0,
  /* 1800 */ 'u', 'q', 's', 'u', 'b', '1', '6', 0,
  /* 1808 */ 's', 's', 'u', 'b', '1', '6', 0,
  /* 1815 */ 'u', 's', 'u', 'b', '1', '6', 0,
  /* 1822 */ 's', 'h', 'a', 'd', 'd', '1', '6', 0,
  /* 1830 */ 'u', 'h', 'a', 'd', 'd', '1', '6', 0,
  /* 1838 */ 'u', 'q', 'a', 'd', 'd', '1', '6', 0,
  /* 1846 */ 's', 'a', 'd', 'd', '1', '6', 0,
  /* 1853 */ 'u', 'a', 'd', 'd', '1', '6', 0,
  /* 1860 */ 's', 's', 'a', 't', '1', '6', 0,
  /* 1867 */ 'u', 's', 'a', 't', '1', '6', 0,
  /* 1874 */ 'v', 'r', 'e', 'v', '1', '6', 0,
  /* 1881 */ 'u', 's', 'a', 'd', 'a', '8', 0,
  /* 1888 */ 's', 'h', 's', 'u', 'b', '8', 0,
  /* 1895 */ 'u', 'h', 's', 'u', 'b', '8', 0,
  /* 1902 */ 'u', 'q', 's', 'u', 'b', '8', 0,
  /* 1909 */ 's', 's', 'u', 'b', '8', 0,
  /* 1915 */ 'u', 's', 'u', 'b', '8', 0,
  /* 1921 */ 'u', 's', 'a', 'd', '8', 0,
  /* 1927 */ 's', 'h', 'a', 'd', 'd', '8', 0,
  /* 1934 */ 'u', 'h', 'a', 'd', 'd', '8', 0,
  /* 1941 */ 'u', 'q', 'a', 'd', 'd', '8', 0,
  /* 1948 */ 's', 'a', 'd', 'd', '8', 0,
  /* 1954 */ 'u', 'a', 'd', 'd', '8', 0,
  /* 1960 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 1973 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 1980 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 1990 */ 'D', 'B', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 2000 */ '@', 32, 'C', 'O', 'M', 'P', 'I', 'L', 'E', 'R', 32, 'B', 'A', 'R', 'R', 'I', 'E', 'R', 0,
  /* 2019 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 2034 */ 'v', 'a', 'b', 'a', 0,
  /* 2039 */ 'l', 'd', 'a', 0,
  /* 2043 */ 'l', 'd', 'm', 'd', 'a', 0,
  /* 2049 */ 's', 't', 'm', 'd', 'a', 0,
  /* 2055 */ 'r', 'f', 'e', 'i', 'a', 0,
  /* 2061 */ 'v', 'l', 'd', 'm', 'i', 'a', 0,
  /* 2068 */ 'v', 's', 't', 'm', 'i', 'a', 0,
  /* 2075 */ 's', 'r', 's', 'i', 'a', 0,
  /* 2081 */ 's', 'm', 'm', 'l', 'a', 0,
  /* 2087 */ 'v', 'n', 'm', 'l', 'a', 0,
  /* 2093 */ 'v', 'm', 'l', 'a', 0,
  /* 2098 */ 'v', 'f', 'm', 'a', 0,
  /* 2103 */ 'v', 'f', 'n', 'm', 'a', 0,
  /* 2109 */ 'v', 'r', 's', 'r', 'a', 0,
  /* 2115 */ 'v', 's', 'r', 'a', 0,
  /* 2120 */ 't', 't', 'a', 0,
  /* 2124 */ 'l', 'd', 'a', 'b', 0,
  /* 2129 */ 's', 'x', 't', 'a', 'b', 0,
  /* 2135 */ 'u', 'x', 't', 'a', 'b', 0,
  /* 2141 */ 's', 'm', 'l', 'a', 'b', 'b', 0,
  /* 2148 */ 's', 'm', 'l', 'a', 'l', 'b', 'b', 0,
  /* 2156 */ 's', 'm', 'u', 'l', 'b', 'b', 0,
  /* 2163 */ 't', 'b', 'b', 0,
  /* 2167 */ 'r', 'f', 'e', 'd', 'b', 0,
  /* 2173 */ 'v', 'l', 'd', 'm', 'd', 'b', 0,
  /* 2180 */ 'v', 's', 't', 'm', 'd', 'b', 0,
  /* 2187 */ 's', 'r', 's', 'd', 'b', 0,
  /* 2193 */ 'l', 'd', 'm', 'i', 'b', 0,
  /* 2199 */ 's', 't', 'm', 'i', 'b', 0,
  /* 2205 */ 's', 't', 'l', 'b', 0,
  /* 2210 */ 'd', 'm', 'b', 0,
  /* 2214 */ 's', 'w', 'p', 'b', 0,
  /* 2219 */ 'l', 'd', 'r', 'b', 0,
  /* 2224 */ 's', 't', 'r', 'b', 0,
  /* 2229 */ 'd', 's', 'b', 0,
  /* 2233 */ 'i', 's', 'b', 0,
  /* 2237 */ 'l', 'd', 'r', 's', 'b', 0,
  /* 2243 */ 't', 's', 'b', 0,
  /* 2247 */ 's', 'm', 'l', 'a', 't', 'b', 0,
  /* 2254 */ 'p', 'k', 'h', 't', 'b', 0,
  /* 2260 */ 's', 'm', 'l', 'a', 'l', 't', 'b', 0,
  /* 2268 */ 's', 'm', 'u', 'l', 't', 'b', 0,
  /* 2275 */ 'v', 'c', 'v', 't', 'b', 0,
  /* 2281 */ 's', 'x', 't', 'b', 0,
  /* 2286 */ 'u', 'x', 't', 'b', 0,
  /* 2291 */ 'q', 'd', 's', 'u', 'b', 0,
  /* 2297 */ 'v', 'h', 's', 'u', 'b', 0,
  /* 2303 */ 'v', 'q', 's', 'u', 'b', 0,
  /* 2309 */ 'v', 's', 'u', 'b', 0,
  /* 2314 */ 's', 'm', 'l', 'a', 'w', 'b', 0,
  /* 2321 */ 's', 'm', 'u', 'l', 'w', 'b', 0,
  /* 2328 */ 'l', 'd', 'a', 'e', 'x', 'b', 0,
  /* 2335 */ 's', 't', 'l', 'e', 'x', 'b', 0,
  /* 2342 */ 'l', 'd', 'r', 'e', 'x', 'b', 0,
  /* 2349 */ 's', 't', 'r', 'e', 'x', 'b', 0,
  /* 2356 */ 's', 'b', 'c', 0,
  /* 2360 */ 'a', 'd', 'c', 0,
  /* 2364 */ 'l', 'd', 'c', 0,
  /* 2368 */ 'b', 'f', 'c', 0,
  /* 2372 */ 'v', 'b', 'i', 'c', 0,
  /* 2377 */ 's', 'm', 'c', 0,
  /* 2381 */ 'm', 'r', 'c', 0,
  /* 2385 */ 'm', 'r', 'r', 'c', 0,
  /* 2390 */ 'r', 's', 'c', 0,
  /* 2394 */ 's', 't', 'c', 0,
  /* 2398 */ 's', 'v', 'c', 0,
  /* 2402 */ 's', 'm', 'l', 'a', 'd', 0,
  /* 2408 */ 's', 'm', 'u', 'a', 'd', 0,
  /* 2414 */ 'v', 'a', 'b', 'd', 0,
  /* 2419 */ 'q', 'd', 'a', 'd', 'd', 0,
  /* 2425 */ 'v', 'r', 'h', 'a', 'd', 'd', 0,
  /* 2432 */ 'v', 'h', 'a', 'd', 'd', 0,
  /* 2438 */ 'v', 'p', 'a', 'd', 'd', 0,
  /* 2444 */ 'v', 'q', 'a', 'd', 'd', 0,
  /* 2450 */ 'v', 'a', 'd', 'd', 0,
  /* 2455 */ 's', 'm', 'l', 'a', 'l', 'd', 0,
  /* 2462 */ 'p', 'l', 'd', 0,
  /* 2466 */ 's', 'm', 'l', 's', 'l', 'd', 0,
  /* 2473 */ 'v', 'a', 'n', 'd', 0,
  /* 2478 */ 'l', 'd', 'r', 'd', 0,
  /* 2483 */ 's', 't', 'r', 'd', 0,
  /* 2488 */ 's', 'm', 'l', 's', 'd', 0,
  /* 2494 */ 's', 'm', 'u', 's', 'd', 0,
  /* 2500 */ 'l', 'd', 'a', 'e', 'x', 'd', 0,
  /* 2507 */ 's', 't', 'l', 'e', 'x', 'd', 0,
  /* 2514 */ 'l', 'd', 'r', 'e', 'x', 'd', 0,
  /* 2521 */ 's', 't', 'r', 'e', 'x', 'd', 0,
  /* 2528 */ 'v', 'a', 'c', 'g', 'e', 0,
  /* 2534 */ 'v', 'c', 'g', 'e', 0,
  /* 2539 */ 'v', 'c', 'l', 'e', 0,
  /* 2544 */ 'v', 'r', 'e', 'c', 'p', 'e', 0,
  /* 2551 */ 'v', 'c', 'm', 'p', 'e', 0,
  /* 2557 */ 'v', 'r', 's', 'q', 'r', 't', 'e', 0,
  /* 2565 */ 'v', 'b', 'i', 'f', 0,
  /* 2570 */ 'd', 'b', 'g', 0,
  /* 2574 */ 'v', 'q', 'n', 'e', 'g', 0,
  /* 2580 */ 'v', 'n', 'e', 'g', 0,
  /* 2585 */ 's', 'g', 0,
  /* 2588 */ 'l', 'd', 'a', 'h', 0,
  /* 2593 */ 'v', 'q', 'r', 'd', 'm', 'l', 'a', 'h', 0,
  /* 2602 */ 's', 'x', 't', 'a', 'h', 0,
  /* 2608 */ 'u', 'x', 't', 'a', 'h', 0,
  /* 2614 */ 't', 'b', 'h', 0,
  /* 2618 */ 's', 't', 'l', 'h', 0,
  /* 2623 */ 'v', 'q', 'd', 'm', 'u', 'l', 'h', 0,
  /* 2631 */ 'v', 'q', 'r', 'd', 'm', 'u', 'l', 'h', 0,
  /* 2640 */ 'l', 'd', 'r', 'h', 0,
  /* 2645 */ 's', 't', 'r', 'h', 0,
  /* 2650 */ 'v', 'q', 'r', 'd', 'm', 'l', 's', 'h', 0,
  /* 2659 */ 'l', 'd', 'r', 's', 'h', 0,
  /* 2665 */ 'p', 'u', 's', 'h', 0,
  /* 2670 */ 'r', 'e', 'v', 's', 'h', 0,
  /* 2676 */ 's', 'x', 't', 'h', 0,
  /* 2681 */ 'u', 'x', 't', 'h', 0,
  /* 2686 */ 'l', 'd', 'a', 'e', 'x', 'h', 0,
  /* 2693 */ 's', 't', 'l', 'e', 'x', 'h', 0,
  /* 2700 */ 'l', 'd', 'r', 'e', 'x', 'h', 0,
  /* 2707 */ 's', 't', 'r', 'e', 'x', 'h', 0,
  /* 2714 */ 'b', 'f', 'i', 0,
  /* 2718 */ 'p', 'l', 'i', 0,
  /* 2722 */ 'v', 's', 'l', 'i', 0,
  /* 2727 */ 'v', 's', 'r', 'i', 0,
  /* 2732 */ 'b', 'x', 'j', 0,
  /* 2736 */ 'l', 'd', 'c', '2', 'l', 0,
  /* 2742 */ 's', 't', 'c', '2', 'l', 0,
  /* 2748 */ 'u', 'm', 'a', 'a', 'l', 0,
  /* 2754 */ 'v', 'a', 'b', 'a', 'l', 0,
  /* 2760 */ 'v', 'p', 'a', 'd', 'a', 'l', 0,
  /* 2767 */ 'v', 'q', 'd', 'm', 'l', 'a', 'l', 0,
  /* 2775 */ 's', 'm', 'l', 'a', 'l', 0,
  /* 2781 */ 'u', 'm', 'l', 'a', 'l', 0,
  /* 2787 */ 'v', 'm', 'l', 'a', 'l', 0,
  /* 2793 */ 'v', 't', 'b', 'l', 0,
  /* 2798 */ 'v', 's', 'u', 'b', 'l', 0,
  /* 2804 */ 'l', 'd', 'c', 'l', 0,
  /* 2809 */ 's', 't', 'c', 'l', 0,
  /* 2814 */ 'v', 'a', 'b', 'd', 'l', 0,
  /* 2820 */ 'v', 'p', 'a', 'd', 'd', 'l', 0,
  /* 2827 */ 'v', 'a', 'd', 'd', 'l', 0,
  /* 2833 */ 's', 'e', 'l', 0,
  /* 2837 */ 'v', 'q', 's', 'h', 'l', 0,
  /* 2843 */ 'v', 'q', 'r', 's', 'h', 'l', 0,
  /* 2850 */ 'v', 'r', 's', 'h', 'l', 0,
  /* 2856 */ 'v', 's', 'h', 'l', 0,
  /* 2861 */ '#', 32, 'F', 'E', 'n', 't', 'r', 'y', 32, 'c', 'a', 'l', 'l', 0,
  /* 2875 */ 'v', 's', 'h', 'l', 'l', 0,
  /* 2881 */ 'v', 'q', 'd', 'm', 'u', 'l', 'l', 0,
  /* 2889 */ 's', 'm', 'u', 'l', 'l', 0,
  /* 2895 */ 'u', 'm', 'u', 'l', 'l', 0,
  /* 2901 */ 'v', 'm', 'u', 'l', 'l', 0,
  /* 2907 */ 'v', 'b', 's', 'l', 0,
  /* 2912 */ 'v', 'q', 'd', 'm', 'l', 's', 'l', 0,
  /* 2920 */ 'v', 'm', 'l', 's', 'l', 0,
  /* 2926 */ 's', 't', 'l', 0,
  /* 2930 */ 's', 'm', 'm', 'u', 'l', 0,
  /* 2936 */ 'v', 'n', 'm', 'u', 'l', 0,
  /* 2942 */ 'v', 'm', 'u', 'l', 0,
  /* 2947 */ 'v', 'm', 'o', 'v', 'l', 0,
  /* 2953 */ 'v', 'l', 'l', 'd', 'm', 0,
  /* 2959 */ 'v', 'l', 's', 't', 'm', 0,
  /* 2965 */ 'v', 'r', 's', 'u', 'b', 'h', 'n', 0,
  /* 2973 */ 'v', 's', 'u', 'b', 'h', 'n', 0,
  /* 2980 */ 'v', 'r', 'a', 'd', 'd', 'h', 'n', 0,
  /* 2988 */ 'v', 'a', 'd', 'd', 'h', 'n', 0,
  /* 2995 */ 'v', 'p', 'm', 'i', 'n', 0,
  /* 3001 */ 'v', 'm', 'i', 'n', 0,
  /* 3006 */ 'c', 'm', 'n', 0,
  /* 3010 */ 'v', 'q', 's', 'h', 'r', 'n', 0,
  /* 3017 */ 'v', 'q', 'r', 's', 'h', 'r', 'n', 0,
  /* 3025 */ 'v', 'r', 's', 'h', 'r', 'n', 0,
  /* 3032 */ 'v', 's', 'h', 'r', 'n', 0,
  /* 3038 */ 'v', 'o', 'r', 'n', 0,
  /* 3043 */ 'v', 't', 'r', 'n', 0,
  /* 3048 */ 'v', 'q', 's', 'h', 'r', 'u', 'n', 0,
  /* 3056 */ 'v', 'q', 'r', 's', 'h', 'r', 'u', 'n', 0,
  /* 3065 */ 'v', 'q', 'm', 'o', 'v', 'u', 'n', 0,
  /* 3073 */ 'v', 'm', 'v', 'n', 0,
  /* 3078 */ 'v', 'q', 'm', 'o', 'v', 'n', 0,
  /* 3085 */ 'v', 'm', 'o', 'v', 'n', 0,
  /* 3091 */ 't', 'r', 'a', 'p', 0,
  /* 3096 */ 'c', 'd', 'p', 0,
  /* 3100 */ 'v', 'z', 'i', 'p', 0,
  /* 3105 */ 'v', 'c', 'm', 'p', 0,
  /* 3110 */ 'p', 'o', 'p', 0,
  /* 3114 */ 'v', 'd', 'u', 'p', 0,
  /* 3119 */ 'v', 's', 'w', 'p', 0,
  /* 3124 */ 'v', 'u', 'z', 'p', 0,
  /* 3129 */ 'v', 'c', 'e', 'q', 0,
  /* 3134 */ 't', 'e', 'q', 0,
  /* 3138 */ 's', 'm', 'm', 'l', 'a', 'r', 0,
  /* 3145 */ 'm', 'c', 'r', 0,
  /* 3149 */ 'a', 'd', 'r', 0,
  /* 3153 */ 'v', 'l', 'd', 'r', 0,
  /* 3158 */ 'v', 'r', 's', 'h', 'r', 0,
  /* 3164 */ 'v', 's', 'h', 'r', 0,
  /* 3169 */ 's', 'm', 'm', 'u', 'l', 'r', 0,
  /* 3176 */ 'v', 'e', 'o', 'r', 0,
  /* 3181 */ 'r', 'o', 'r', 0,
  /* 3185 */ 'm', 'c', 'r', 'r', 0,
  /* 3190 */ 'v', 'o', 'r', 'r', 0,
  /* 3195 */ 'a', 's', 'r', 0,
  /* 3199 */ 's', 'm', 'm', 'l', 's', 'r', 0,
  /* 3206 */ 'v', 'm', 's', 'r', 0,
  /* 3211 */ 'v', 'r', 'i', 'n', 't', 'r', 0,
  /* 3218 */ 'v', 's', 't', 'r', 0,
  /* 3223 */ 'v', 'c', 'v', 't', 'r', 0,
  /* 3229 */ 'v', 'q', 'a', 'b', 's', 0,
  /* 3235 */ 'v', 'a', 'b', 's', 0,
  /* 3240 */ 's', 'u', 'b', 's', 0,
  /* 3245 */ 'v', 'c', 'l', 's', 0,
  /* 3250 */ 's', 'm', 'm', 'l', 's', 0,
  /* 3256 */ 'v', 'n', 'm', 'l', 's', 0,
  /* 3262 */ 'v', 'm', 'l', 's', 0,
  /* 3267 */ 'v', 'f', 'm', 's', 0,
  /* 3272 */ 'v', 'f', 'n', 'm', 's', 0,
  /* 3278 */ 'b', 'x', 'n', 's', 0,
  /* 3283 */ 'b', 'l', 'x', 'n', 's', 0,
  /* 3289 */ 'v', 'r', 'e', 'c', 'p', 's', 0,
  /* 3296 */ 'v', 'm', 'r', 's', 0,
  /* 3301 */ 'a', 's', 'r', 's', 0,
  /* 3306 */ 'l', 's', 'r', 's', 0,
  /* 3311 */ 'v', 'r', 's', 'q', 'r', 't', 's', 0,
  /* 3319 */ 'm', 'o', 'v', 's', 0,
  /* 3324 */ 's', 's', 'a', 't', 0,
  /* 3329 */ 'u', 's', 'a', 't', 0,
  /* 3334 */ 't', 't', 'a', 't', 0,
  /* 3339 */ 's', 'm', 'l', 'a', 'b', 't', 0,
  /* 3346 */ 'p', 'k', 'h', 'b', 't', 0,
  /* 3352 */ 's', 'm', 'l', 'a', 'l', 'b', 't', 0,
  /* 3360 */ 's', 'm', 'u', 'l', 'b', 't', 0,
  /* 3367 */ 'l', 'd', 'r', 'b', 't', 0,
  /* 3373 */ 's', 't', 'r', 'b', 't', 0,
  /* 3379 */ 'l', 'd', 'r', 's', 'b', 't', 0,
  /* 3386 */ 'e', 'r', 'e', 't', 0,
  /* 3391 */ 'v', 'a', 'c', 'g', 't', 0,
  /* 3397 */ 'v', 'c', 'g', 't', 0,
  /* 3402 */ 'l', 'd', 'r', 'h', 't', 0,
  /* 3408 */ 's', 't', 'r', 'h', 't', 0,
  /* 3414 */ 'l', 'd', 'r', 's', 'h', 't', 0,
  /* 3421 */ 'r', 'b', 'i', 't', 0,
  /* 3426 */ 'v', 'b', 'i', 't', 0,
  /* 3431 */ 'v', 'c', 'l', 't', 0,
  /* 3436 */ 'v', 'c', 'n', 't', 0,
  /* 3441 */ 'h', 'i', 'n', 't', 0,
  /* 3446 */ 'l', 'd', 'r', 't', 0,
  /* 3451 */ 'v', 's', 'q', 'r', 't', 0,
  /* 3457 */ 's', 't', 'r', 't', 0,
  /* 3462 */ 'v', 't', 's', 't', 0,
  /* 3467 */ 's', 'm', 'l', 'a', 't', 't', 0,
  /* 3474 */ 's', 'm', 'l', 'a', 'l', 't', 't', 0,
  /* 3482 */ 's', 'm', 'u', 'l', 't', 't', 0,
  /* 3489 */ 't', 't', 't', 0,
  /* 3493 */ 'v', 'c', 'v', 't', 't', 0,
  /* 3499 */ 'v', 'j', 'c', 'v', 't', 0,
  /* 3505 */ 'v', 'c', 'v', 't', 0,
  /* 3510 */ 'm', 'o', 'v', 't', 0,
  /* 3515 */ 's', 'm', 'l', 'a', 'w', 't', 0,
  /* 3522 */ 's', 'm', 'u', 'l', 'w', 't', 0,
  /* 3529 */ 'v', 'e', 'x', 't', 0,
  /* 3534 */ 'v', 'q', 's', 'h', 'l', 'u', 0,
  /* 3541 */ 'r', 'e', 'v', 0,
  /* 3545 */ 's', 'd', 'i', 'v', 0,
  /* 3550 */ 'u', 'd', 'i', 'v', 0,
  /* 3555 */ 'v', 'd', 'i', 'v', 0,
  /* 3560 */ 'v', 'm', 'o', 'v', 0,
  /* 3565 */ 'v', 's', 'u', 'b', 'w', 0,
  /* 3571 */ 'v', 'a', 'd', 'd', 'w', 0,
  /* 3577 */ 'p', 'l', 'd', 'w', 0,
  /* 3582 */ 'm', 'o', 'v', 'w', 0,
  /* 3587 */ 'f', 'l', 'd', 'm', 'i', 'a', 'x', 0,
  /* 3595 */ 'f', 's', 't', 'm', 'i', 'a', 'x', 0,
  /* 3603 */ 'v', 'p', 'm', 'a', 'x', 0,
  /* 3609 */ 'v', 'm', 'a', 'x', 0,
  /* 3614 */ 's', 'h', 's', 'a', 'x', 0,
  /* 3620 */ 'u', 'h', 's', 'a', 'x', 0,
  /* 3626 */ 'u', 'q', 's', 'a', 'x', 0,
  /* 3632 */ 's', 's', 'a', 'x', 0,
  /* 3637 */ 'u', 's', 'a', 'x', 0,
  /* 3642 */ 'f', 'l', 'd', 'm', 'd', 'b', 'x', 0,
  /* 3650 */ 'f', 's', 't', 'm', 'd', 'b', 'x', 0,
  /* 3658 */ 'v', 't', 'b', 'x', 0,
  /* 3663 */ 's', 'm', 'l', 'a', 'd', 'x', 0,
  /* 3670 */ 's', 'm', 'u', 'a', 'd', 'x', 0,
  /* 3677 */ 's', 'm', 'l', 'a', 'l', 'd', 'x', 0,
  /* 3685 */ 's', 'm', 'l', 's', 'l', 'd', 'x', 0,
  /* 3693 */ 's', 'm', 'l', 's', 'd', 'x', 0,
  /* 3700 */ 's', 'm', 'u', 's', 'd', 'x', 0,
  /* 3707 */ 'l', 'd', 'a', 'e', 'x', 0,
  /* 3713 */ 's', 't', 'l', 'e', 'x', 0,
  /* 3719 */ 'l', 'd', 'r', 'e', 'x', 0,
  /* 3725 */ 'c', 'l', 'r', 'e', 'x', 0,
  /* 3731 */ 's', 't', 'r', 'e', 'x', 0,
  /* 3737 */ 's', 'b', 'f', 'x', 0,
  /* 3742 */ 'u', 'b', 'f', 'x', 0,
  /* 3747 */ 'b', 'l', 'x', 0,
  /* 3751 */ 'r', 'r', 'x', 0,
  /* 3755 */ 's', 'h', 'a', 's', 'x', 0,
  /* 3761 */ 'u', 'h', 'a', 's', 'x', 0,
  /* 3767 */ 'u', 'q', 'a', 's', 'x', 0,
  /* 3773 */ 's', 'a', 's', 'x', 0,
  /* 3778 */ 'u', 'a', 's', 'x', 0,
  /* 3783 */ 'v', 'r', 'i', 'n', 't', 'x', 0,
  /* 3790 */ 'v', 'c', 'l', 'z', 0,
  /* 3795 */ 'v', 'r', 'i', 'n', 't', 'z', 0,
  };
#endif

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    1981U,	// DBG_VALUE
    1991U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    1974U,	// BUNDLE
    2020U,	// LIFETIME_START
    1961U,	// LIFETIME_END
    0U,	// STACKMAP
    2862U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    1568U,	// PATCHABLE_FUNCTION_ENTER
    1488U,	// PATCHABLE_RET
    1614U,	// PATCHABLE_FUNCTION_EXIT
    1591U,	// PATCHABLE_TAIL_CALL
    1543U,	// PATCHABLE_EVENT_CALL
    1519U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDE
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SSUBO
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_GEP
    0U,	// G_PTR_MASK
    0U,	// G_BR
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_BSWAP
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// ABS
    0U,	// ADDSri
    0U,	// ADDSrr
    0U,	// ADDSrsi
    0U,	// ADDSrsr
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    7292U,	// ASRi
    7292U,	// ASRr
    0U,	// B
    0U,	// BCCZi64
    0U,	// BCCi64
    0U,	// BMOVPCB_CALL
    0U,	// BMOVPCRX_CALL
    0U,	// BR_JTadd
    0U,	// BR_JTm_i12
    0U,	// BR_JTm_rs
    0U,	// BR_JTr
    0U,	// BX_CALL
    0U,	// CMP_SWAP_16
    0U,	// CMP_SWAP_32
    0U,	// CMP_SWAP_64
    0U,	// CMP_SWAP_8
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_STRUCT_BYVAL_I32
    2001U,	// CompilerBarrier
    16788832U,	// ITasm
    0U,	// Int_eh_sjlj_dispatchsetup
    0U,	// Int_eh_sjlj_longjmp
    0U,	// Int_eh_sjlj_setjmp
    0U,	// Int_eh_sjlj_setjmp_nofp
    0U,	// Int_eh_sjlj_setup_dispatch
    0U,	// JUMPTABLE_ADDRS
    0U,	// JUMPTABLE_INSTS
    0U,	// JUMPTABLE_TBB
    0U,	// JUMPTABLE_TBH
    0U,	// LDMIA_RET
    15656U,	// LDRBT_POST
    15443U,	// LDRConstPool
    0U,	// LDRLIT_ga_abs
    0U,	// LDRLIT_ga_pcrel
    0U,	// LDRLIT_ga_pcrel_ldr
    15735U,	// LDRT_POST
    0U,	// LEApcrel
    0U,	// LEApcrelJT
    7013U,	// LSLi
    7013U,	// LSLr
    7299U,	// LSRi
    7299U,	// LSRr
    0U,	// MEMCPY
    0U,	// MLAv5
    0U,	// MOVCCi
    0U,	// MOVCCi16
    0U,	// MOVCCi32imm
    0U,	// MOVCCr
    0U,	// MOVCCsi
    0U,	// MOVCCsr
    0U,	// MOVPCRX
    0U,	// MOVTi16_ga_pcrel
    0U,	// MOV_ga_pcrel
    0U,	// MOV_ga_pcrel_ldr
    0U,	// MOVi16_ga_pcrel
    0U,	// MOVi32imm
    0U,	// MOVsra_flag
    0U,	// MOVsrl_flag
    0U,	// MULv5
    0U,	// MVNCCi
    0U,	// PICADD
    0U,	// PICLDR
    0U,	// PICLDRB
    0U,	// PICLDRH
    0U,	// PICLDRSB
    0U,	// PICLDRSH
    0U,	// PICSTR
    0U,	// PICSTRB
    0U,	// PICSTRH
    7278U,	// RORi
    7278U,	// RORr
    0U,	// RRX
    20136U,	// RRXi
    0U,	// RSBSri
    0U,	// RSBSrsi
    0U,	// RSBSrsr
    0U,	// SMLALv5
    0U,	// SMULLv5
    0U,	// SPACE
    15662U,	// STRBT_POST
    0U,	// STRBi_preidx
    0U,	// STRBr_preidx
    0U,	// STRH_preidx
    15746U,	// STRT_POST
    0U,	// STRi_preidx
    0U,	// STRr_preidx
    0U,	// SUBS_PC_LR
    0U,	// SUBSri
    0U,	// SUBSrr
    0U,	// SUBSrsi
    0U,	// SUBSrsr
    0U,	// TAILJMPd
    0U,	// TAILJMPr
    0U,	// TAILJMPr4
    0U,	// TCRETURNdi
    0U,	// TCRETURNri
    0U,	// TPsoft
    0U,	// UMLALv5
    0U,	// UMULLv5
    153198U,	// VLD1LNdAsm_16
    284270U,	// VLD1LNdAsm_32
    415342U,	// VLD1LNdAsm_8
    153198U,	// VLD1LNdWB_fixed_Asm_16
    284270U,	// VLD1LNdWB_fixed_Asm_32
    415342U,	// VLD1LNdWB_fixed_Asm_8
    157294U,	// VLD1LNdWB_register_Asm_16
    288366U,	// VLD1LNdWB_register_Asm_32
    419438U,	// VLD1LNdWB_register_Asm_8
    153242U,	// VLD2LNdAsm_16
    284314U,	// VLD2LNdAsm_32
    415386U,	// VLD2LNdAsm_8
    153242U,	// VLD2LNdWB_fixed_Asm_16
    284314U,	// VLD2LNdWB_fixed_Asm_32
    415386U,	// VLD2LNdWB_fixed_Asm_8
    157338U,	// VLD2LNdWB_register_Asm_16
    288410U,	// VLD2LNdWB_register_Asm_32
    419482U,	// VLD2LNdWB_register_Asm_8
    153242U,	// VLD2LNqAsm_16
    284314U,	// VLD2LNqAsm_32
    153242U,	// VLD2LNqWB_fixed_Asm_16
    284314U,	// VLD2LNqWB_fixed_Asm_32
    157338U,	// VLD2LNqWB_register_Asm_16
    288410U,	// VLD2LNqWB_register_Asm_32
    1107457722U,	// VLD3DUPdAsm_16
    1107588794U,	// VLD3DUPdAsm_32
    1107719866U,	// VLD3DUPdAsm_8
    2181199546U,	// VLD3DUPdWB_fixed_Asm_16
    2181330618U,	// VLD3DUPdWB_fixed_Asm_32
    2181461690U,	// VLD3DUPdWB_fixed_Asm_8
    33707706U,	// VLD3DUPdWB_register_Asm_16
    33838778U,	// VLD3DUPdWB_register_Asm_32
    33969850U,	// VLD3DUPdWB_register_Asm_8
    1124234938U,	// VLD3DUPqAsm_16
    1124366010U,	// VLD3DUPqAsm_32
    1124497082U,	// VLD3DUPqAsm_8
    2197976762U,	// VLD3DUPqWB_fixed_Asm_16
    2198107834U,	// VLD3DUPqWB_fixed_Asm_32
    2198238906U,	// VLD3DUPqWB_fixed_Asm_8
    50484922U,	// VLD3DUPqWB_register_Asm_16
    50615994U,	// VLD3DUPqWB_register_Asm_32
    50747066U,	// VLD3DUPqWB_register_Asm_8
    153274U,	// VLD3LNdAsm_16
    284346U,	// VLD3LNdAsm_32
    415418U,	// VLD3LNdAsm_8
    153274U,	// VLD3LNdWB_fixed_Asm_16
    284346U,	// VLD3LNdWB_fixed_Asm_32
    415418U,	// VLD3LNdWB_fixed_Asm_8
    157370U,	// VLD3LNdWB_register_Asm_16
    288442U,	// VLD3LNdWB_register_Asm_32
    419514U,	// VLD3LNdWB_register_Asm_8
    153274U,	// VLD3LNqAsm_16
    284346U,	// VLD3LNqAsm_32
    153274U,	// VLD3LNqWB_fixed_Asm_16
    284346U,	// VLD3LNqWB_fixed_Asm_32
    157370U,	// VLD3LNqWB_register_Asm_16
    288442U,	// VLD3LNqWB_register_Asm_32
    3288495802U,	// VLD3dAsm_16
    3288626874U,	// VLD3dAsm_32
    3288757946U,	// VLD3dAsm_8
    3288495802U,	// VLD3dWB_fixed_Asm_16
    3288626874U,	// VLD3dWB_fixed_Asm_32
    3288757946U,	// VLD3dWB_fixed_Asm_8
    3288487610U,	// VLD3dWB_register_Asm_16
    3288618682U,	// VLD3dWB_register_Asm_32
    3288749754U,	// VLD3dWB_register_Asm_8
    1157789370U,	// VLD3qAsm_16
    1157920442U,	// VLD3qAsm_32
    1158051514U,	// VLD3qAsm_8
    2231531194U,	// VLD3qWB_fixed_Asm_16
    2231662266U,	// VLD3qWB_fixed_Asm_32
    2231793338U,	// VLD3qWB_fixed_Asm_8
    84039354U,	// VLD3qWB_register_Asm_16
    84170426U,	// VLD3qWB_register_Asm_32
    84301498U,	// VLD3qWB_register_Asm_8
    1174566609U,	// VLD4DUPdAsm_16
    1174697681U,	// VLD4DUPdAsm_32
    1174828753U,	// VLD4DUPdAsm_8
    2248308433U,	// VLD4DUPdWB_fixed_Asm_16
    2248439505U,	// VLD4DUPdWB_fixed_Asm_32
    2248570577U,	// VLD4DUPdWB_fixed_Asm_8
    100816593U,	// VLD4DUPdWB_register_Asm_16
    100947665U,	// VLD4DUPdWB_register_Asm_32
    101078737U,	// VLD4DUPdWB_register_Asm_8
    1191343825U,	// VLD4DUPqAsm_16
    1191474897U,	// VLD4DUPqAsm_32
    1191605969U,	// VLD4DUPqAsm_8
    2265085649U,	// VLD4DUPqWB_fixed_Asm_16
    2265216721U,	// VLD4DUPqWB_fixed_Asm_32
    2265347793U,	// VLD4DUPqWB_fixed_Asm_8
    117593809U,	// VLD4DUPqWB_register_Asm_16
    117724881U,	// VLD4DUPqWB_register_Asm_32
    117855953U,	// VLD4DUPqWB_register_Asm_8
    153297U,	// VLD4LNdAsm_16
    284369U,	// VLD4LNdAsm_32
    415441U,	// VLD4LNdAsm_8
    153297U,	// VLD4LNdWB_fixed_Asm_16
    284369U,	// VLD4LNdWB_fixed_Asm_32
    415441U,	// VLD4LNdWB_fixed_Asm_8
    157393U,	// VLD4LNdWB_register_Asm_16
    288465U,	// VLD4LNdWB_register_Asm_32
    419537U,	// VLD4LNdWB_register_Asm_8
    153297U,	// VLD4LNqAsm_16
    284369U,	// VLD4LNqAsm_32
    153297U,	// VLD4LNqWB_fixed_Asm_16
    284369U,	// VLD4LNqWB_fixed_Asm_32
    157393U,	// VLD4LNqWB_register_Asm_16
    288465U,	// VLD4LNqWB_register_Asm_32
    3355604689U,	// VLD4dAsm_16
    3355735761U,	// VLD4dAsm_32
    3355866833U,	// VLD4dAsm_8
    3355604689U,	// VLD4dWB_fixed_Asm_16
    3355735761U,	// VLD4dWB_fixed_Asm_32
    3355866833U,	// VLD4dWB_fixed_Asm_8
    3355596497U,	// VLD4dWB_register_Asm_16
    3355727569U,	// VLD4dWB_register_Asm_32
    3355858641U,	// VLD4dWB_register_Asm_8
    1224898257U,	// VLD4qAsm_16
    1225029329U,	// VLD4qAsm_32
    1225160401U,	// VLD4qAsm_8
    2298640081U,	// VLD4qWB_fixed_Asm_16
    2298771153U,	// VLD4qWB_fixed_Asm_32
    2298902225U,	// VLD4qWB_fixed_Asm_8
    151148241U,	// VLD4qWB_register_Asm_16
    151279313U,	// VLD4qWB_register_Asm_32
    151410385U,	// VLD4qWB_register_Asm_8
    0U,	// VMOVD0
    0U,	// VMOVDcc
    0U,	// VMOVQ0
    0U,	// VMOVScc
    153209U,	// VST1LNdAsm_16
    284281U,	// VST1LNdAsm_32
    415353U,	// VST1LNdAsm_8
    153209U,	// VST1LNdWB_fixed_Asm_16
    284281U,	// VST1LNdWB_fixed_Asm_32
    415353U,	// VST1LNdWB_fixed_Asm_8
    157305U,	// VST1LNdWB_register_Asm_16
    288377U,	// VST1LNdWB_register_Asm_32
    419449U,	// VST1LNdWB_register_Asm_8
    153269U,	// VST2LNdAsm_16
    284341U,	// VST2LNdAsm_32
    415413U,	// VST2LNdAsm_8
    153269U,	// VST2LNdWB_fixed_Asm_16
    284341U,	// VST2LNdWB_fixed_Asm_32
    415413U,	// VST2LNdWB_fixed_Asm_8
    157365U,	// VST2LNdWB_register_Asm_16
    288437U,	// VST2LNdWB_register_Asm_32
    419509U,	// VST2LNdWB_register_Asm_8
    153269U,	// VST2LNqAsm_16
    284341U,	// VST2LNqAsm_32
    153269U,	// VST2LNqWB_fixed_Asm_16
    284341U,	// VST2LNqWB_fixed_Asm_32
    157365U,	// VST2LNqWB_register_Asm_16
    288437U,	// VST2LNqWB_register_Asm_32
    153285U,	// VST3LNdAsm_16
    284357U,	// VST3LNdAsm_32
    415429U,	// VST3LNdAsm_8
    153285U,	// VST3LNdWB_fixed_Asm_16
    284357U,	// VST3LNdWB_fixed_Asm_32
    415429U,	// VST3LNdWB_fixed_Asm_8
    157381U,	// VST3LNdWB_register_Asm_16
    288453U,	// VST3LNdWB_register_Asm_32
    419525U,	// VST3LNdWB_register_Asm_8
    153285U,	// VST3LNqAsm_16
    284357U,	// VST3LNqAsm_32
    153285U,	// VST3LNqWB_fixed_Asm_16
    284357U,	// VST3LNqWB_fixed_Asm_32
    157381U,	// VST3LNqWB_register_Asm_16
    288453U,	// VST3LNqWB_register_Asm_32
    3288495813U,	// VST3dAsm_16
    3288626885U,	// VST3dAsm_32
    3288757957U,	// VST3dAsm_8
    3288495813U,	// VST3dWB_fixed_Asm_16
    3288626885U,	// VST3dWB_fixed_Asm_32
    3288757957U,	// VST3dWB_fixed_Asm_8
    3288487621U,	// VST3dWB_register_Asm_16
    3288618693U,	// VST3dWB_register_Asm_32
    3288749765U,	// VST3dWB_register_Asm_8
    1157789381U,	// VST3qAsm_16
    1157920453U,	// VST3qAsm_32
    1158051525U,	// VST3qAsm_8
    2231531205U,	// VST3qWB_fixed_Asm_16
    2231662277U,	// VST3qWB_fixed_Asm_32
    2231793349U,	// VST3qWB_fixed_Asm_8
    84039365U,	// VST3qWB_register_Asm_16
    84170437U,	// VST3qWB_register_Asm_32
    84301509U,	// VST3qWB_register_Asm_8
    153302U,	// VST4LNdAsm_16
    284374U,	// VST4LNdAsm_32
    415446U,	// VST4LNdAsm_8
    153302U,	// VST4LNdWB_fixed_Asm_16
    284374U,	// VST4LNdWB_fixed_Asm_32
    415446U,	// VST4LNdWB_fixed_Asm_8
    157398U,	// VST4LNdWB_register_Asm_16
    288470U,	// VST4LNdWB_register_Asm_32
    419542U,	// VST4LNdWB_register_Asm_8
    153302U,	// VST4LNqAsm_16
    284374U,	// VST4LNqAsm_32
    153302U,	// VST4LNqWB_fixed_Asm_16
    284374U,	// VST4LNqWB_fixed_Asm_32
    157398U,	// VST4LNqWB_register_Asm_16
    288470U,	// VST4LNqWB_register_Asm_32
    3355604694U,	// VST4dAsm_16
    3355735766U,	// VST4dAsm_32
    3355866838U,	// VST4dAsm_8
    3355604694U,	// VST4dWB_fixed_Asm_16
    3355735766U,	// VST4dWB_fixed_Asm_32
    3355866838U,	// VST4dWB_fixed_Asm_8
    3355596502U,	// VST4dWB_register_Asm_16
    3355727574U,	// VST4dWB_register_Asm_32
    3355858646U,	// VST4dWB_register_Asm_8
    1224898262U,	// VST4qAsm_16
    1225029334U,	// VST4qAsm_32
    1225160406U,	// VST4qAsm_8
    2298640086U,	// VST4qWB_fixed_Asm_16
    2298771158U,	// VST4qWB_fixed_Asm_32
    2298902230U,	// VST4qWB_fixed_Asm_8
    151148246U,	// VST4qWB_register_Asm_16
    151279318U,	// VST4qWB_register_Asm_32
    151410390U,	// VST4qWB_register_Asm_8
    0U,	// WIN__CHKSTK
    0U,	// WIN__DBZCHK
    0U,	// t2ABS
    0U,	// t2ADDSri
    0U,	// t2ADDSrr
    0U,	// t2ADDSrs
    0U,	// t2BR_JT
    0U,	// t2LDMIA_RET
    14508U,	// t2LDRBpcrel
    15443U,	// t2LDRConstPool
    14929U,	// t2LDRHpcrel
    14526U,	// t2LDRSBpcrel
    14948U,	// t2LDRSHpcrel
    0U,	// t2LDRpci_pic
    15443U,	// t2LDRpcrel
    0U,	// t2LEApcrel
    0U,	// t2LEApcrelJT
    0U,	// t2MOVCCasr
    0U,	// t2MOVCCi
    0U,	// t2MOVCCi16
    0U,	// t2MOVCCi32imm
    0U,	// t2MOVCClsl
    0U,	// t2MOVCClsr
    0U,	// t2MOVCCr
    0U,	// t2MOVCCror
    31992U,	// t2MOVSsi
    23800U,	// t2MOVSsr
    0U,	// t2MOVTi16_ga_pcrel
    0U,	// t2MOV_ga_pcrel
    0U,	// t2MOVi16_ga_pcrel
    0U,	// t2MOVi32imm
    32234U,	// t2MOVsi
    24042U,	// t2MOVsr
    0U,	// t2MVNCCi
    0U,	// t2RSBSri
    0U,	// t2RSBSrs
    0U,	// t2STRB_preidx
    0U,	// t2STRH_preidx
    0U,	// t2STR_preidx
    0U,	// t2SUBSri
    0U,	// t2SUBSrr
    0U,	// t2SUBSrs
    0U,	// t2TBB_JT
    0U,	// t2TBH_JT
    0U,	// tADCS
    0U,	// tADDSi3
    0U,	// tADDSi8
    0U,	// tADDSrr
    0U,	// tADDframe
    0U,	// tADJCALLSTACKDOWN
    0U,	// tADJCALLSTACKUP
    0U,	// tBRIND
    0U,	// tBR_JTr
    0U,	// tBX_CALL
    0U,	// tBX_RET
    0U,	// tBX_RET_vararg
    0U,	// tBfar
    0U,	// tLDMIA_UPD
    15443U,	// tLDRConstPool
    0U,	// tLDRLIT_ga_abs
    0U,	// tLDRLIT_ga_pcrel
    0U,	// tLDR_postidx
    0U,	// tLDRpci_pic
    0U,	// tLEApcrel
    0U,	// tLEApcrelJT
    0U,	// tMOVCCr_pseudo
    0U,	// tPOP_RET
    0U,	// tSBCS
    0U,	// tSUBSi3
    0U,	// tSUBSi8
    0U,	// tSUBSrr
    0U,	// tTAILJMPd
    0U,	// tTAILJMPdND
    0U,	// tTAILJMPr
    0U,	// tTBB_JT
    0U,	// tTBH_JT
    0U,	// tTPsoft
    530745U,	// ADCri
    530745U,	// ADCrr
    559417U,	// ADCrsi
    39225U,	// ADCrsr
    530806U,	// ADDri
    530806U,	// ADDrr
    559478U,	// ADDrsi
    39286U,	// ADDrsr
    539726U,	// ADR
    1242211449U,	// AESD
    1242211457U,	// AESE
    1258988646U,	// AESIMC
    1258988656U,	// AESMC
    530859U,	// ANDri
    530859U,	// ANDrr
    559531U,	// ANDrsi
    39339U,	// ANDrsr
    555329U,	// BFC
    547483U,	// BFI
    530758U,	// BICri
    530758U,	// BICrr
    559430U,	// BICrsi
    39238U,	// BICrsr
    828725U,	// BKPT
    828697U,	// BL
    828772U,	// BLX
    1074314916U,	// BLX_pred
    828772U,	// BLXi
    1074313964U,	// BL_pred
    828768U,	// BX
    1074313901U,	// BXJ
    970304U,	// BX_RET
    1074314816U,	// BX_pred
    1074313296U,	// Bcc
    201907225U,	// CDP
    219210157U,	// CDP2
    3726U,	// CLREX
    540368U,	// CLZ
    539583U,	// CMNri
    539583U,	// CMNzrr
    555967U,	// CMNzrsi
    547775U,	// CMNzrsr
    539683U,	// CMPri
    539683U,	// CMPrr
    556067U,	// CMPrsi
    547875U,	// CMPrsr
    828709U,	// CPS1p
    1309211869U,	// CPS2p
    235470045U,	// CPS3p
    185246891U,	// CRC32B
    185246899U,	// CRC32CB
    185246973U,	// CRC32CH
    185247057U,	// CRC32CW
    185246965U,	// CRC32H
    185247049U,	// CRC32W
    1074313739U,	// DBG
    66762U,	// DMB
    66767U,	// DSB
    531562U,	// EORri
    531562U,	// EORrr
    560234U,	// EORrsi
    40042U,	// EORrsr
    838971U,	// ERET
    1326595561U,	// FCONSTD
    1326726633U,	// FCONSTH
    1326857705U,	// FCONSTS
    2332573243U,	// FLDMXDB_UPD
    572932U,	// FLDMXIA
    2332573188U,	// FLDMXIA_UPD
    1625313U,	// FMSTAT
    2332573251U,	// FSTMXDB_UPD
    572940U,	// FSTMXIA
    2332573196U,	// FSTMXIA_UPD
    1074314610U,	// HINT
    828720U,	// HLT
    828638U,	// HVC
    70868U,	// ISB
    538616U,	// LDA
    538701U,	// LDAB
    540284U,	// LDAEX
    538905U,	// LDAEXB
    268974533U,	// LDAEXD
    539263U,	// LDAEXH
    539165U,	// LDAH
    286975243U,	// LDC2L_OFFSET
    3524977931U,	// LDC2L_OPTION
    303752459U,	// LDC2L_POST
    320529675U,	// LDC2L_PRE
    286974356U,	// LDC2_OFFSET
    3524977044U,	// LDC2_OPTION
    303751572U,	// LDC2_POST
    320528788U,	// LDC2_PRE
    1275615989U,	// LDCL_OFFSET
    1275615989U,	// LDCL_OPTION
    1275615989U,	// LDCL_POST
    1275615989U,	// LDCL_PRE
    1275615549U,	// LDC_OFFSET
    1275615549U,	// LDC_OPTION
    1275615549U,	// LDC_POST
    1275615549U,	// LDC_PRE
    571388U,	// LDMDA
    2332571644U,	// LDMDA_UPD
    571519U,	// LDMDB
    2332571775U,	// LDMDB_UPD
    572300U,	// LDMIA
    2332572556U,	// LDMIA_UPD
    571538U,	// LDMIB
    2332571794U,	// LDMIB_UPD
    552232U,	// LDRBT_POST_IMM
    552232U,	// LDRBT_POST_REG
    551084U,	// LDRB_POST_IMM
    551084U,	// LDRB_POST_REG
    546988U,	// LDRB_PRE_IMM
    551084U,	// LDRB_PRE_REG
    555180U,	// LDRBi12
    546988U,	// LDRBrs
    551343U,	// LDRD
    580015U,	// LDRD_POST
    580015U,	// LDRD_PRE
    540296U,	// LDREX
    538919U,	// LDREXB
    268974547U,	// LDREXD
    539277U,	// LDREXH
    547409U,	// LDRH
    548171U,	// LDRHTi
    552267U,	// LDRHTr
    551505U,	// LDRH_POST
    551505U,	// LDRH_PRE
    547006U,	// LDRSB
    548148U,	// LDRSBTi
    552244U,	// LDRSBTr
    551102U,	// LDRSB_POST
    551102U,	// LDRSB_PRE
    547428U,	// LDRSH
    548183U,	// LDRSHTi
    552279U,	// LDRSHTr
    551524U,	// LDRSH_POST
    551524U,	// LDRSH_PRE
    552311U,	// LDRT_POST_IMM
    552311U,	// LDRT_POST_REG
    552019U,	// LDR_POST_IMM
    552019U,	// LDR_POST_REG
    547923U,	// LDR_PRE_IMM
    552019U,	// LDR_PRE_REG
    556115U,	// LDRcp
    556115U,	// LDRi12
    547923U,	// LDRrs
    201907274U,	// MCR
    168878515U,	// MCR2
    201878642U,	// MCRR
    168878521U,	// MCRR2
    559140U,	// MLA
    548021U,	// MLS
    1887722U,	// MOVPCLR
    556471U,	// MOVTi16
    544234U,	// MOVi
    540159U,	// MOVi16
    544234U,	// MOVr
    544234U,	// MOVr_TC
    531946U,	// MOVsi
    560618U,	// MOVsr
    336124238U,	// MRC
    74138U,	// MRC2
    352872786U,	// MRRC
    78240U,	// MRRC2
    2148056290U,	// MRS
    539874U,	// MRSbanked
    3221798114U,	// MRSsys
    369638536U,	// MSR
    386415752U,	// MSRbanked
    369638536U,	// MSRi
    531317U,	// MUL
    543747U,	// MVNi
    543747U,	// MVNr
    531459U,	// MVNsi
    560131U,	// MVNsr
    531576U,	// ORRri
    531576U,	// ORRrr
    560248U,	// ORRrsi
    40056U,	// ORRrsr
    548115U,	// PKHBT
    547023U,	// PKHTB
    83290U,	// PLDWi12
    87386U,	// PLDWrs
    83171U,	// PLDi12
    87267U,	// PLDrs
    83206U,	// PLIi12
    87302U,	// PLIrs
    555406U,	// QADD
    554800U,	// QADD16
    554903U,	// QADD8
    556729U,	// QASX
    555380U,	// QDADD
    555252U,	// QDSUB
    556588U,	// QSAX
    555265U,	// QSUB
    554762U,	// QSUB16
    554864U,	// QSUB8
    539998U,	// RBIT
    540118U,	// REV
    538452U,	// REV16
    539247U,	// REVSH
    828573U,	// RFEDA
    2008221U,	// RFEDA_UPD
    828604U,	// RFEDB
    2008252U,	// RFEDB_UPD
    828580U,	// RFEIA
    2008228U,	// RFEIA_UPD
    828611U,	// RFEIB
    2008259U,	// RFEIB_UPD
    530624U,	// RSBri
    530624U,	// RSBrr
    559296U,	// RSBrsi
    39104U,	// RSBrsr
    530775U,	// RSCri
    530775U,	// RSCrr
    559447U,	// RSCrsi
    39255U,	// RSCrsr
    554807U,	// SADD16
    554909U,	// SADD8
    556734U,	// SASX
    530741U,	// SBCri
    530741U,	// SBCrr
    559413U,	// SBCrsi
    39221U,	// SBCrsr
    548506U,	// SBFX
    556506U,	// SDIV
    555794U,	// SEL
    91368U,	// SETEND
    828701U,	// SETPAN
    168468546U,	// SHA1C
    1258987596U,	// SHA1H
    168468578U,	// SHA1M
    168468588U,	// SHA1P
    168468481U,	// SHA1SU0
    1242210331U,	// SHA1SU1
    168468566U,	// SHA256H
    168468533U,	// SHA256H2
    1242210317U,	// SHA256SU0
    168468519U,	// SHA256SU1
    554783U,	// SHADD16
    554888U,	// SHADD8
    556716U,	// SHASX
    556575U,	// SHSAX
    554745U,	// SHSUB16
    554849U,	// SHSUB8
    1074313546U,	// SMC
    546910U,	// SMLABB
    548108U,	// SMLABT
    547171U,	// SMLAD
    548432U,	// SMLADX
    96984U,	// SMLAL
    579685U,	// SMLALBB
    580889U,	// SMLALBT
    579992U,	// SMLALD
    581214U,	// SMLALDX
    579797U,	// SMLALTB
    581011U,	// SMLALTT
    547016U,	// SMLATB
    548236U,	// SMLATT
    547083U,	// SMLAWB
    548284U,	// SMLAWT
    547257U,	// SMLSD
    548462U,	// SMLSDX
    580003U,	// SMLSLD
    581222U,	// SMLSLDX
    546850U,	// SMMLA
    547907U,	// SMMLAR
    548019U,	// SMMLS
    547968U,	// SMMLSR
    555891U,	// SMMUL
    556130U,	// SMMULR
    555369U,	// SMUAD
    556631U,	// SMUADX
    555117U,	// SMULBB
    556321U,	// SMULBT
    559946U,	// SMULL
    555229U,	// SMULTB
    556443U,	// SMULTT
    555282U,	// SMULWB
    556483U,	// SMULWT
    555455U,	// SMUSD
    556661U,	// SMUSDX
    828836U,	// SRSDA
    828788U,	// SRSDA_UPD
    828858U,	// SRSDB
    828812U,	// SRSDB_UPD
    828847U,	// SRSIA
    828800U,	// SRSIA_UPD
    828869U,	// SRSIB
    828824U,	// SRSIB_UPD
    548093U,	// SSAT
    554821U,	// SSAT16
    556593U,	// SSAX
    554769U,	// SSUB16
    554870U,	// SSUB8
    286975250U,	// STC2L_OFFSET
    3524977938U,	// STC2L_OPTION
    303752466U,	// STC2L_POST
    320529682U,	// STC2L_PRE
    286974375U,	// STC2_OFFSET
    3524977063U,	// STC2_OPTION
    303751591U,	// STC2_POST
    320528807U,	// STC2_PRE
    1275615994U,	// STCL_OFFSET
    1275615994U,	// STCL_OPTION
    1275615994U,	// STCL_POST
    1275615994U,	// STCL_PRE
    1275615579U,	// STC_OFFSET
    1275615579U,	// STC_OPTION
    1275615579U,	// STC_POST
    1275615579U,	// STC_PRE
    539503U,	// STL
    538782U,	// STLB
    556674U,	// STLEX
    555296U,	// STLEXB
    555468U,	// STLEXD
    555654U,	// STLEXH
    539195U,	// STLH
    571394U,	// STMDA
    2332571650U,	// STMDA_UPD
    571526U,	// STMDB
    2332571782U,	// STMDB_UPD
    572306U,	// STMIA
    2332572562U,	// STMIA_UPD
    571544U,	// STMIB
    2332571800U,	// STMIB_UPD
    185101614U,	// STRBT_POST_IMM
    185101614U,	// STRBT_POST_REG
    185100465U,	// STRB_POST_IMM
    185100465U,	// STRB_POST_REG
    185096369U,	// STRB_PRE_IMM
    185100465U,	// STRB_PRE_REG
    555185U,	// STRBi12
    546993U,	// STRBrs
    551348U,	// STRD
    185129396U,	// STRD_POST
    185129396U,	// STRD_PRE
    556692U,	// STREX
    555310U,	// STREXB
    555482U,	// STREXD
    555668U,	// STREXH
    547414U,	// STRH
    185097553U,	// STRHTi
    185101649U,	// STRHTr
    185100886U,	// STRH_POST
    185100886U,	// STRH_PRE
    185101698U,	// STRT_POST_IMM
    185101698U,	// STRT_POST_REG
    185101460U,	// STR_POST_IMM
    185101460U,	// STR_POST_REG
    185097364U,	// STR_PRE_IMM
    185101460U,	// STR_PRE_REG
    556180U,	// STRi12
    547988U,	// STRrs
    530678U,	// SUBri
    530678U,	// SUBrr
    559350U,	// SUBrsi
    39158U,	// SUBrsr
    1074313567U,	// SVC
    556081U,	// SWP
    555175U,	// SWPB
    546898U,	// SXTAB
    546523U,	// SXTAB16
    547371U,	// SXTAH
    555242U,	// SXTB
    554731U,	// SXTB16
    555637U,	// SXTH
    539711U,	// TEQri
    539711U,	// TEQrr
    556095U,	// TEQrsi
    547903U,	// TEQrsr
    3092U,	// TRAP
    3092U,	// TRAPNaCl
    99545U,	// TSB
    540040U,	// TSTri
    540040U,	// TSTrr
    556424U,	// TSTrsi
    548232U,	// TSTrsr
    554814U,	// UADD16
    554915U,	// UADD8
    556739U,	// UASX
    548511U,	// UBFX
    828656U,	// UDF
    556511U,	// UDIV
    554791U,	// UHADD16
    554895U,	// UHADD8
    556722U,	// UHASX
    556581U,	// UHSAX
    554753U,	// UHSUB16
    554856U,	// UHSUB8
    580285U,	// UMAAL
    96990U,	// UMLAL
    559952U,	// UMULL
    554799U,	// UQADD16
    554902U,	// UQADD8
    556728U,	// UQASX
    556587U,	// UQSAX
    554761U,	// UQSUB16
    554863U,	// UQSUB8
    554882U,	// USAD8
    546650U,	// USADA8
    548098U,	// USAT
    554828U,	// USAT16
    556598U,	// USAX
    554776U,	// USUB16
    554876U,	// USUB8
    546904U,	// UXTAB
    546531U,	// UXTAB16
    547377U,	// UXTAH
    555247U,	// UXTB
    554738U,	// UXTB16
    555642U,	// UXTH
    169892547U,	// VABALsv2i64
    170023619U,	// VABALsv4i32
    170154691U,	// VABALsv8i16
    170285763U,	// VABALuv2i64
    170416835U,	// VABALuv4i32
    170547907U,	// VABALuv8i16
    170153971U,	// VABAsv16i8
    169891827U,	// VABAsv2i32
    170022899U,	// VABAsv4i16
    169891827U,	// VABAsv4i32
    170022899U,	// VABAsv8i16
    170153971U,	// VABAsv8i8
    170547187U,	// VABAuv16i8
    170285043U,	// VABAuv2i32
    170416115U,	// VABAuv4i16
    170285043U,	// VABAuv4i32
    170416115U,	// VABAuv8i16
    170547187U,	// VABAuv8i8
    186678015U,	// VABDLsv2i64
    186809087U,	// VABDLsv4i32
    186940159U,	// VABDLsv8i16
    187071231U,	// VABDLuv2i64
    187202303U,	// VABDLuv4i32
    187333375U,	// VABDLuv8i16
    253131119U,	// VABDfd
    253131119U,	// VABDfq
    253000047U,	// VABDhd
    253000047U,	// VABDhq
    186939759U,	// VABDsv16i8
    186677615U,	// VABDsv2i32
    186808687U,	// VABDsv4i16
    186677615U,	// VABDsv4i32
    186808687U,	// VABDsv8i16
    186939759U,	// VABDsv8i8
    187332975U,	// VABDuv16i8
    187070831U,	// VABDuv2i32
    187201903U,	// VABDuv4i16
    187070831U,	// VABDuv4i32
    187201903U,	// VABDuv8i16
    187332975U,	// VABDuv8i8
    252853412U,	// VABSD
    252984484U,	// VABSH
    253115556U,	// VABSS
    253115556U,	// VABSfd
    253115556U,	// VABSfq
    252984484U,	// VABShd
    252984484U,	// VABShq
    1260666020U,	// VABSv16i8
    1260403876U,	// VABSv2i32
    1260534948U,	// VABSv4i16
    1260403876U,	// VABSv4i32
    1260534948U,	// VABSv8i16
    1260666020U,	// VABSv8i8
    253131233U,	// VACGEfd
    253131233U,	// VACGEfq
    253000161U,	// VACGEhd
    253000161U,	// VACGEhq
    253132096U,	// VACGTfd
    253132096U,	// VACGTfq
    253001024U,	// VACGThd
    253001024U,	// VACGThq
    252869011U,	// VADDD
    253000083U,	// VADDH
    187464621U,	// VADDHNv2i32
    187595693U,	// VADDHNv4i16
    187726765U,	// VADDHNv8i8
    186678028U,	// VADDLsv2i64
    186809100U,	// VADDLsv4i32
    186940172U,	// VADDLsv8i16
    187071244U,	// VADDLuv2i64
    187202316U,	// VADDLuv4i32
    187333388U,	// VADDLuv8i16
    253131155U,	// VADDS
    186678772U,	// VADDWsv2i64
    186809844U,	// VADDWsv4i32
    186940916U,	// VADDWsv8i16
    187071988U,	// VADDWuv2i64
    187203060U,	// VADDWuv4i32
    187334132U,	// VADDWuv8i16
    253131155U,	// VADDfd
    253131155U,	// VADDfq
    253000083U,	// VADDhd
    253000083U,	// VADDhq
    187857299U,	// VADDv16i8
    187464083U,	// VADDv1i64
    187595155U,	// VADDv2i32
    187464083U,	// VADDv2i64
    187726227U,	// VADDv4i16
    187595155U,	// VADDv4i32
    187726227U,	// VADDv8i16
    187857299U,	// VADDv8i8
    555434U,	// VANDd
    555434U,	// VANDq
    555333U,	// VBICd
    405698885U,	// VBICiv2i32
    405829957U,	// VBICiv4i16
    405698885U,	// VBICiv4i32
    405829957U,	// VBICiv8i16
    555333U,	// VBICq
    547334U,	// VBIFd
    547334U,	// VBIFq
    548195U,	// VBITd
    548195U,	// VBITq
    547676U,	// VBSLd
    547676U,	// VBSLq
    185245957U,	// VCADDv2f32
    185246658U,	// VCADDv4f16
    185245957U,	// VCADDv4f32
    185246658U,	// VCADDv8f16
    253131834U,	// VCEQfd
    253131834U,	// VCEQfq
    253000762U,	// VCEQhd
    253000762U,	// VCEQhq
    187857978U,	// VCEQv16i8
    187595834U,	// VCEQv2i32
    187726906U,	// VCEQv4i16
    187595834U,	// VCEQv4i32
    187726906U,	// VCEQv8i16
    187857978U,	// VCEQv8i8
    1261583418U,	// VCEQzv16i8
    253115450U,	// VCEQzv2f32
    1261321274U,	// VCEQzv2i32
    252984378U,	// VCEQzv4f16
    253115450U,	// VCEQzv4f32
    1261452346U,	// VCEQzv4i16
    1261321274U,	// VCEQzv4i32
    252984378U,	// VCEQzv8f16
    1261452346U,	// VCEQzv8i16
    1261583418U,	// VCEQzv8i8
    253131239U,	// VCGEfd
    253131239U,	// VCGEfq
    253000167U,	// VCGEhd
    253000167U,	// VCGEhq
    186939879U,	// VCGEsv16i8
    186677735U,	// VCGEsv2i32
    186808807U,	// VCGEsv4i16
    186677735U,	// VCGEsv4i32
    186808807U,	// VCGEsv8i16
    186939879U,	// VCGEsv8i8
    187333095U,	// VCGEuv16i8
    187070951U,	// VCGEuv2i32
    187202023U,	// VCGEuv4i16
    187070951U,	// VCGEuv4i32
    187202023U,	// VCGEuv8i16
    187333095U,	// VCGEuv8i8
    1260665319U,	// VCGEzv16i8
    253114855U,	// VCGEzv2f32
    1260403175U,	// VCGEzv2i32
    252983783U,	// VCGEzv4f16
    253114855U,	// VCGEzv4f32
    1260534247U,	// VCGEzv4i16
    1260403175U,	// VCGEzv4i32
    252983783U,	// VCGEzv8f16
    1260534247U,	// VCGEzv8i16
    1260665319U,	// VCGEzv8i8
    253132102U,	// VCGTfd
    253132102U,	// VCGTfq
    253001030U,	// VCGThd
    253001030U,	// VCGThq
    186940742U,	// VCGTsv16i8
    186678598U,	// VCGTsv2i32
    186809670U,	// VCGTsv4i16
    186678598U,	// VCGTsv4i32
    186809670U,	// VCGTsv8i16
    186940742U,	// VCGTsv8i8
    187333958U,	// VCGTuv16i8
    187071814U,	// VCGTuv2i32
    187202886U,	// VCGTuv4i16
    187071814U,	// VCGTuv4i32
    187202886U,	// VCGTuv8i16
    187333958U,	// VCGTuv8i8
    1260666182U,	// VCGTzv16i8
    253115718U,	// VCGTzv2f32
    1260404038U,	// VCGTzv2i32
    252984646U,	// VCGTzv4f16
    253115718U,	// VCGTzv4f32
    1260535110U,	// VCGTzv4i16
    1260404038U,	// VCGTzv4i32
    252984646U,	// VCGTzv8f16
    1260535110U,	// VCGTzv8i16
    1260666182U,	// VCGTzv8i8
    1260665324U,	// VCLEzv16i8
    253114860U,	// VCLEzv2f32
    1260403180U,	// VCLEzv2i32
    252983788U,	// VCLEzv4f16
    253114860U,	// VCLEzv4f32
    1260534252U,	// VCLEzv4i16
    1260403180U,	// VCLEzv4i32
    252983788U,	// VCLEzv8f16
    1260534252U,	// VCLEzv8i16
    1260665324U,	// VCLEzv8i8
    1260666030U,	// VCLSv16i8
    1260403886U,	// VCLSv2i32
    1260534958U,	// VCLSv4i16
    1260403886U,	// VCLSv4i32
    1260534958U,	// VCLSv8i16
    1260666030U,	// VCLSv8i8
    1260666216U,	// VCLTzv16i8
    253115752U,	// VCLTzv2f32
    1260404072U,	// VCLTzv2i32
    252984680U,	// VCLTzv4f16
    253115752U,	// VCLTzv4f32
    1260535144U,	// VCLTzv4i16
    1260404072U,	// VCLTzv4i32
    252984680U,	// VCLTzv8f16
    1260535144U,	// VCLTzv8i16
    1260666216U,	// VCLTzv8i8
    1261584079U,	// VCLZv16i8
    1261321935U,	// VCLZv2i32
    1261453007U,	// VCLZv4i16
    1261321935U,	// VCLZv4i32
    1261453007U,	// VCLZv8i16
    1261584079U,	// VCLZv8i8
    168468718U,	// VCMLAv2f32
    168468718U,	// VCMLAv2f32_indexed
    168469419U,	// VCMLAv4f16
    168469419U,	// VCMLAv4f16_indexed
    168468718U,	// VCMLAv4f32
    168468718U,	// VCMLAv4f32_indexed
    168469419U,	// VCMLAv8f16
    168469419U,	// VCMLAv8f16_indexed
    252853282U,	// VCMPD
    252852728U,	// VCMPED
    252983800U,	// VCMPEH
    253114872U,	// VCMPES
    420657656U,	// VCMPEZD
    420788728U,	// VCMPEZH
    420919800U,	// VCMPEZS
    252984354U,	// VCMPH
    253115426U,	// VCMPS
    420658210U,	// VCMPZD
    420789282U,	// VCMPZH
    420920354U,	// VCMPZS
    408941U,	// VCNTd
    408941U,	// VCNTq
    1258987638U,	// VCVTANSDf
    1258988339U,	// VCVTANSDh
    1258987638U,	// VCVTANSQf
    1258988339U,	// VCVTANSQh
    1258987698U,	// VCVTANUDf
    1258988399U,	// VCVTANUDh
    1258987698U,	// VCVTANUQf
    1258988399U,	// VCVTANUQh
    1258987968U,	// VCVTASD
    1258988219U,	// VCVTASH
    1258987638U,	// VCVTASS
    1258988028U,	// VCVTAUD
    1258988279U,	// VCVTAUH
    1258987698U,	// VCVTAUS
    3422436U,	// VCVTBDH
    3553508U,	// VCVTBHD
    3684580U,	// VCVTBHS
    3815652U,	// VCVTBSH
    3947954U,	// VCVTDS
    1258987653U,	// VCVTMNSDf
    1258988354U,	// VCVTMNSDh
    1258987653U,	// VCVTMNSQf
    1258988354U,	// VCVTMNSQh
    1258987713U,	// VCVTMNUDf
    1258988414U,	// VCVTMNUDh
    1258987713U,	// VCVTMNUQf
    1258988414U,	// VCVTMNUQh
    1258987983U,	// VCVTMSD
    1258988234U,	// VCVTMSH
    1258987653U,	// VCVTMSS
    1258988043U,	// VCVTMUD
    1258988294U,	// VCVTMUH
    1258987713U,	// VCVTMUS
    1258987668U,	// VCVTNNSDf
    1258988369U,	// VCVTNNSDh
    1258987668U,	// VCVTNNSQf
    1258988369U,	// VCVTNNSQh
    1258987728U,	// VCVTNNUDf
    1258988429U,	// VCVTNNUDh
    1258987728U,	// VCVTNNUQf
    1258988429U,	// VCVTNNUQh
    1258987998U,	// VCVTNSD
    1258988249U,	// VCVTNSH
    1258987668U,	// VCVTNSS
    1258988058U,	// VCVTNUD
    1258988309U,	// VCVTNUH
    1258987728U,	// VCVTNUS
    1258987683U,	// VCVTPNSDf
    1258988384U,	// VCVTPNSDh
    1258987683U,	// VCVTPNSQf
    1258988384U,	// VCVTPNSQh
    1258987743U,	// VCVTPNUDf
    1258988444U,	// VCVTPNUDh
    1258987743U,	// VCVTPNUQf
    1258988444U,	// VCVTPNUQh
    1258988013U,	// VCVTPSD
    1258988264U,	// VCVTPSH
    1258987683U,	// VCVTPSS
    1258988073U,	// VCVTPUD
    1258988324U,	// VCVTPUH
    1258987743U,	// VCVTPUS
    4079026U,	// VCVTSD
    3423654U,	// VCVTTDH
    3554726U,	// VCVTTHD
    3685798U,	// VCVTTHS
    3816870U,	// VCVTTSH
    3816882U,	// VCVTf2h
    440417714U,	// VCVTf2sd
    440417714U,	// VCVTf2sq
    440548786U,	// VCVTf2ud
    440548786U,	// VCVTf2uq
    2403368370U,	// VCVTf2xsd
    2403368370U,	// VCVTf2xsq
    2403499442U,	// VCVTf2xud
    2403499442U,	// VCVTf2xuq
    3685810U,	// VCVTh2f
    440679858U,	// VCVTh2sd
    440679858U,	// VCVTh2sq
    440810930U,	// VCVTh2ud
    440810930U,	// VCVTh2uq
    2403630514U,	// VCVTh2xsd
    2403630514U,	// VCVTh2xsq
    2403761586U,	// VCVTh2xud
    2403761586U,	// VCVTh2xuq
    440942002U,	// VCVTs2fd
    440942002U,	// VCVTs2fq
    441073074U,	// VCVTs2hd
    441073074U,	// VCVTs2hq
    441204146U,	// VCVTu2fd
    441204146U,	// VCVTu2fq
    441335218U,	// VCVTu2hd
    441335218U,	// VCVTu2hq
    2403892658U,	// VCVTxs2fd
    2403892658U,	// VCVTxs2fq
    2404023730U,	// VCVTxs2hd
    2404023730U,	// VCVTxs2hq
    2404154802U,	// VCVTxu2fd
    2404154802U,	// VCVTxu2fq
    2404285874U,	// VCVTxu2hd
    2404285874U,	// VCVTxu2hq
    252870116U,	// VDIVD
    253001188U,	// VDIVH
    253132260U,	// VDIVS
    146475U,	// VDUP16d
    146475U,	// VDUP16q
    277547U,	// VDUP32d
    277547U,	// VDUP32q
    408619U,	// VDUP8d
    408619U,	// VDUP8q
    162859U,	// VDUPLN16d
    162859U,	// VDUPLN16q
    293931U,	// VDUPLN32d
    293931U,	// VDUPLN32q
    425003U,	// VDUPLN8d
    425003U,	// VDUPLN8q
    556137U,	// VEORd
    556137U,	// VEORq
    155082U,	// VEXTd16
    286154U,	// VEXTd32
    417226U,	// VEXTd8
    155082U,	// VEXTq16
    286154U,	// VEXTq32
    5266890U,	// VEXTq64
    417226U,	// VEXTq8
    2400344115U,	// VFMAD
    2400475187U,	// VFMAH
    2400606259U,	// VFMAS
    2400606259U,	// VFMAfd
    2400606259U,	// VFMAfq
    2400475187U,	// VFMAhd
    2400475187U,	// VFMAhq
    2400345284U,	// VFMSD
    2400476356U,	// VFMSH
    2400607428U,	// VFMSS
    2400607428U,	// VFMSfd
    2400607428U,	// VFMSfq
    2400476356U,	// VFMShd
    2400476356U,	// VFMShq
    2400344120U,	// VFNMAD
    2400475192U,	// VFNMAH
    2400606264U,	// VFNMAS
    2400345289U,	// VFNMSD
    2400476361U,	// VFNMSH
    2400607433U,	// VFNMSS
    294377U,	// VGETLNi32
    3408035305U,	// VGETLNs16
    3408166377U,	// VGETLNs8
    3408428521U,	// VGETLNu16
    3408559593U,	// VGETLNu8
    186939777U,	// VHADDsv16i8
    186677633U,	// VHADDsv2i32
    186808705U,	// VHADDsv4i16
    186677633U,	// VHADDsv4i32
    186808705U,	// VHADDsv8i16
    186939777U,	// VHADDsv8i8
    187332993U,	// VHADDuv16i8
    187070849U,	// VHADDuv2i32
    187201921U,	// VHADDuv4i16
    187070849U,	// VHADDuv4i32
    187201921U,	// VHADDuv8i16
    187332993U,	// VHADDuv8i8
    186939642U,	// VHSUBsv16i8
    186677498U,	// VHSUBsv2i32
    186808570U,	// VHSUBsv4i16
    186677498U,	// VHSUBsv4i32
    186808570U,	// VHSUBsv8i16
    186939642U,	// VHSUBsv8i8
    187332858U,	// VHSUBuv16i8
    187070714U,	// VHSUBuv2i32
    187201786U,	// VHSUBuv4i16
    187070714U,	// VHSUBuv4i32
    187201786U,	// VHSUBuv8i16
    187332858U,	// VHSUBuv8i8
    1258988577U,	// VINSH
    441597356U,	// VJCVT
    3674371694U,	// VLD1DUPd16
    453138030U,	// VLD1DUPd16wb_fixed
    453142126U,	// VLD1DUPd16wb_register
    3674502766U,	// VLD1DUPd32
    453269102U,	// VLD1DUPd32wb_fixed
    453273198U,	// VLD1DUPd32wb_register
    3674633838U,	// VLD1DUPd8
    453400174U,	// VLD1DUPd8wb_fixed
    453404270U,	// VLD1DUPd8wb_register
    3691148910U,	// VLD1DUPq16
    469915246U,	// VLD1DUPq16wb_fixed
    469919342U,	// VLD1DUPq16wb_register
    3691279982U,	// VLD1DUPq32
    470046318U,	// VLD1DUPq32wb_fixed
    470050414U,	// VLD1DUPq32wb_register
    3691411054U,	// VLD1DUPq8
    470177390U,	// VLD1DUPq8wb_fixed
    470181486U,	// VLD1DUPq8wb_register
    1079273070U,	// VLD1LNd16
    1079350894U,	// VLD1LNd16_UPD
    1079404142U,	// VLD1LNd32
    1079481966U,	// VLD1LNd32_UPD
    1079535214U,	// VLD1LNd8
    1079613038U,	// VLD1LNd8_UPD
    0U,	// VLD1LNq16Pseudo
    0U,	// VLD1LNq16Pseudo_UPD
    0U,	// VLD1LNq32Pseudo
    0U,	// VLD1LNq32Pseudo_UPD
    0U,	// VLD1LNq8Pseudo
    0U,	// VLD1LNq8Pseudo_UPD
    3707926126U,	// VLD1d16
    3355604590U,	// VLD1d16Q
    0U,	// VLD1d16QPseudo
    134370926U,	// VLD1d16Qwb_fixed
    134375022U,	// VLD1d16Qwb_register
    3288495726U,	// VLD1d16T
    0U,	// VLD1d16TPseudo
    67262062U,	// VLD1d16Twb_fixed
    67266158U,	// VLD1d16Twb_register
    486692462U,	// VLD1d16wb_fixed
    486696558U,	// VLD1d16wb_register
    3708057198U,	// VLD1d32
    3355735662U,	// VLD1d32Q
    0U,	// VLD1d32QPseudo
    134501998U,	// VLD1d32Qwb_fixed
    134506094U,	// VLD1d32Qwb_register
    3288626798U,	// VLD1d32T
    0U,	// VLD1d32TPseudo
    67393134U,	// VLD1d32Twb_fixed
    67397230U,	// VLD1d32Twb_register
    486823534U,	// VLD1d32wb_fixed
    486827630U,	// VLD1d32wb_register
    3713037934U,	// VLD1d64
    3360716398U,	// VLD1d64Q
    0U,	// VLD1d64QPseudo
    0U,	// VLD1d64QPseudoWB_fixed
    0U,	// VLD1d64QPseudoWB_register
    139482734U,	// VLD1d64Qwb_fixed
    139486830U,	// VLD1d64Qwb_register
    3293607534U,	// VLD1d64T
    0U,	// VLD1d64TPseudo
    0U,	// VLD1d64TPseudoWB_fixed
    0U,	// VLD1d64TPseudoWB_register
    72373870U,	// VLD1d64Twb_fixed
    72377966U,	// VLD1d64Twb_register
    491804270U,	// VLD1d64wb_fixed
    491808366U,	// VLD1d64wb_register
    3708188270U,	// VLD1d8
    3355866734U,	// VLD1d8Q
    0U,	// VLD1d8QPseudo
    134633070U,	// VLD1d8Qwb_fixed
    134637166U,	// VLD1d8Qwb_register
    3288757870U,	// VLD1d8T
    0U,	// VLD1d8TPseudo
    67524206U,	// VLD1d8Twb_fixed
    67528302U,	// VLD1d8Twb_register
    486954606U,	// VLD1d8wb_fixed
    486958702U,	// VLD1d8wb_register
    3724703342U,	// VLD1q16
    0U,	// VLD1q16HighQPseudo
    0U,	// VLD1q16HighTPseudo
    0U,	// VLD1q16LowQPseudo_UPD
    0U,	// VLD1q16LowTPseudo_UPD
    503469678U,	// VLD1q16wb_fixed
    503473774U,	// VLD1q16wb_register
    3724834414U,	// VLD1q32
    0U,	// VLD1q32HighQPseudo
    0U,	// VLD1q32HighTPseudo
    0U,	// VLD1q32LowQPseudo_UPD
    0U,	// VLD1q32LowTPseudo_UPD
    503600750U,	// VLD1q32wb_fixed
    503604846U,	// VLD1q32wb_register
    3729815150U,	// VLD1q64
    0U,	// VLD1q64HighQPseudo
    0U,	// VLD1q64HighTPseudo
    0U,	// VLD1q64LowQPseudo_UPD
    0U,	// VLD1q64LowTPseudo_UPD
    508581486U,	// VLD1q64wb_fixed
    508585582U,	// VLD1q64wb_register
    3724965486U,	// VLD1q8
    0U,	// VLD1q8HighQPseudo
    0U,	// VLD1q8HighTPseudo
    0U,	// VLD1q8LowQPseudo_UPD
    0U,	// VLD1q8LowTPseudo_UPD
    503731822U,	// VLD1q8wb_fixed
    503735918U,	// VLD1q8wb_register
    3691148954U,	// VLD2DUPd16
    469915290U,	// VLD2DUPd16wb_fixed
    469919386U,	// VLD2DUPd16wb_register
    3741480602U,	// VLD2DUPd16x2
    520246938U,	// VLD2DUPd16x2wb_fixed
    520251034U,	// VLD2DUPd16x2wb_register
    3691280026U,	// VLD2DUPd32
    470046362U,	// VLD2DUPd32wb_fixed
    470050458U,	// VLD2DUPd32wb_register
    3741611674U,	// VLD2DUPd32x2
    520378010U,	// VLD2DUPd32x2wb_fixed
    520382106U,	// VLD2DUPd32x2wb_register
    3691411098U,	// VLD2DUPd8
    470177434U,	// VLD2DUPd8wb_fixed
    470181530U,	// VLD2DUPd8wb_register
    3741742746U,	// VLD2DUPd8x2
    520509082U,	// VLD2DUPd8x2wb_fixed
    520513178U,	// VLD2DUPd8x2wb_register
    0U,	// VLD2DUPq16EvenPseudo
    0U,	// VLD2DUPq16OddPseudo
    0U,	// VLD2DUPq32EvenPseudo
    0U,	// VLD2DUPq32OddPseudo
    0U,	// VLD2DUPq8EvenPseudo
    0U,	// VLD2DUPq8OddPseudo
    1079350938U,	// VLD2LNd16
    0U,	// VLD2LNd16Pseudo
    0U,	// VLD2LNd16Pseudo_UPD
    1079355034U,	// VLD2LNd16_UPD
    1079482010U,	// VLD2LNd32
    0U,	// VLD2LNd32Pseudo
    0U,	// VLD2LNd32Pseudo_UPD
    1079486106U,	// VLD2LNd32_UPD
    1079613082U,	// VLD2LNd8
    0U,	// VLD2LNd8Pseudo
    0U,	// VLD2LNd8Pseudo_UPD
    1079617178U,	// VLD2LNd8_UPD
    1079350938U,	// VLD2LNq16
    0U,	// VLD2LNq16Pseudo
    0U,	// VLD2LNq16Pseudo_UPD
    1079355034U,	// VLD2LNq16_UPD
    1079482010U,	// VLD2LNq32
    0U,	// VLD2LNq32Pseudo
    0U,	// VLD2LNq32Pseudo_UPD
    1079486106U,	// VLD2LNq32_UPD
    3758257818U,	// VLD2b16
    537024154U,	// VLD2b16wb_fixed
    537028250U,	// VLD2b16wb_register
    3758388890U,	// VLD2b32
    537155226U,	// VLD2b32wb_fixed
    537159322U,	// VLD2b32wb_register
    3758519962U,	// VLD2b8
    537286298U,	// VLD2b8wb_fixed
    537290394U,	// VLD2b8wb_register
    3724703386U,	// VLD2d16
    503469722U,	// VLD2d16wb_fixed
    503473818U,	// VLD2d16wb_register
    3724834458U,	// VLD2d32
    503600794U,	// VLD2d32wb_fixed
    503604890U,	// VLD2d32wb_register
    3724965530U,	// VLD2d8
    503731866U,	// VLD2d8wb_fixed
    503735962U,	// VLD2d8wb_register
    3355604634U,	// VLD2q16
    0U,	// VLD2q16Pseudo
    0U,	// VLD2q16PseudoWB_fixed
    0U,	// VLD2q16PseudoWB_register
    134370970U,	// VLD2q16wb_fixed
    134375066U,	// VLD2q16wb_register
    3355735706U,	// VLD2q32
    0U,	// VLD2q32Pseudo
    0U,	// VLD2q32PseudoWB_fixed
    0U,	// VLD2q32PseudoWB_register
    134502042U,	// VLD2q32wb_fixed
    134506138U,	// VLD2q32wb_register
    3355866778U,	// VLD2q8
    0U,	// VLD2q8Pseudo
    0U,	// VLD2q8PseudoWB_fixed
    0U,	// VLD2q8PseudoWB_register
    134633114U,	// VLD2q8wb_fixed
    134637210U,	// VLD2q8wb_register
    2153014970U,	// VLD3DUPd16
    0U,	// VLD3DUPd16Pseudo
    0U,	// VLD3DUPd16Pseudo_UPD
    2153092794U,	// VLD3DUPd16_UPD
    2153146042U,	// VLD3DUPd32
    0U,	// VLD3DUPd32Pseudo
    0U,	// VLD3DUPd32Pseudo_UPD
    2153223866U,	// VLD3DUPd32_UPD
    2153277114U,	// VLD3DUPd8
    0U,	// VLD3DUPd8Pseudo
    0U,	// VLD3DUPd8Pseudo_UPD
    2153354938U,	// VLD3DUPd8_UPD
    2153014970U,	// VLD3DUPq16
    0U,	// VLD3DUPq16EvenPseudo
    0U,	// VLD3DUPq16OddPseudo
    2153092794U,	// VLD3DUPq16_UPD
    2153146042U,	// VLD3DUPq32
    0U,	// VLD3DUPq32EvenPseudo
    0U,	// VLD3DUPq32OddPseudo
    2153223866U,	// VLD3DUPq32_UPD
    2153277114U,	// VLD3DUPq8
    0U,	// VLD3DUPq8EvenPseudo
    0U,	// VLD3DUPq8OddPseudo
    2153354938U,	// VLD3DUPq8_UPD
    1079355066U,	// VLD3LNd16
    0U,	// VLD3LNd16Pseudo
    0U,	// VLD3LNd16Pseudo_UPD
    1079359162U,	// VLD3LNd16_UPD
    1079486138U,	// VLD3LNd32
    0U,	// VLD3LNd32Pseudo
    0U,	// VLD3LNd32Pseudo_UPD
    1079490234U,	// VLD3LNd32_UPD
    1079617210U,	// VLD3LNd8
    0U,	// VLD3LNd8Pseudo
    0U,	// VLD3LNd8Pseudo_UPD
    1079621306U,	// VLD3LNd8_UPD
    1079355066U,	// VLD3LNq16
    0U,	// VLD3LNq16Pseudo
    0U,	// VLD3LNq16Pseudo_UPD
    1079359162U,	// VLD3LNq16_UPD
    1079486138U,	// VLD3LNq32
    0U,	// VLD3LNq32Pseudo
    0U,	// VLD3LNq32Pseudo_UPD
    1079490234U,	// VLD3LNq32_UPD
    5531322U,	// VLD3d16
    0U,	// VLD3d16Pseudo
    0U,	// VLD3d16Pseudo_UPD
    5609146U,	// VLD3d16_UPD
    5662394U,	// VLD3d32
    0U,	// VLD3d32Pseudo
    0U,	// VLD3d32Pseudo_UPD
    5740218U,	// VLD3d32_UPD
    5793466U,	// VLD3d8
    0U,	// VLD3d8Pseudo
    0U,	// VLD3d8Pseudo_UPD
    5871290U,	// VLD3d8_UPD
    5531322U,	// VLD3q16
    0U,	// VLD3q16Pseudo_UPD
    5609146U,	// VLD3q16_UPD
    0U,	// VLD3q16oddPseudo
    0U,	// VLD3q16oddPseudo_UPD
    5662394U,	// VLD3q32
    0U,	// VLD3q32Pseudo_UPD
    5740218U,	// VLD3q32_UPD
    0U,	// VLD3q32oddPseudo
    0U,	// VLD3q32oddPseudo_UPD
    5793466U,	// VLD3q8
    0U,	// VLD3q8Pseudo_UPD
    5871290U,	// VLD3q8_UPD
    0U,	// VLD3q8oddPseudo
    0U,	// VLD3q8oddPseudo_UPD
    2153043665U,	// VLD4DUPd16
    0U,	// VLD4DUPd16Pseudo
    0U,	// VLD4DUPd16Pseudo_UPD
    2153105105U,	// VLD4DUPd16_UPD
    2153174737U,	// VLD4DUPd32
    0U,	// VLD4DUPd32Pseudo
    0U,	// VLD4DUPd32Pseudo_UPD
    2153236177U,	// VLD4DUPd32_UPD
    2153305809U,	// VLD4DUPd8
    0U,	// VLD4DUPd8Pseudo
    0U,	// VLD4DUPd8Pseudo_UPD
    2153367249U,	// VLD4DUPd8_UPD
    2153043665U,	// VLD4DUPq16
    0U,	// VLD4DUPq16EvenPseudo
    0U,	// VLD4DUPq16OddPseudo
    2153105105U,	// VLD4DUPq16_UPD
    2153174737U,	// VLD4DUPq32
    0U,	// VLD4DUPq32EvenPseudo
    0U,	// VLD4DUPq32OddPseudo
    2153236177U,	// VLD4DUPq32_UPD
    2153305809U,	// VLD4DUPq8
    0U,	// VLD4DUPq8EvenPseudo
    0U,	// VLD4DUPq8OddPseudo
    2153367249U,	// VLD4DUPq8_UPD
    1079359185U,	// VLD4LNd16
    0U,	// VLD4LNd16Pseudo
    0U,	// VLD4LNd16Pseudo_UPD
    1079367377U,	// VLD4LNd16_UPD
    1079490257U,	// VLD4LNd32
    0U,	// VLD4LNd32Pseudo
    0U,	// VLD4LNd32Pseudo_UPD
    1079498449U,	// VLD4LNd32_UPD
    1079621329U,	// VLD4LNd8
    0U,	// VLD4LNd8Pseudo
    0U,	// VLD4LNd8Pseudo_UPD
    1079629521U,	// VLD4LNd8_UPD
    1079359185U,	// VLD4LNq16
    0U,	// VLD4LNq16Pseudo
    0U,	// VLD4LNq16Pseudo_UPD
    1079367377U,	// VLD4LNq16_UPD
    1079490257U,	// VLD4LNq32
    0U,	// VLD4LNq32Pseudo
    0U,	// VLD4LNq32Pseudo_UPD
    1079498449U,	// VLD4LNq32_UPD
    5560017U,	// VLD4d16
    0U,	// VLD4d16Pseudo
    0U,	// VLD4d16Pseudo_UPD
    5621457U,	// VLD4d16_UPD
    5691089U,	// VLD4d32
    0U,	// VLD4d32Pseudo
    0U,	// VLD4d32Pseudo_UPD
    5752529U,	// VLD4d32_UPD
    5822161U,	// VLD4d8
    0U,	// VLD4d8Pseudo
    0U,	// VLD4d8Pseudo_UPD
    5883601U,	// VLD4d8_UPD
    5560017U,	// VLD4q16
    0U,	// VLD4q16Pseudo_UPD
    5621457U,	// VLD4q16_UPD
    0U,	// VLD4q16oddPseudo
    0U,	// VLD4q16oddPseudo_UPD
    5691089U,	// VLD4q32
    0U,	// VLD4q32Pseudo_UPD
    5752529U,	// VLD4q32_UPD
    0U,	// VLD4q32oddPseudo
    0U,	// VLD4q32oddPseudo_UPD
    5822161U,	// VLD4q8
    0U,	// VLD4q8Pseudo_UPD
    5883601U,	// VLD4q8_UPD
    0U,	// VLD4q8oddPseudo
    0U,	// VLD4q8oddPseudo_UPD
    2332571774U,	// VLDMDDB_UPD
    571406U,	// VLDMDIA
    2332571662U,	// VLDMDIA_UPD
    0U,	// VLDMQIA
    2332571774U,	// VLDMSDB_UPD
    571406U,	// VLDMSIA
    2332571662U,	// VLDMSIA_UPD
    556114U,	// VLDRD
    162898U,	// VLDRH
    556114U,	// VLDRS
    1074314122U,	// VLLDM
    1074314128U,	// VLSTM
    185246300U,	// VMAXNMD
    185246693U,	// VMAXNMH
    185245992U,	// VMAXNMNDf
    185246693U,	// VMAXNMNDh
    185245992U,	// VMAXNMNQf
    185246693U,	// VMAXNMNQh
    185245992U,	// VMAXNMS
    253132314U,	// VMAXfd
    253132314U,	// VMAXfq
    253001242U,	// VMAXhd
    253001242U,	// VMAXhq
    186940954U,	// VMAXsv16i8
    186678810U,	// VMAXsv2i32
    186809882U,	// VMAXsv4i16
    186678810U,	// VMAXsv4i32
    186809882U,	// VMAXsv8i16
    186940954U,	// VMAXsv8i8
    187334170U,	// VMAXuv16i8
    187072026U,	// VMAXuv2i32
    187203098U,	// VMAXuv4i16
    187072026U,	// VMAXuv4i32
    187203098U,	// VMAXuv8i16
    187334170U,	// VMAXuv8i8
    185246288U,	// VMINNMD
    185246681U,	// VMINNMH
    185245980U,	// VMINNMNDf
    185246681U,	// VMINNMNDh
    185245980U,	// VMINNMNQf
    185246681U,	// VMINNMNQh
    185245980U,	// VMINNMS
    253131706U,	// VMINfd
    253131706U,	// VMINfq
    253000634U,	// VMINhd
    253000634U,	// VMINhq
    186940346U,	// VMINsv16i8
    186678202U,	// VMINsv2i32
    186809274U,	// VMINsv4i16
    186678202U,	// VMINsv4i32
    186809274U,	// VMINsv8i16
    186940346U,	// VMINsv8i8
    187333562U,	// VMINuv16i8
    187071418U,	// VMINuv2i32
    187202490U,	// VMINuv4i16
    187071418U,	// VMINuv4i32
    187202490U,	// VMINuv8i16
    187333562U,	// VMINuv8i8
    2400344110U,	// VMLAD
    2400475182U,	// VMLAH
    169896676U,	// VMLALslsv2i32
    170027748U,	// VMLALslsv4i16
    170289892U,	// VMLALsluv2i32
    170420964U,	// VMLALsluv4i16
    169892580U,	// VMLALsv2i64
    170023652U,	// VMLALsv4i32
    170154724U,	// VMLALsv8i16
    170285796U,	// VMLALuv2i64
    170416868U,	// VMLALuv4i32
    170547940U,	// VMLALuv8i16
    2400606254U,	// VMLAS
    2400606254U,	// VMLAfd
    2400606254U,	// VMLAfq
    2400475182U,	// VMLAhd
    2400475182U,	// VMLAhq
    2400610350U,	// VMLAslfd
    2400610350U,	// VMLAslfq
    2400479278U,	// VMLAslhd
    2400479278U,	// VMLAslhq
    170813486U,	// VMLAslv2i32
    170944558U,	// VMLAslv4i16
    170813486U,	// VMLAslv4i32
    170944558U,	// VMLAslv8i16
    171071534U,	// VMLAv16i8
    170809390U,	// VMLAv2i32
    170940462U,	// VMLAv4i16
    170809390U,	// VMLAv4i32
    170940462U,	// VMLAv8i16
    171071534U,	// VMLAv8i8
    2400345279U,	// VMLSD
    2400476351U,	// VMLSH
    169896809U,	// VMLSLslsv2i32
    170027881U,	// VMLSLslsv4i16
    170290025U,	// VMLSLsluv2i32
    170421097U,	// VMLSLsluv4i16
    169892713U,	// VMLSLsv2i64
    170023785U,	// VMLSLsv4i32
    170154857U,	// VMLSLsv8i16
    170285929U,	// VMLSLuv2i64
    170417001U,	// VMLSLuv4i32
    170548073U,	// VMLSLuv8i16
    2400607423U,	// VMLSS
    2400607423U,	// VMLSfd
    2400607423U,	// VMLSfq
    2400476351U,	// VMLShd
    2400476351U,	// VMLShq
    2400611519U,	// VMLSslfd
    2400611519U,	// VMLSslfq
    2400480447U,	// VMLSslhd
    2400480447U,	// VMLSslhq
    170814655U,	// VMLSslv2i32
    170945727U,	// VMLSslv4i16
    170814655U,	// VMLSslv4i32
    170945727U,	// VMLSslv8i16
    171072703U,	// VMLSv16i8
    170810559U,	// VMLSv2i32
    170941631U,	// VMLSv4i16
    170810559U,	// VMLSv4i32
    170941631U,	// VMLSv8i16
    171072703U,	// VMLSv8i8
    252853737U,	// VMOVD
    556521U,	// VMOVDRR
    1258988623U,	// VMOVH
    252984809U,	// VMOVHR
    1260403588U,	// VMOVLsv2i64
    1260534660U,	// VMOVLsv4i32
    1260665732U,	// VMOVLsv8i16
    1260796804U,	// VMOVLuv2i64
    1260927876U,	// VMOVLuv4i32
    1261058948U,	// VMOVLuv8i16
    1261190158U,	// VMOVNv2i32
    1261321230U,	// VMOVNv4i16
    1261452302U,	// VMOVNv8i8
    252984809U,	// VMOVRH
    556521U,	// VMOVRRD
    548329U,	// VMOVRRS
    540137U,	// VMOVRS
    253115881U,	// VMOVS
    540137U,	// VMOVSR
    548329U,	// VMOVSRR
    405945833U,	// VMOVv16i8
    405552617U,	// VMOVv1i64
    1326857705U,	// VMOVv2f32
    405683689U,	// VMOVv2i32
    405552617U,	// VMOVv2i64
    1326857705U,	// VMOVv4f32
    405814761U,	// VMOVv4i16
    405683689U,	// VMOVv4i32
    405814761U,	// VMOVv8i16
    405945833U,	// VMOVv8i8
    3221798113U,	// VMRS
    572641U,	// VMRS_FPEXC
    1074314465U,	// VMRS_FPINST
    2148056289U,	// VMRS_FPINST2
    3221798113U,	// VMRS_FPSID
    572641U,	// VMRS_MVFR0
    1074314465U,	// VMRS_MVFR1
    2148056289U,	// VMRS_MVFR2
    5946503U,	// VMSR
    6077575U,	// VMSR_FPEXC
    6208647U,	// VMSR_FPINST
    6339719U,	// VMSR_FPINST2
    6470791U,	// VMSR_FPSID
    252869503U,	// VMULD
    253000575U,	// VMULH
    185246384U,	// VMULLp64
    6585174U,	// VMULLp8
    186669910U,	// VMULLslsv2i32
    186800982U,	// VMULLslsv4i16
    187063126U,	// VMULLsluv2i32
    187194198U,	// VMULLsluv4i16
    186678102U,	// VMULLsv2i64
    186809174U,	// VMULLsv4i32
    186940246U,	// VMULLsv8i16
    187071318U,	// VMULLuv2i64
    187202390U,	// VMULLuv4i32
    187333462U,	// VMULLuv8i16
    253131647U,	// VMULS
    253131647U,	// VMULfd
    253131647U,	// VMULfq
    253000575U,	// VMULhd
    253000575U,	// VMULhq
    6585215U,	// VMULpd
    6585215U,	// VMULpq
    253123455U,	// VMULslfd
    253123455U,	// VMULslfq
    252992383U,	// VMULslhd
    252992383U,	// VMULslhq
    187587455U,	// VMULslv2i32
    187718527U,	// VMULslv4i16
    187587455U,	// VMULslv4i32
    187718527U,	// VMULslv8i16
    187857791U,	// VMULv16i8
    187595647U,	// VMULv2i32
    187726719U,	// VMULv4i16
    187595647U,	// VMULv4i32
    187726719U,	// VMULv8i16
    187857791U,	// VMULv8i8
    539650U,	// VMVNd
    539650U,	// VMVNq
    405683202U,	// VMVNv2i32
    405814274U,	// VMVNv4i16
    405683202U,	// VMVNv4i32
    405814274U,	// VMVNv8i16
    252852757U,	// VNEGD
    252983829U,	// VNEGH
    253114901U,	// VNEGS
    253114901U,	// VNEGf32q
    253114901U,	// VNEGfd
    252983829U,	// VNEGhd
    252983829U,	// VNEGhq
    1260534293U,	// VNEGs16d
    1260534293U,	// VNEGs16q
    1260403221U,	// VNEGs32d
    1260403221U,	// VNEGs32q
    1260665365U,	// VNEGs8d
    1260665365U,	// VNEGs8q
    2400344104U,	// VNMLAD
    2400475176U,	// VNMLAH
    2400606248U,	// VNMLAS
    2400345273U,	// VNMLSD
    2400476345U,	// VNMLSH
    2400607417U,	// VNMLSS
    252869497U,	// VNMULD
    253000569U,	// VNMULH
    253131641U,	// VNMULS
    555999U,	// VORNd
    555999U,	// VORNq
    556151U,	// VORRd
    405699703U,	// VORRiv2i32
    405830775U,	// VORRiv4i16
    405699703U,	// VORRiv4i32
    405830775U,	// VORRiv8i16
    556151U,	// VORRq
    1243904713U,	// VPADALsv16i8
    1243642569U,	// VPADALsv2i32
    1243773641U,	// VPADALsv4i16
    1243642569U,	// VPADALsv4i32
    1243773641U,	// VPADALsv8i16
    1243904713U,	// VPADALsv8i8
    1244297929U,	// VPADALuv16i8
    1244035785U,	// VPADALuv2i32
    1244166857U,	// VPADALuv4i16
    1244035785U,	// VPADALuv4i32
    1244166857U,	// VPADALuv8i16
    1244297929U,	// VPADALuv8i8
    1260665605U,	// VPADDLsv16i8
    1260403461U,	// VPADDLsv2i32
    1260534533U,	// VPADDLsv4i16
    1260403461U,	// VPADDLsv4i32
    1260534533U,	// VPADDLsv8i16
    1260665605U,	// VPADDLsv8i8
    1261058821U,	// VPADDLuv16i8
    1260796677U,	// VPADDLuv2i32
    1260927749U,	// VPADDLuv4i16
    1260796677U,	// VPADDLuv4i32
    1260927749U,	// VPADDLuv8i16
    1261058821U,	// VPADDLuv8i8
    253131143U,	// VPADDf
    253000071U,	// VPADDh
    187726215U,	// VPADDi16
    187595143U,	// VPADDi32
    187857287U,	// VPADDi8
    253132308U,	// VPMAXf
    253001236U,	// VPMAXh
    186809876U,	// VPMAXs16
    186678804U,	// VPMAXs32
    186940948U,	// VPMAXs8
    187203092U,	// VPMAXu16
    187072020U,	// VPMAXu32
    187334164U,	// VPMAXu8
    253131700U,	// VPMINf
    253000628U,	// VPMINh
    186809268U,	// VPMINs16
    186678196U,	// VPMINs32
    186940340U,	// VPMINs8
    187202484U,	// VPMINu16
    187071412U,	// VPMINu32
    187333556U,	// VPMINu8
    1260666014U,	// VQABSv16i8
    1260403870U,	// VQABSv2i32
    1260534942U,	// VQABSv4i16
    1260403870U,	// VQABSv4i32
    1260534942U,	// VQABSv8i16
    1260666014U,	// VQABSv8i8
    186939789U,	// VQADDsv16i8
    191265165U,	// VQADDsv1i64
    186677645U,	// VQADDsv2i32
    191265165U,	// VQADDsv2i64
    186808717U,	// VQADDsv4i16
    186677645U,	// VQADDsv4i32
    186808717U,	// VQADDsv8i16
    186939789U,	// VQADDsv8i8
    187333005U,	// VQADDuv16i8
    191396237U,	// VQADDuv1i64
    187070861U,	// VQADDuv2i32
    191396237U,	// VQADDuv2i64
    187201933U,	// VQADDuv4i16
    187070861U,	// VQADDuv4i32
    187201933U,	// VQADDuv8i16
    187333005U,	// VQADDuv8i8
    169896656U,	// VQDMLALslv2i32
    170027728U,	// VQDMLALslv4i16
    169892560U,	// VQDMLALv2i64
    170023632U,	// VQDMLALv4i32
    169896801U,	// VQDMLSLslv2i32
    170027873U,	// VQDMLSLslv4i16
    169892705U,	// VQDMLSLv2i64
    170023777U,	// VQDMLSLv4i32
    186669632U,	// VQDMULHslv2i32
    186800704U,	// VQDMULHslv4i16
    186669632U,	// VQDMULHslv4i32
    186800704U,	// VQDMULHslv8i16
    186677824U,	// VQDMULHv2i32
    186808896U,	// VQDMULHv4i16
    186677824U,	// VQDMULHv4i32
    186808896U,	// VQDMULHv8i16
    186669890U,	// VQDMULLslv2i32
    186800962U,	// VQDMULLslv4i16
    186678082U,	// VQDMULLv2i64
    186809154U,	// VQDMULLv4i32
    1264991226U,	// VQMOVNsuv2i32
    1260403706U,	// VQMOVNsuv4i16
    1260534778U,	// VQMOVNsuv8i8
    1264991239U,	// VQMOVNsv2i32
    1260403719U,	// VQMOVNsv4i16
    1260534791U,	// VQMOVNsv8i8
    1265122311U,	// VQMOVNuv2i32
    1260796935U,	// VQMOVNuv4i16
    1260928007U,	// VQMOVNuv8i8
    1260665359U,	// VQNEGv16i8
    1260403215U,	// VQNEGv2i32
    1260534287U,	// VQNEGv4i16
    1260403215U,	// VQNEGv4i32
    1260534287U,	// VQNEGv8i16
    1260665359U,	// VQNEGv8i8
    169896482U,	// VQRDMLAHslv2i32
    170027554U,	// VQRDMLAHslv4i16
    169896482U,	// VQRDMLAHslv4i32
    170027554U,	// VQRDMLAHslv8i16
    169892386U,	// VQRDMLAHv2i32
    170023458U,	// VQRDMLAHv4i16
    169892386U,	// VQRDMLAHv4i32
    170023458U,	// VQRDMLAHv8i16
    169896539U,	// VQRDMLSHslv2i32
    170027611U,	// VQRDMLSHslv4i16
    169896539U,	// VQRDMLSHslv4i32
    170027611U,	// VQRDMLSHslv8i16
    169892443U,	// VQRDMLSHv2i32
    170023515U,	// VQRDMLSHv4i16
    169892443U,	// VQRDMLSHv4i32
    170023515U,	// VQRDMLSHv8i16
    186669640U,	// VQRDMULHslv2i32
    186800712U,	// VQRDMULHslv4i16
    186669640U,	// VQRDMULHslv4i32
    186800712U,	// VQRDMULHslv8i16
    186677832U,	// VQRDMULHv2i32
    186808904U,	// VQRDMULHv4i16
    186677832U,	// VQRDMULHv4i32
    186808904U,	// VQRDMULHv8i16
    186940188U,	// VQRSHLsv16i8
    191265564U,	// VQRSHLsv1i64
    186678044U,	// VQRSHLsv2i32
    191265564U,	// VQRSHLsv2i64
    186809116U,	// VQRSHLsv4i16
    186678044U,	// VQRSHLsv4i32
    186809116U,	// VQRSHLsv8i16
    186940188U,	// VQRSHLsv8i8
    187333404U,	// VQRSHLuv16i8
    191396636U,	// VQRSHLuv1i64
    187071260U,	// VQRSHLuv2i32
    191396636U,	// VQRSHLuv2i64
    187202332U,	// VQRSHLuv4i16
    187071260U,	// VQRSHLuv4i32
    187202332U,	// VQRSHLuv8i16
    187333404U,	// VQRSHLuv8i8
    191265738U,	// VQRSHRNsv2i32
    186678218U,	// VQRSHRNsv4i16
    186809290U,	// VQRSHRNsv8i8
    191396810U,	// VQRSHRNuv2i32
    187071434U,	// VQRSHRNuv4i16
    187202506U,	// VQRSHRNuv8i8
    191265777U,	// VQRSHRUNv2i32
    186678257U,	// VQRSHRUNv4i16
    186809329U,	// VQRSHRUNv8i8
    186940182U,	// VQSHLsiv16i8
    191265558U,	// VQSHLsiv1i64
    186678038U,	// VQSHLsiv2i32
    191265558U,	// VQSHLsiv2i64
    186809110U,	// VQSHLsiv4i16
    186678038U,	// VQSHLsiv4i32
    186809110U,	// VQSHLsiv8i16
    186940182U,	// VQSHLsiv8i8
    186940879U,	// VQSHLsuv16i8
    191266255U,	// VQSHLsuv1i64
    186678735U,	// VQSHLsuv2i32
    191266255U,	// VQSHLsuv2i64
    186809807U,	// VQSHLsuv4i16
    186678735U,	// VQSHLsuv4i32
    186809807U,	// VQSHLsuv8i16
    186940879U,	// VQSHLsuv8i8
    186940182U,	// VQSHLsv16i8
    191265558U,	// VQSHLsv1i64
    186678038U,	// VQSHLsv2i32
    191265558U,	// VQSHLsv2i64
    186809110U,	// VQSHLsv4i16
    186678038U,	// VQSHLsv4i32
    186809110U,	// VQSHLsv8i16
    186940182U,	// VQSHLsv8i8
    187333398U,	// VQSHLuiv16i8
    191396630U,	// VQSHLuiv1i64
    187071254U,	// VQSHLuiv2i32
    191396630U,	// VQSHLuiv2i64
    187202326U,	// VQSHLuiv4i16
    187071254U,	// VQSHLuiv4i32
    187202326U,	// VQSHLuiv8i16
    187333398U,	// VQSHLuiv8i8
    187333398U,	// VQSHLuv16i8
    191396630U,	// VQSHLuv1i64
    187071254U,	// VQSHLuv2i32
    191396630U,	// VQSHLuv2i64
    187202326U,	// VQSHLuv4i16
    187071254U,	// VQSHLuv4i32
    187202326U,	// VQSHLuv8i16
    187333398U,	// VQSHLuv8i8
    191265731U,	// VQSHRNsv2i32
    186678211U,	// VQSHRNsv4i16
    186809283U,	// VQSHRNsv8i8
    191396803U,	// VQSHRNuv2i32
    187071427U,	// VQSHRNuv4i16
    187202499U,	// VQSHRNuv8i8
    191265769U,	// VQSHRUNv2i32
    186678249U,	// VQSHRUNv4i16
    186809321U,	// VQSHRUNv8i8
    186939648U,	// VQSUBsv16i8
    191265024U,	// VQSUBsv1i64
    186677504U,	// VQSUBsv2i32
    191265024U,	// VQSUBsv2i64
    186808576U,	// VQSUBsv4i16
    186677504U,	// VQSUBsv4i32
    186808576U,	// VQSUBsv8i16
    186939648U,	// VQSUBsv8i8
    187332864U,	// VQSUBuv16i8
    191396096U,	// VQSUBuv1i64
    187070720U,	// VQSUBuv2i32
    191396096U,	// VQSUBuv2i64
    187201792U,	// VQSUBuv4i16
    187070720U,	// VQSUBuv4i32
    187201792U,	// VQSUBuv8i16
    187332864U,	// VQSUBuv8i8
    187464613U,	// VRADDHNv2i32
    187595685U,	// VRADDHNv4i16
    187726757U,	// VRADDHNv8i8
    1260796401U,	// VRECPEd
    253114865U,	// VRECPEfd
    253114865U,	// VRECPEfq
    252983793U,	// VRECPEhd
    252983793U,	// VRECPEhq
    1260796401U,	// VRECPEq
    253131994U,	// VRECPSfd
    253131994U,	// VRECPSfq
    253000922U,	// VRECPShd
    253000922U,	// VRECPShq
    407379U,	// VREV16d8
    407379U,	// VREV16q8
    145022U,	// VREV32d16
    407166U,	// VREV32d8
    145022U,	// VREV32q16
    407166U,	// VREV32q8
    145098U,	// VREV64d16
    276170U,	// VREV64d32
    407242U,	// VREV64d8
    145098U,	// VREV64q16
    276170U,	// VREV64q32
    407242U,	// VREV64q8
    186939770U,	// VRHADDsv16i8
    186677626U,	// VRHADDsv2i32
    186808698U,	// VRHADDsv4i16
    186677626U,	// VRHADDsv4i32
    186808698U,	// VRHADDsv8i16
    186939770U,	// VRHADDsv8i8
    187332986U,	// VRHADDuv16i8
    187070842U,	// VRHADDuv2i32
    187201914U,	// VRHADDuv4i16
    187070842U,	// VRHADDuv4i32
    187201914U,	// VRHADDuv8i16
    187332986U,	// VRHADDuv8i8
    1258988088U,	// VRINTAD
    1258988470U,	// VRINTAH
    1258987769U,	// VRINTANDf
    1258988470U,	// VRINTANDh
    1258987769U,	// VRINTANQf
    1258988470U,	// VRINTANQh
    1258987769U,	// VRINTAS
    1258988136U,	// VRINTMD
    1258988529U,	// VRINTMH
    1258987828U,	// VRINTMNDf
    1258988529U,	// VRINTMNDh
    1258987828U,	// VRINTMNQf
    1258988529U,	// VRINTMNQh
    1258987828U,	// VRINTMS
    1258988148U,	// VRINTND
    1258988541U,	// VRINTNH
    1258987840U,	// VRINTNNDf
    1258988541U,	// VRINTNNDh
    1258987840U,	// VRINTNNQf
    1258988541U,	// VRINTNNQh
    1258987840U,	// VRINTNS
    1258988160U,	// VRINTPD
    1258988553U,	// VRINTPH
    1258987852U,	// VRINTPNDf
    1258988553U,	// VRINTPNDh
    1258987852U,	// VRINTPNQf
    1258988553U,	// VRINTPNQh
    1258987852U,	// VRINTPS
    252853388U,	// VRINTRD
    252984460U,	// VRINTRH
    253115532U,	// VRINTRS
    252853960U,	// VRINTXD
    252985032U,	// VRINTXH
    1258987900U,	// VRINTXNDf
    1258988611U,	// VRINTXNDh
    1258987900U,	// VRINTXNQf
    1258988611U,	// VRINTXNQh
    253116104U,	// VRINTXS
    252853972U,	// VRINTZD
    252985044U,	// VRINTZH
    1258987912U,	// VRINTZNDf
    1258988634U,	// VRINTZNDh
    1258987912U,	// VRINTZNQf
    1258988634U,	// VRINTZNQh
    253116116U,	// VRINTZS
    186940195U,	// VRSHLsv16i8
    191265571U,	// VRSHLsv1i64
    186678051U,	// VRSHLsv2i32
    191265571U,	// VRSHLsv2i64
    186809123U,	// VRSHLsv4i16
    186678051U,	// VRSHLsv4i32
    186809123U,	// VRSHLsv8i16
    186940195U,	// VRSHLsv8i8
    187333411U,	// VRSHLuv16i8
    191396643U,	// VRSHLuv1i64
    187071267U,	// VRSHLuv2i32
    191396643U,	// VRSHLuv2i64
    187202339U,	// VRSHLuv4i16
    187071267U,	// VRSHLuv4i32
    187202339U,	// VRSHLuv8i16
    187333411U,	// VRSHLuv8i8
    187464658U,	// VRSHRNv2i32
    187595730U,	// VRSHRNv4i16
    187726802U,	// VRSHRNv8i8
    186940503U,	// VRSHRsv16i8
    191265879U,	// VRSHRsv1i64
    186678359U,	// VRSHRsv2i32
    191265879U,	// VRSHRsv2i64
    186809431U,	// VRSHRsv4i16
    186678359U,	// VRSHRsv4i32
    186809431U,	// VRSHRsv8i16
    186940503U,	// VRSHRsv8i8
    187333719U,	// VRSHRuv16i8
    191396951U,	// VRSHRuv1i64
    187071575U,	// VRSHRuv2i32
    191396951U,	// VRSHRuv2i64
    187202647U,	// VRSHRuv4i16
    187071575U,	// VRSHRuv4i32
    187202647U,	// VRSHRuv8i16
    187333719U,	// VRSHRuv8i8
    1260796414U,	// VRSQRTEd
    253114878U,	// VRSQRTEfd
    253114878U,	// VRSQRTEfq
    252983806U,	// VRSQRTEhd
    252983806U,	// VRSQRTEhq
    1260796414U,	// VRSQRTEq
    253132016U,	// VRSQRTSfd
    253132016U,	// VRSQRTSfq
    253000944U,	// VRSQRTShd
    253000944U,	// VRSQRTShq
    170154046U,	// VRSRAsv16i8
    174479422U,	// VRSRAsv1i64
    169891902U,	// VRSRAsv2i32
    174479422U,	// VRSRAsv2i64
    170022974U,	// VRSRAsv4i16
    169891902U,	// VRSRAsv4i32
    170022974U,	// VRSRAsv8i16
    170154046U,	// VRSRAsv8i8
    170547262U,	// VRSRAuv16i8
    174610494U,	// VRSRAuv1i64
    170285118U,	// VRSRAuv2i32
    174610494U,	// VRSRAuv2i64
    170416190U,	// VRSRAuv4i16
    170285118U,	// VRSRAuv4i32
    170416190U,	// VRSRAuv8i16
    170547262U,	// VRSRAuv8i8
    187464598U,	// VRSUBHNv2i32
    187595670U,	// VRSUBHNv4i16
    187726742U,	// VRSUBHNv8i8
    910473U,	// VSDOTD
    7070857U,	// VSDOTDI
    910473U,	// VSDOTQ
    7070857U,	// VSDOTQI
    185246348U,	// VSELEQD
    185246741U,	// VSELEQH
    185246040U,	// VSELEQS
    185246276U,	// VSELGED
    185246669U,	// VSELGEH
    185245968U,	// VSELGES
    185246372U,	// VSELGTD
    185246775U,	// VSELGTH
    185246064U,	// VSELGTS
    185246360U,	// VSELVSD
    185246763U,	// VSELVSH
    185246052U,	// VSELVSS
    3221380585U,	// VSETLNi16
    3221511657U,	// VSETLNi32
    3221642729U,	// VSETLNi8
    187726652U,	// VSHLLi16
    187595580U,	// VSHLLi32
    187857724U,	// VSHLLi8
    186678076U,	// VSHLLsv2i64
    186809148U,	// VSHLLsv4i32
    186940220U,	// VSHLLsv8i16
    187071292U,	// VSHLLuv2i64
    187202364U,	// VSHLLuv4i32
    187333436U,	// VSHLLuv8i16
    187857705U,	// VSHLiv16i8
    187464489U,	// VSHLiv1i64
    187595561U,	// VSHLiv2i32
    187464489U,	// VSHLiv2i64
    187726633U,	// VSHLiv4i16
    187595561U,	// VSHLiv4i32
    187726633U,	// VSHLiv8i16
    187857705U,	// VSHLiv8i8
    186940201U,	// VSHLsv16i8
    191265577U,	// VSHLsv1i64
    186678057U,	// VSHLsv2i32
    191265577U,	// VSHLsv2i64
    186809129U,	// VSHLsv4i16
    186678057U,	// VSHLsv4i32
    186809129U,	// VSHLsv8i16
    186940201U,	// VSHLsv8i8
    187333417U,	// VSHLuv16i8
    191396649U,	// VSHLuv1i64
    187071273U,	// VSHLuv2i32
    191396649U,	// VSHLuv2i64
    187202345U,	// VSHLuv4i16
    187071273U,	// VSHLuv4i32
    187202345U,	// VSHLuv8i16
    187333417U,	// VSHLuv8i8
    187464665U,	// VSHRNv2i32
    187595737U,	// VSHRNv4i16
    187726809U,	// VSHRNv8i8
    186940509U,	// VSHRsv16i8
    191265885U,	// VSHRsv1i64
    186678365U,	// VSHRsv2i32
    191265885U,	// VSHRsv2i64
    186809437U,	// VSHRsv4i16
    186678365U,	// VSHRsv4i32
    186809437U,	// VSHRsv8i16
    186940509U,	// VSHRsv8i8
    187333725U,	// VSHRuv16i8
    191396957U,	// VSHRuv1i64
    187071581U,	// VSHRuv2i32
    191396957U,	// VSHRuv2i64
    187202653U,	// VSHRuv4i16
    187071581U,	// VSHRuv4i32
    187202653U,	// VSHRuv8i16
    187333725U,	// VSHRuv8i8
    7110066U,	// VSHTOD
    256540082U,	// VSHTOH
    7241138U,	// VSHTOS
    443563442U,	// VSITOD
    443694514U,	// VSITOH
    440942002U,	// VSITOS
    416419U,	// VSLIv16i8
    5266083U,	// VSLIv1i64
    285347U,	// VSLIv2i32
    5266083U,	// VSLIv2i64
    154275U,	// VSLIv4i16
    285347U,	// VSLIv4i32
    154275U,	// VSLIv8i16
    416419U,	// VSLIv8i8
    1332772274U,	// VSLTOD
    1332903346U,	// VSLTOH
    1330150834U,	// VSLTOS
    252853628U,	// VSQRTD
    252984700U,	// VSQRTH
    253115772U,	// VSQRTS
    170154052U,	// VSRAsv16i8
    174479428U,	// VSRAsv1i64
    169891908U,	// VSRAsv2i32
    174479428U,	// VSRAsv2i64
    170022980U,	// VSRAsv4i16
    169891908U,	// VSRAsv4i32
    170022980U,	// VSRAsv8i16
    170154052U,	// VSRAsv8i8
    170547268U,	// VSRAuv16i8
    174610500U,	// VSRAuv1i64
    170285124U,	// VSRAuv2i32
    174610500U,	// VSRAuv2i64
    170416196U,	// VSRAuv4i16
    170285124U,	// VSRAuv4i32
    170416196U,	// VSRAuv8i16
    170547268U,	// VSRAuv8i8
    416424U,	// VSRIv16i8
    5266088U,	// VSRIv1i64
    285352U,	// VSRIv2i32
    5266088U,	// VSRIv2i64
    154280U,	// VSRIv4i16
    285352U,	// VSRIv4i32
    154280U,	// VSRIv8i16
    416424U,	// VSRIv8i8
    1247041145U,	// VST1LNd16
    1632949881U,	// VST1LNd16_UPD
    1247172217U,	// VST1LNd32
    1633080953U,	// VST1LNd32_UPD
    1247303289U,	// VST1LNd8
    1633212025U,	// VST1LNd8_UPD
    0U,	// VST1LNq16Pseudo
    0U,	// VST1LNq16Pseudo_UPD
    0U,	// VST1LNq32Pseudo
    0U,	// VST1LNq32Pseudo_UPD
    0U,	// VST1LNq8Pseudo
    0U,	// VST1LNq8Pseudo_UPD
    570586745U,	// VST1d16
    587363961U,	// VST1d16Q
    0U,	// VST1d16QPseudo
    604132985U,	// VST1d16Qwb_fixed
    620914297U,	// VST1d16Qwb_register
    637695609U,	// VST1d16T
    0U,	// VST1d16TPseudo
    654464633U,	// VST1d16Twb_fixed
    671245945U,	// VST1d16Twb_register
    688019065U,	// VST1d16wb_fixed
    704800377U,	// VST1d16wb_register
    570717817U,	// VST1d32
    587495033U,	// VST1d32Q
    0U,	// VST1d32QPseudo
    604264057U,	// VST1d32Qwb_fixed
    621045369U,	// VST1d32Qwb_register
    637826681U,	// VST1d32T
    0U,	// VST1d32TPseudo
    654595705U,	// VST1d32Twb_fixed
    671377017U,	// VST1d32Twb_register
    688150137U,	// VST1d32wb_fixed
    704931449U,	// VST1d32wb_register
    575698553U,	// VST1d64
    592475769U,	// VST1d64Q
    0U,	// VST1d64QPseudo
    0U,	// VST1d64QPseudoWB_fixed
    0U,	// VST1d64QPseudoWB_register
    609244793U,	// VST1d64Qwb_fixed
    626026105U,	// VST1d64Qwb_register
    642807417U,	// VST1d64T
    0U,	// VST1d64TPseudo
    0U,	// VST1d64TPseudoWB_fixed
    0U,	// VST1d64TPseudoWB_register
    659576441U,	// VST1d64Twb_fixed
    676357753U,	// VST1d64Twb_register
    693130873U,	// VST1d64wb_fixed
    709912185U,	// VST1d64wb_register
    570848889U,	// VST1d8
    587626105U,	// VST1d8Q
    0U,	// VST1d8QPseudo
    604395129U,	// VST1d8Qwb_fixed
    621176441U,	// VST1d8Qwb_register
    637957753U,	// VST1d8T
    0U,	// VST1d8TPseudo
    654726777U,	// VST1d8Twb_fixed
    671508089U,	// VST1d8Twb_register
    688281209U,	// VST1d8wb_fixed
    705062521U,	// VST1d8wb_register
    721581689U,	// VST1q16
    0U,	// VST1q16HighQPseudo
    0U,	// VST1q16HighTPseudo
    0U,	// VST1q16LowQPseudo_UPD
    0U,	// VST1q16LowTPseudo_UPD
    738350713U,	// VST1q16wb_fixed
    755132025U,	// VST1q16wb_register
    721712761U,	// VST1q32
    0U,	// VST1q32HighQPseudo
    0U,	// VST1q32HighTPseudo
    0U,	// VST1q32LowQPseudo_UPD
    0U,	// VST1q32LowTPseudo_UPD
    738481785U,	// VST1q32wb_fixed
    755263097U,	// VST1q32wb_register
    726693497U,	// VST1q64
    0U,	// VST1q64HighQPseudo
    0U,	// VST1q64HighTPseudo
    0U,	// VST1q64LowQPseudo_UPD
    0U,	// VST1q64LowTPseudo_UPD
    743462521U,	// VST1q64wb_fixed
    760243833U,	// VST1q64wb_register
    721843833U,	// VST1q8
    0U,	// VST1q8HighQPseudo
    0U,	// VST1q8HighTPseudo
    0U,	// VST1q8LowQPseudo_UPD
    0U,	// VST1q8LowTPseudo_UPD
    738612857U,	// VST1q8wb_fixed
    755394169U,	// VST1q8wb_register
    1247045301U,	// VST2LNd16
    0U,	// VST2LNd16Pseudo
    0U,	// VST2LNd16Pseudo_UPD
    1632999093U,	// VST2LNd16_UPD
    1247176373U,	// VST2LNd32
    0U,	// VST2LNd32Pseudo
    0U,	// VST2LNd32Pseudo_UPD
    1633130165U,	// VST2LNd32_UPD
    1247307445U,	// VST2LNd8
    0U,	// VST2LNd8Pseudo
    0U,	// VST2LNd8Pseudo_UPD
    1633261237U,	// VST2LNd8_UPD
    1247045301U,	// VST2LNq16
    0U,	// VST2LNq16Pseudo
    0U,	// VST2LNq16Pseudo_UPD
    1632999093U,	// VST2LNq16_UPD
    1247176373U,	// VST2LNq32
    0U,	// VST2LNq32Pseudo
    0U,	// VST2LNq32Pseudo_UPD
    1633130165U,	// VST2LNq32_UPD
    771913397U,	// VST2b16
    788682421U,	// VST2b16wb_fixed
    805463733U,	// VST2b16wb_register
    772044469U,	// VST2b32
    788813493U,	// VST2b32wb_fixed
    805594805U,	// VST2b32wb_register
    772175541U,	// VST2b8
    788944565U,	// VST2b8wb_fixed
    805725877U,	// VST2b8wb_register
    721581749U,	// VST2d16
    738350773U,	// VST2d16wb_fixed
    755132085U,	// VST2d16wb_register
    721712821U,	// VST2d32
    738481845U,	// VST2d32wb_fixed
    755263157U,	// VST2d32wb_register
    721843893U,	// VST2d8
    738612917U,	// VST2d8wb_fixed
    755394229U,	// VST2d8wb_register
    587364021U,	// VST2q16
    0U,	// VST2q16Pseudo
    0U,	// VST2q16PseudoWB_fixed
    0U,	// VST2q16PseudoWB_register
    604133045U,	// VST2q16wb_fixed
    620914357U,	// VST2q16wb_register
    587495093U,	// VST2q32
    0U,	// VST2q32Pseudo
    0U,	// VST2q32PseudoWB_fixed
    0U,	// VST2q32PseudoWB_register
    604264117U,	// VST2q32wb_fixed
    621045429U,	// VST2q32wb_register
    587626165U,	// VST2q8
    0U,	// VST2q8Pseudo
    0U,	// VST2q8PseudoWB_fixed
    0U,	// VST2q8PseudoWB_register
    604395189U,	// VST2q8wb_fixed
    621176501U,	// VST2q8wb_register
    1247073989U,	// VST3LNd16
    0U,	// VST3LNd16Pseudo
    0U,	// VST3LNd16Pseudo_UPD
    1633011397U,	// VST3LNd16_UPD
    1247205061U,	// VST3LNd32
    0U,	// VST3LNd32Pseudo
    0U,	// VST3LNd32Pseudo_UPD
    1633142469U,	// VST3LNd32_UPD
    1247336133U,	// VST3LNd8
    0U,	// VST3LNd8Pseudo
    0U,	// VST3LNd8Pseudo_UPD
    1633273541U,	// VST3LNd8_UPD
    1247073989U,	// VST3LNq16
    0U,	// VST3LNq16Pseudo
    0U,	// VST3LNq16Pseudo_UPD
    1633011397U,	// VST3LNq16_UPD
    1247205061U,	// VST3LNq32
    0U,	// VST3LNq32Pseudo
    0U,	// VST3LNq32Pseudo_UPD
    1633142469U,	// VST3LNq32_UPD
    173303493U,	// VST3d16
    0U,	// VST3d16Pseudo
    0U,	// VST3d16Pseudo_UPD
    559257285U,	// VST3d16_UPD
    173434565U,	// VST3d32
    0U,	// VST3d32Pseudo
    0U,	// VST3d32Pseudo_UPD
    559388357U,	// VST3d32_UPD
    173565637U,	// VST3d8
    0U,	// VST3d8Pseudo
    0U,	// VST3d8Pseudo_UPD
    559519429U,	// VST3d8_UPD
    173303493U,	// VST3q16
    0U,	// VST3q16Pseudo_UPD
    559257285U,	// VST3q16_UPD
    0U,	// VST3q16oddPseudo
    0U,	// VST3q16oddPseudo_UPD
    173434565U,	// VST3q32
    0U,	// VST3q32Pseudo_UPD
    559388357U,	// VST3q32_UPD
    0U,	// VST3q32oddPseudo
    0U,	// VST3q32oddPseudo_UPD
    173565637U,	// VST3q8
    0U,	// VST3q8Pseudo_UPD
    559519429U,	// VST3q8_UPD
    0U,	// VST3q8oddPseudo
    0U,	// VST3q8oddPseudo_UPD
    1247123158U,	// VST4LNd16
    0U,	// VST4LNd16Pseudo
    0U,	// VST4LNd16Pseudo_UPD
    1633003222U,	// VST4LNd16_UPD
    1247254230U,	// VST4LNd32
    0U,	// VST4LNd32Pseudo
    0U,	// VST4LNd32Pseudo_UPD
    1633134294U,	// VST4LNd32_UPD
    1247385302U,	// VST4LNd8
    0U,	// VST4LNd8Pseudo
    0U,	// VST4LNd8Pseudo_UPD
    1633265366U,	// VST4LNd8_UPD
    1247123158U,	// VST4LNq16
    0U,	// VST4LNq16Pseudo
    0U,	// VST4LNq16Pseudo_UPD
    1633003222U,	// VST4LNq16_UPD
    1247254230U,	// VST4LNq32
    0U,	// VST4LNq32Pseudo
    0U,	// VST4LNq32Pseudo_UPD
    1633134294U,	// VST4LNq32_UPD
    173332182U,	// VST4d16
    0U,	// VST4d16Pseudo
    0U,	// VST4d16Pseudo_UPD
    559269590U,	// VST4d16_UPD
    173463254U,	// VST4d32
    0U,	// VST4d32Pseudo
    0U,	// VST4d32Pseudo_UPD
    559400662U,	// VST4d32_UPD
    173594326U,	// VST4d8
    0U,	// VST4d8Pseudo
    0U,	// VST4d8Pseudo_UPD
    559531734U,	// VST4d8_UPD
    173332182U,	// VST4q16
    0U,	// VST4q16Pseudo_UPD
    559269590U,	// VST4q16_UPD
    0U,	// VST4q16oddPseudo
    0U,	// VST4q16oddPseudo_UPD
    173463254U,	// VST4q32
    0U,	// VST4q32Pseudo_UPD
    559400662U,	// VST4q32_UPD
    0U,	// VST4q32oddPseudo
    0U,	// VST4q32oddPseudo_UPD
    173594326U,	// VST4q8
    0U,	// VST4q8Pseudo_UPD
    559531734U,	// VST4q8_UPD
    0U,	// VST4q8oddPseudo
    0U,	// VST4q8oddPseudo_UPD
    2332571781U,	// VSTMDDB_UPD
    571413U,	// VSTMDIA
    2332571669U,	// VSTMDIA_UPD
    0U,	// VSTMQIA
    2332571781U,	// VSTMSDB_UPD
    571413U,	// VSTMSIA
    2332571669U,	// VSTMSIA_UPD
    556179U,	// VSTRD
    162963U,	// VSTRH
    556179U,	// VSTRS
    252868870U,	// VSUBD
    252999942U,	// VSUBH
    187464606U,	// VSUBHNv2i32
    187595678U,	// VSUBHNv4i16
    187726750U,	// VSUBHNv8i8
    186677999U,	// VSUBLsv2i64
    186809071U,	// VSUBLsv4i32
    186940143U,	// VSUBLsv8i16
    187071215U,	// VSUBLuv2i64
    187202287U,	// VSUBLuv4i32
    187333359U,	// VSUBLuv8i16
    253131014U,	// VSUBS
    186678766U,	// VSUBWsv2i64
    186809838U,	// VSUBWsv4i32
    186940910U,	// VSUBWsv8i16
    187071982U,	// VSUBWuv2i64
    187203054U,	// VSUBWuv4i32
    187334126U,	// VSUBWuv8i16
    253131014U,	// VSUBfd
    253131014U,	// VSUBfq
    252999942U,	// VSUBhd
    252999942U,	// VSUBhq
    187857158U,	// VSUBv16i8
    187463942U,	// VSUBv1i64
    187595014U,	// VSUBv2i32
    187463942U,	// VSUBv2i64
    187726086U,	// VSUBv4i16
    187595014U,	// VSUBv4i32
    187726086U,	// VSUBv8i16
    187857158U,	// VSUBv8i8
    547888U,	// VSWPd
    547888U,	// VSWPq
    424682U,	// VTBL1
    424682U,	// VTBL2
    424682U,	// VTBL3
    0U,	// VTBL3Pseudo
    424682U,	// VTBL4
    0U,	// VTBL4Pseudo
    417355U,	// VTBX1
    417355U,	// VTBX2
    417355U,	// VTBX3
    0U,	// VTBX3Pseudo
    417355U,	// VTBX4
    0U,	// VTBX4Pseudo
    7634354U,	// VTOSHD
    256146866U,	// VTOSHH
    7765426U,	// VTOSHS
    441597080U,	// VTOSIRD
    444087448U,	// VTOSIRH
    440417432U,	// VTOSIRS
    441597362U,	// VTOSIZD
    444087730U,	// VTOSIZH
    440417714U,	// VTOSIZS
    1330806194U,	// VTOSLD
    1333296562U,	// VTOSLH
    1329626546U,	// VTOSLS
    8027570U,	// VTOUHD
    256277938U,	// VTOUHH
    8158642U,	// VTOUHS
    444480664U,	// VTOUIRD
    444611736U,	// VTOUIRH
    440548504U,	// VTOUIRS
    444480946U,	// VTOUIZD
    444612018U,	// VTOUIZH
    440548786U,	// VTOUIZS
    1333689778U,	// VTOULD
    1333820850U,	// VTOULH
    1329757618U,	// VTOULS
    154596U,	// VTRNd16
    285668U,	// VTRNd32
    416740U,	// VTRNd8
    154596U,	// VTRNq16
    285668U,	// VTRNq32
    416740U,	// VTRNq8
    425351U,	// VTSTv16i8
    294279U,	// VTSTv2i32
    163207U,	// VTSTv4i16
    294279U,	// VTSTv4i32
    163207U,	// VTSTv8i16
    425351U,	// VTSTv8i8
    910483U,	// VUDOTD
    7070867U,	// VUDOTDI
    910483U,	// VUDOTQ
    7070867U,	// VUDOTQI
    8551858U,	// VUHTOD
    256802226U,	// VUHTOH
    8682930U,	// VUHTOS
    445005234U,	// VUITOD
    445136306U,	// VUITOH
    441204146U,	// VUITOS
    1334214066U,	// VULTOD
    1334345138U,	// VULTOH
    1330412978U,	// VULTOS
    154677U,	// VUZPd16
    416821U,	// VUZPd8
    154677U,	// VUZPq16
    285749U,	// VUZPq32
    416821U,	// VUZPq8
    154653U,	// VZIPd16
    416797U,	// VZIPd8
    154653U,	// VZIPq16
    285725U,	// VZIPq32
    416797U,	// VZIPq8
    571388U,	// sysLDMDA
    2332571644U,	// sysLDMDA_UPD
    571519U,	// sysLDMDB
    2332571775U,	// sysLDMDB_UPD
    572300U,	// sysLDMIA
    2332572556U,	// sysLDMIA_UPD
    571538U,	// sysLDMIB
    2332571794U,	// sysLDMIB_UPD
    571394U,	// sysSTMDA
    2332571650U,	// sysSTMDA_UPD
    571526U,	// sysSTMDB
    2332571782U,	// sysSTMDB_UPD
    572306U,	// sysSTMIA
    2332572562U,	// sysSTMIA_UPD
    571544U,	// sysSTMIB
    2332571800U,	// sysSTMIB_UPD
    530745U,	// t2ADCri
    9050425U,	// t2ADCrr
    9079097U,	// t2ADCrs
    9050486U,	// t2ADDri
    556533U,	// t2ADDri12
    9050486U,	// t2ADDrr
    9079158U,	// t2ADDrs
    9059406U,	// t2ADR
    530859U,	// t2ANDri
    9050539U,	// t2ANDrr
    9079211U,	// t2ANDrs
    9051260U,	// t2ASRri
    9051260U,	// t2ASRrr
    1082832976U,	// t2B
    555329U,	// t2BFC
    547483U,	// t2BFI
    530758U,	// t2BICri
    9050438U,	// t2BICrr
    9079110U,	// t2BICrs
    1074313901U,	// t2BXJ
    1082832976U,	// t2Bcc
    201907225U,	// t2CDP
    201905823U,	// t2CDP2
    839310U,	// t2CLREX
    540368U,	// t2CLZ
    9059263U,	// t2CMNri
    9059263U,	// t2CMNzrr
    9075647U,	// t2CMNzrs
    9059363U,	// t2CMPri
    9059363U,	// t2CMPrr
    9075747U,	// t2CMPrs
    828709U,	// t2CPS1p
    1317731549U,	// t2CPS2p
    235470045U,	// t2CPS3p
    185246891U,	// t2CRC32B
    185246899U,	// t2CRC32CB
    185246973U,	// t2CRC32CH
    185247057U,	// t2CRC32CW
    185246965U,	// t2CRC32H
    185247049U,	// t2CRC32W
    1074313739U,	// t2DBG
    837235U,	// t2DCPS1
    837295U,	// t2DCPS2
    837311U,	// t2DCPS3
    822655139U,	// t2DMB
    822655158U,	// t2DSB
    531562U,	// t2EORri
    9051242U,	// t2EORrr
    9079914U,	// t2EORrs
    1082834290U,	// t2HINT
    828731U,	// t2HVC
    839432378U,	// t2ISB
    17313120U,	// t2IT
    0U,	// t2Int_eh_sjlj_setjmp
    0U,	// t2Int_eh_sjlj_setjmp_nofp
    538616U,	// t2LDA
    538701U,	// t2LDAB
    540284U,	// t2LDAEX
    538905U,	// t2LDAEXB
    555461U,	// t2LDAEXD
    539263U,	// t2LDAEXH
    539165U,	// t2LDAH
    1275615921U,	// t2LDC2L_OFFSET
    1275615921U,	// t2LDC2L_OPTION
    1275615921U,	// t2LDC2L_POST
    1275615921U,	// t2LDC2L_PRE
    1275614853U,	// t2LDC2_OFFSET
    1275614853U,	// t2LDC2_OPTION
    1275614853U,	// t2LDC2_POST
    1275614853U,	// t2LDC2_PRE
    1275615989U,	// t2LDCL_OFFSET
    1275615989U,	// t2LDCL_OPTION
    1275615989U,	// t2LDCL_POST
    1275615989U,	// t2LDCL_PRE
    1275615549U,	// t2LDC_OFFSET
    1275615549U,	// t2LDC_OPTION
    1275615549U,	// t2LDC_POST
    1275615549U,	// t2LDC_PRE
    571519U,	// t2LDMDB
    2332571775U,	// t2LDMDB_UPD
    9091980U,	// t2LDMIA
    2341092236U,	// t2LDMIA_UPD
    556328U,	// t2LDRBT
    546988U,	// t2LDRB_POST
    546988U,	// t2LDRB_PRE
    9074860U,	// t2LDRBi12
    555180U,	// t2LDRBi8
    9058476U,	// t2LDRBpci
    9066668U,	// t2LDRBs
    551343U,	// t2LDRD_POST
    551343U,	// t2LDRD_PRE
    547247U,	// t2LDRDi8
    556680U,	// t2LDREX
    538919U,	// t2LDREXB
    555475U,	// t2LDREXD
    539277U,	// t2LDREXH
    556363U,	// t2LDRHT
    547409U,	// t2LDRH_POST
    547409U,	// t2LDRH_PRE
    9075281U,	// t2LDRHi12
    555601U,	// t2LDRHi8
    9058897U,	// t2LDRHpci
    9067089U,	// t2LDRHs
    556340U,	// t2LDRSBT
    547006U,	// t2LDRSB_POST
    547006U,	// t2LDRSB_PRE
    9074878U,	// t2LDRSBi12
    555198U,	// t2LDRSBi8
    9058494U,	// t2LDRSBpci
    9066686U,	// t2LDRSBs
    556375U,	// t2LDRSHT
    547428U,	// t2LDRSH_POST
    547428U,	// t2LDRSH_PRE
    9075300U,	// t2LDRSHi12
    555620U,	// t2LDRSHi8
    9058916U,	// t2LDRSHpci
    9067108U,	// t2LDRSHs
    556407U,	// t2LDRT
    547923U,	// t2LDR_POST
    547923U,	// t2LDR_PRE
    9075795U,	// t2LDRi12
    556115U,	// t2LDRi8
    9059411U,	// t2LDRpci
    9067603U,	// t2LDRs
    9050981U,	// t2LSLri
    9050981U,	// t2LSLrr
    9051267U,	// t2LSRri
    9051267U,	// t2LSRrr
    201907274U,	// t2MCR
    201905828U,	// t2MCR2
    201878642U,	// t2MCRR
    201877161U,	// t2MCRR2
    546852U,	// t2MLA
    548021U,	// t2MLS
    556471U,	// t2MOVTi16
    9063914U,	// t2MOVi
    540159U,	// t2MOVi16
    9063914U,	// t2MOVr
    9059558U,	// t2MOVsra_flag
    9059563U,	// t2MOVsrl_flag
    336124238U,	// t2MRC
    336123530U,	// t2MRC2
    352872786U,	// t2MRRC
    352872079U,	// t2MRRC2
    2148056290U,	// t2MRS_AR
    539874U,	// t2MRS_M
    539874U,	// t2MRSbanked
    3221798114U,	// t2MRSsys_AR
    369638536U,	// t2MSR_AR
    369638536U,	// t2MSR_M
    386415752U,	// t2MSRbanked
    555893U,	// t2MUL
    543747U,	// t2MVNi
    9063427U,	// t2MVNr
    9051139U,	// t2MVNs
    531424U,	// t2ORNri
    531424U,	// t2ORNrr
    560096U,	// t2ORNrs
    531576U,	// t2ORRri
    9051256U,	// t2ORRrr
    9079928U,	// t2ORRrs
    548115U,	// t2PKHBT
    547023U,	// t2PKHTB
    856178170U,	// t2PLDWi12
    872955386U,	// t2PLDWi8
    889748986U,	// t2PLDWs
    856177055U,	// t2PLDi12
    872954271U,	// t2PLDi8
    906541471U,	// t2PLDpci
    889747871U,	// t2PLDs
    856177311U,	// t2PLIi12
    872954527U,	// t2PLIi8
    906541727U,	// t2PLIpci
    889748127U,	// t2PLIs
    555406U,	// t2QADD
    554800U,	// t2QADD16
    554903U,	// t2QADD8
    556729U,	// t2QASX
    555380U,	// t2QDADD
    555252U,	// t2QDSUB
    556588U,	// t2QSAX
    555265U,	// t2QSUB
    554762U,	// t2QSUB16
    554864U,	// t2QSUB8
    539998U,	// t2RBIT
    9059798U,	// t2REV
    9058132U,	// t2REV16
    9058927U,	// t2REVSH
    1074313336U,	// t2RFEDB
    2148055160U,	// t2RFEDBW
    1074313224U,	// t2RFEIA
    2148055048U,	// t2RFEIAW
    9051246U,	// t2RORri
    9051246U,	// t2RORrr
    544424U,	// t2RRX
    9050304U,	// t2RSBri
    530624U,	// t2RSBrr
    559296U,	// t2RSBrs
    554807U,	// t2SADD16
    554909U,	// t2SADD8
    556734U,	// t2SASX
    530741U,	// t2SBCri
    9050421U,	// t2SBCrr
    9079093U,	// t2SBCrs
    548506U,	// t2SBFX
    556506U,	// t2SDIV
    555794U,	// t2SEL
    828701U,	// t2SETPAN
    838170U,	// t2SG
    554783U,	// t2SHADD16
    554888U,	// t2SHADD8
    556716U,	// t2SHASX
    556575U,	// t2SHSAX
    554745U,	// t2SHSUB16
    554849U,	// t2SHSUB8
    1074313546U,	// t2SMC
    546910U,	// t2SMLABB
    548108U,	// t2SMLABT
    547171U,	// t2SMLAD
    548432U,	// t2SMLADX
    580312U,	// t2SMLAL
    579685U,	// t2SMLALBB
    580889U,	// t2SMLALBT
    579992U,	// t2SMLALD
    581214U,	// t2SMLALDX
    579797U,	// t2SMLALTB
    581011U,	// t2SMLALTT
    547016U,	// t2SMLATB
    548236U,	// t2SMLATT
    547083U,	// t2SMLAWB
    548284U,	// t2SMLAWT
    547257U,	// t2SMLSD
    548462U,	// t2SMLSDX
    580003U,	// t2SMLSLD
    581222U,	// t2SMLSLDX
    546850U,	// t2SMMLA
    547907U,	// t2SMMLAR
    548019U,	// t2SMMLS
    547968U,	// t2SMMLSR
    555891U,	// t2SMMUL
    556130U,	// t2SMMULR
    555369U,	// t2SMUAD
    556631U,	// t2SMUADX
    555117U,	// t2SMULBB
    556321U,	// t2SMULBT
    547658U,	// t2SMULL
    555229U,	// t2SMULTB
    556443U,	// t2SMULTT
    555282U,	// t2SMULWB
    556483U,	// t2SMULWT
    555455U,	// t2SMUSD
    556661U,	// t2SMUSDX
    9222284U,	// t2SRSDB
    9353356U,	// t2SRSDB_UPD
    9222172U,	// t2SRSIA
    9353244U,	// t2SRSIA_UPD
    548093U,	// t2SSAT
    554821U,	// t2SSAT16
    556593U,	// t2SSAX
    554769U,	// t2SSUB16
    554870U,	// t2SSUB8
    1275615927U,	// t2STC2L_OFFSET
    1275615927U,	// t2STC2L_OPTION
    1275615927U,	// t2STC2L_POST
    1275615927U,	// t2STC2L_PRE
    1275614869U,	// t2STC2_OFFSET
    1275614869U,	// t2STC2_OPTION
    1275614869U,	// t2STC2_POST
    1275614869U,	// t2STC2_PRE
    1275615994U,	// t2STCL_OFFSET
    1275615994U,	// t2STCL_OPTION
    1275615994U,	// t2STCL_POST
    1275615994U,	// t2STCL_PRE
    1275615579U,	// t2STC_OFFSET
    1275615579U,	// t2STC_OPTION
    1275615579U,	// t2STC_POST
    1275615579U,	// t2STC_PRE
    539503U,	// t2STL
    538782U,	// t2STLB
    556674U,	// t2STLEX
    555296U,	// t2STLEXB
    547276U,	// t2STLEXD
    555654U,	// t2STLEXH
    539195U,	// t2STLH
    571526U,	// t2STMDB
    2332571782U,	// t2STMDB_UPD
    9091986U,	// t2STMIA
    2341092242U,	// t2STMIA_UPD
    556334U,	// t2STRBT
    185096369U,	// t2STRB_POST
    185096369U,	// t2STRB_PRE
    9074865U,	// t2STRBi12
    555185U,	// t2STRBi8
    9066673U,	// t2STRBs
    185100724U,	// t2STRD_POST
    185100724U,	// t2STRD_PRE
    547252U,	// t2STRDi8
    548500U,	// t2STREX
    555310U,	// t2STREXB
    547290U,	// t2STREXD
    555668U,	// t2STREXH
    556369U,	// t2STRHT
    185096790U,	// t2STRH_POST
    185096790U,	// t2STRH_PRE
    9075286U,	// t2STRHi12
    555606U,	// t2STRHi8
    9067094U,	// t2STRHs
    556418U,	// t2STRT
    185097364U,	// t2STR_POST
    185097364U,	// t2STR_PRE
    9075860U,	// t2STRi12
    556180U,	// t2STRi8
    9067668U,	// t2STRs
    9485481U,	// t2SUBS_PC_LR
    9050358U,	// t2SUBri
    556527U,	// t2SUBri12
    9050358U,	// t2SUBrr
    9079030U,	// t2SUBrs
    546898U,	// t2SXTAB
    546523U,	// t2SXTAB16
    547371U,	// t2SXTAH
    9074922U,	// t2SXTB
    554731U,	// t2SXTB16
    9075317U,	// t2SXTH
    923285620U,	// t2TBB
    940063287U,	// t2TBH
    9059391U,	// t2TEQri
    9059391U,	// t2TEQrr
    9075775U,	// t2TEQrs
    956872900U,	// t2TSB
    9059720U,	// t2TSTri
    9059720U,	// t2TSTrr
    9076104U,	// t2TSTrs
    540048U,	// t2TT
    538697U,	// t2TTA
    539911U,	// t2TTAT
    540066U,	// t2TTT
    554814U,	// t2UADD16
    554915U,	// t2UADD8
    556739U,	// t2UASX
    548511U,	// t2UBFX
    828738U,	// t2UDF
    556511U,	// t2UDIV
    554791U,	// t2UHADD16
    554895U,	// t2UHADD8
    556722U,	// t2UHASX
    556581U,	// t2UHSAX
    554753U,	// t2UHSUB16
    554856U,	// t2UHSUB8
    580285U,	// t2UMAAL
    580318U,	// t2UMLAL
    547664U,	// t2UMULL
    554799U,	// t2UQADD16
    554902U,	// t2UQADD8
    556728U,	// t2UQASX
    556587U,	// t2UQSAX
    554761U,	// t2UQSUB16
    554863U,	// t2UQSUB8
    554882U,	// t2USAD8
    546650U,	// t2USADA8
    548098U,	// t2USAT
    554828U,	// t2USAT16
    556598U,	// t2USAX
    554776U,	// t2USUB16
    554876U,	// t2USUB8
    546904U,	// t2UXTAB
    546531U,	// t2UXTAB16
    547377U,	// t2UXTAH
    9074927U,	// t2UXTB
    554738U,	// t2UXTB16
    9075322U,	// t2UXTH
    982776121U,	// tADC
    555382U,	// tADDhirr
    177469814U,	// tADDi3
    982776182U,	// tADDi8
    555382U,	// tADDrSP
    555382U,	// tADDrSPi
    177469814U,	// tADDrr
    555382U,	// tADDspi
    555382U,	// tADDspr
    539726U,	// tADR
    982776235U,	// tAND
    177470588U,	// tASRri
    982776956U,	// tASRrr
    1074313296U,	// tB
    982776134U,	// tBIC
    828725U,	// tBKPT
    1242090220U,	// tBL
    1242090708U,	// tBLXNSr
    1242091172U,	// tBLXi
    1242091172U,	// tBLXr
    1074314816U,	// tBX
    1074314447U,	// tBXNS
    1074313296U,	// tBcc
    1258988910U,	// tCBNZ
    1258988905U,	// tCBZ
    539583U,	// tCMNz
    539683U,	// tCMPhir
    539683U,	// tCMPi8
    539683U,	// tCMPr
    1308687581U,	// tCPS
    982776938U,	// tEOR
    1074314610U,	// tHINT
    828720U,	// tHLT
    0U,	// tInt_WIN_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_setjmp
    572300U,	// tLDMIA
    555180U,	// tLDRBi
    555180U,	// tLDRBr
    555601U,	// tLDRHi
    555601U,	// tLDRHr
    555198U,	// tLDRSB
    555620U,	// tLDRSH
    556115U,	// tLDRi
    539731U,	// tLDRpci
    556115U,	// tLDRr
    556115U,	// tLDRspi
    177470309U,	// tLSLri
    982776677U,	// tLSLrr
    177470595U,	// tLSRri
    982776963U,	// tLSRrr
    1258988842U,	// tMOVSr
    446037482U,	// tMOVi8
    540138U,	// tMOVr
    177470325U,	// tMUL
    446036995U,	// tMVN
    982776952U,	// tORR
    0U,	// tPICADD
    990432295U,	// tPOP
    990431850U,	// tPUSH
    540118U,	// tREV
    538452U,	// tREV16
    539247U,	// tREVSH
    982776942U,	// tROR
    429258944U,	// tRSB
    982776117U,	// tSBC
    91368U,	// tSETEND
    2332572562U,	// tSTMIA_UPD
    555185U,	// tSTRBi
    555185U,	// tSTRBr
    555606U,	// tSTRHi
    555606U,	// tSTRHr
    556180U,	// tSTRi
    556180U,	// tSTRr
    556180U,	// tSTRspi
    177469686U,	// tSUBi3
    982776054U,	// tSUBi8
    177469686U,	// tSUBrr
    555254U,	// tSUBspi
    1074313567U,	// tSVC
    538858U,	// tSXTB
    539253U,	// tSXTH
    3092U,	// tTRAP
    540040U,	// tTST
    828656U,	// tUDF
    538863U,	// tUXTB
    539258U,	// tUXTH
    1636U,	// t__brkdiv0
  };

  static const uint32_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDE
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SSUBO
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_GEP
    0U,	// G_PTR_MASK
    0U,	// G_BR
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_BSWAP
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// ABS
    0U,	// ADDSri
    0U,	// ADDSrr
    0U,	// ADDSrsi
    0U,	// ADDSrsr
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ASRi
    0U,	// ASRr
    0U,	// B
    0U,	// BCCZi64
    0U,	// BCCi64
    0U,	// BMOVPCB_CALL
    0U,	// BMOVPCRX_CALL
    0U,	// BR_JTadd
    0U,	// BR_JTm_i12
    0U,	// BR_JTm_rs
    0U,	// BR_JTr
    0U,	// BX_CALL
    0U,	// CMP_SWAP_16
    0U,	// CMP_SWAP_32
    0U,	// CMP_SWAP_64
    0U,	// CMP_SWAP_8
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_STRUCT_BYVAL_I32
    0U,	// CompilerBarrier
    0U,	// ITasm
    0U,	// Int_eh_sjlj_dispatchsetup
    0U,	// Int_eh_sjlj_longjmp
    0U,	// Int_eh_sjlj_setjmp
    0U,	// Int_eh_sjlj_setjmp_nofp
    0U,	// Int_eh_sjlj_setup_dispatch
    0U,	// JUMPTABLE_ADDRS
    0U,	// JUMPTABLE_INSTS
    0U,	// JUMPTABLE_TBB
    0U,	// JUMPTABLE_TBH
    0U,	// LDMIA_RET
    8U,	// LDRBT_POST
    1024U,	// LDRConstPool
    0U,	// LDRLIT_ga_abs
    0U,	// LDRLIT_ga_pcrel
    0U,	// LDRLIT_ga_pcrel_ldr
    8U,	// LDRT_POST
    0U,	// LEApcrel
    0U,	// LEApcrelJT
    0U,	// LSLi
    0U,	// LSLr
    0U,	// LSRi
    0U,	// LSRr
    0U,	// MEMCPY
    0U,	// MLAv5
    0U,	// MOVCCi
    0U,	// MOVCCi16
    0U,	// MOVCCi32imm
    0U,	// MOVCCr
    0U,	// MOVCCsi
    0U,	// MOVCCsr
    0U,	// MOVPCRX
    0U,	// MOVTi16_ga_pcrel
    0U,	// MOV_ga_pcrel
    0U,	// MOV_ga_pcrel_ldr
    0U,	// MOVi16_ga_pcrel
    0U,	// MOVi32imm
    0U,	// MOVsra_flag
    0U,	// MOVsrl_flag
    0U,	// MULv5
    0U,	// MVNCCi
    0U,	// PICADD
    0U,	// PICLDR
    0U,	// PICLDRB
    0U,	// PICLDRH
    0U,	// PICLDRSB
    0U,	// PICLDRSH
    0U,	// PICSTR
    0U,	// PICSTRB
    0U,	// PICSTRH
    0U,	// RORi
    0U,	// RORr
    0U,	// RRX
    1024U,	// RRXi
    0U,	// RSBSri
    0U,	// RSBSrsi
    0U,	// RSBSrsr
    0U,	// SMLALv5
    0U,	// SMULLv5
    0U,	// SPACE
    8U,	// STRBT_POST
    0U,	// STRBi_preidx
    0U,	// STRBr_preidx
    0U,	// STRH_preidx
    8U,	// STRT_POST
    0U,	// STRi_preidx
    0U,	// STRr_preidx
    0U,	// SUBS_PC_LR
    0U,	// SUBSri
    0U,	// SUBSrr
    0U,	// SUBSrsi
    0U,	// SUBSrsr
    0U,	// TAILJMPd
    0U,	// TAILJMPr
    0U,	// TAILJMPr4
    0U,	// TCRETURNdi
    0U,	// TCRETURNri
    0U,	// TPsoft
    0U,	// UMLALv5
    0U,	// UMULLv5
    1040U,	// VLD1LNdAsm_16
    1040U,	// VLD1LNdAsm_32
    1040U,	// VLD1LNdAsm_8
    2064U,	// VLD1LNdWB_fixed_Asm_16
    2064U,	// VLD1LNdWB_fixed_Asm_32
    2064U,	// VLD1LNdWB_fixed_Asm_8
    32784U,	// VLD1LNdWB_register_Asm_16
    32784U,	// VLD1LNdWB_register_Asm_32
    32784U,	// VLD1LNdWB_register_Asm_8
    1040U,	// VLD2LNdAsm_16
    1040U,	// VLD2LNdAsm_32
    1040U,	// VLD2LNdAsm_8
    2064U,	// VLD2LNdWB_fixed_Asm_16
    2064U,	// VLD2LNdWB_fixed_Asm_32
    2064U,	// VLD2LNdWB_fixed_Asm_8
    32784U,	// VLD2LNdWB_register_Asm_16
    32784U,	// VLD2LNdWB_register_Asm_32
    32784U,	// VLD2LNdWB_register_Asm_8
    1040U,	// VLD2LNqAsm_16
    1040U,	// VLD2LNqAsm_32
    2064U,	// VLD2LNqWB_fixed_Asm_16
    2064U,	// VLD2LNqWB_fixed_Asm_32
    32784U,	// VLD2LNqWB_register_Asm_16
    32784U,	// VLD2LNqWB_register_Asm_32
    0U,	// VLD3DUPdAsm_16
    0U,	// VLD3DUPdAsm_32
    0U,	// VLD3DUPdAsm_8
    0U,	// VLD3DUPdWB_fixed_Asm_16
    0U,	// VLD3DUPdWB_fixed_Asm_32
    0U,	// VLD3DUPdWB_fixed_Asm_8
    1048U,	// VLD3DUPdWB_register_Asm_16
    1048U,	// VLD3DUPdWB_register_Asm_32
    1048U,	// VLD3DUPdWB_register_Asm_8
    0U,	// VLD3DUPqAsm_16
    0U,	// VLD3DUPqAsm_32
    0U,	// VLD3DUPqAsm_8
    0U,	// VLD3DUPqWB_fixed_Asm_16
    0U,	// VLD3DUPqWB_fixed_Asm_32
    0U,	// VLD3DUPqWB_fixed_Asm_8
    1048U,	// VLD3DUPqWB_register_Asm_16
    1048U,	// VLD3DUPqWB_register_Asm_32
    1048U,	// VLD3DUPqWB_register_Asm_8
    1040U,	// VLD3LNdAsm_16
    1040U,	// VLD3LNdAsm_32
    1040U,	// VLD3LNdAsm_8
    2064U,	// VLD3LNdWB_fixed_Asm_16
    2064U,	// VLD3LNdWB_fixed_Asm_32
    2064U,	// VLD3LNdWB_fixed_Asm_8
    32784U,	// VLD3LNdWB_register_Asm_16
    32784U,	// VLD3LNdWB_register_Asm_32
    32784U,	// VLD3LNdWB_register_Asm_8
    1040U,	// VLD3LNqAsm_16
    1040U,	// VLD3LNqAsm_32
    2064U,	// VLD3LNqWB_fixed_Asm_16
    2064U,	// VLD3LNqWB_fixed_Asm_32
    32784U,	// VLD3LNqWB_register_Asm_16
    32784U,	// VLD3LNqWB_register_Asm_32
    32U,	// VLD3dAsm_16
    32U,	// VLD3dAsm_32
    32U,	// VLD3dAsm_8
    40U,	// VLD3dWB_fixed_Asm_16
    40U,	// VLD3dWB_fixed_Asm_32
    40U,	// VLD3dWB_fixed_Asm_8
    68656U,	// VLD3dWB_register_Asm_16
    68656U,	// VLD3dWB_register_Asm_32
    68656U,	// VLD3dWB_register_Asm_8
    0U,	// VLD3qAsm_16
    0U,	// VLD3qAsm_32
    0U,	// VLD3qAsm_8
    0U,	// VLD3qWB_fixed_Asm_16
    0U,	// VLD3qWB_fixed_Asm_32
    0U,	// VLD3qWB_fixed_Asm_8
    1048U,	// VLD3qWB_register_Asm_16
    1048U,	// VLD3qWB_register_Asm_32
    1048U,	// VLD3qWB_register_Asm_8
    0U,	// VLD4DUPdAsm_16
    0U,	// VLD4DUPdAsm_32
    0U,	// VLD4DUPdAsm_8
    0U,	// VLD4DUPdWB_fixed_Asm_16
    0U,	// VLD4DUPdWB_fixed_Asm_32
    0U,	// VLD4DUPdWB_fixed_Asm_8
    1048U,	// VLD4DUPdWB_register_Asm_16
    1048U,	// VLD4DUPdWB_register_Asm_32
    1048U,	// VLD4DUPdWB_register_Asm_8
    0U,	// VLD4DUPqAsm_16
    0U,	// VLD4DUPqAsm_32
    0U,	// VLD4DUPqAsm_8
    0U,	// VLD4DUPqWB_fixed_Asm_16
    0U,	// VLD4DUPqWB_fixed_Asm_32
    0U,	// VLD4DUPqWB_fixed_Asm_8
    1048U,	// VLD4DUPqWB_register_Asm_16
    1048U,	// VLD4DUPqWB_register_Asm_32
    1048U,	// VLD4DUPqWB_register_Asm_8
    1040U,	// VLD4LNdAsm_16
    1040U,	// VLD4LNdAsm_32
    1040U,	// VLD4LNdAsm_8
    2064U,	// VLD4LNdWB_fixed_Asm_16
    2064U,	// VLD4LNdWB_fixed_Asm_32
    2064U,	// VLD4LNdWB_fixed_Asm_8
    32784U,	// VLD4LNdWB_register_Asm_16
    32784U,	// VLD4LNdWB_register_Asm_32
    32784U,	// VLD4LNdWB_register_Asm_8
    1040U,	// VLD4LNqAsm_16
    1040U,	// VLD4LNqAsm_32
    2064U,	// VLD4LNqWB_fixed_Asm_16
    2064U,	// VLD4LNqWB_fixed_Asm_32
    32784U,	// VLD4LNqWB_register_Asm_16
    32784U,	// VLD4LNqWB_register_Asm_32
    32U,	// VLD4dAsm_16
    32U,	// VLD4dAsm_32
    32U,	// VLD4dAsm_8
    40U,	// VLD4dWB_fixed_Asm_16
    40U,	// VLD4dWB_fixed_Asm_32
    40U,	// VLD4dWB_fixed_Asm_8
    68656U,	// VLD4dWB_register_Asm_16
    68656U,	// VLD4dWB_register_Asm_32
    68656U,	// VLD4dWB_register_Asm_8
    0U,	// VLD4qAsm_16
    0U,	// VLD4qAsm_32
    0U,	// VLD4qAsm_8
    0U,	// VLD4qWB_fixed_Asm_16
    0U,	// VLD4qWB_fixed_Asm_32
    0U,	// VLD4qWB_fixed_Asm_8
    1048U,	// VLD4qWB_register_Asm_16
    1048U,	// VLD4qWB_register_Asm_32
    1048U,	// VLD4qWB_register_Asm_8
    0U,	// VMOVD0
    0U,	// VMOVDcc
    0U,	// VMOVQ0
    0U,	// VMOVScc
    1040U,	// VST1LNdAsm_16
    1040U,	// VST1LNdAsm_32
    1040U,	// VST1LNdAsm_8
    2064U,	// VST1LNdWB_fixed_Asm_16
    2064U,	// VST1LNdWB_fixed_Asm_32
    2064U,	// VST1LNdWB_fixed_Asm_8
    32784U,	// VST1LNdWB_register_Asm_16
    32784U,	// VST1LNdWB_register_Asm_32
    32784U,	// VST1LNdWB_register_Asm_8
    1040U,	// VST2LNdAsm_16
    1040U,	// VST2LNdAsm_32
    1040U,	// VST2LNdAsm_8
    2064U,	// VST2LNdWB_fixed_Asm_16
    2064U,	// VST2LNdWB_fixed_Asm_32
    2064U,	// VST2LNdWB_fixed_Asm_8
    32784U,	// VST2LNdWB_register_Asm_16
    32784U,	// VST2LNdWB_register_Asm_32
    32784U,	// VST2LNdWB_register_Asm_8
    1040U,	// VST2LNqAsm_16
    1040U,	// VST2LNqAsm_32
    2064U,	// VST2LNqWB_fixed_Asm_16
    2064U,	// VST2LNqWB_fixed_Asm_32
    32784U,	// VST2LNqWB_register_Asm_16
    32784U,	// VST2LNqWB_register_Asm_32
    1040U,	// VST3LNdAsm_16
    1040U,	// VST3LNdAsm_32
    1040U,	// VST3LNdAsm_8
    2064U,	// VST3LNdWB_fixed_Asm_16
    2064U,	// VST3LNdWB_fixed_Asm_32
    2064U,	// VST3LNdWB_fixed_Asm_8
    32784U,	// VST3LNdWB_register_Asm_16
    32784U,	// VST3LNdWB_register_Asm_32
    32784U,	// VST3LNdWB_register_Asm_8
    1040U,	// VST3LNqAsm_16
    1040U,	// VST3LNqAsm_32
    2064U,	// VST3LNqWB_fixed_Asm_16
    2064U,	// VST3LNqWB_fixed_Asm_32
    32784U,	// VST3LNqWB_register_Asm_16
    32784U,	// VST3LNqWB_register_Asm_32
    32U,	// VST3dAsm_16
    32U,	// VST3dAsm_32
    32U,	// VST3dAsm_8
    40U,	// VST3dWB_fixed_Asm_16
    40U,	// VST3dWB_fixed_Asm_32
    40U,	// VST3dWB_fixed_Asm_8
    68656U,	// VST3dWB_register_Asm_16
    68656U,	// VST3dWB_register_Asm_32
    68656U,	// VST3dWB_register_Asm_8
    0U,	// VST3qAsm_16
    0U,	// VST3qAsm_32
    0U,	// VST3qAsm_8
    0U,	// VST3qWB_fixed_Asm_16
    0U,	// VST3qWB_fixed_Asm_32
    0U,	// VST3qWB_fixed_Asm_8
    1048U,	// VST3qWB_register_Asm_16
    1048U,	// VST3qWB_register_Asm_32
    1048U,	// VST3qWB_register_Asm_8
    1040U,	// VST4LNdAsm_16
    1040U,	// VST4LNdAsm_32
    1040U,	// VST4LNdAsm_8
    2064U,	// VST4LNdWB_fixed_Asm_16
    2064U,	// VST4LNdWB_fixed_Asm_32
    2064U,	// VST4LNdWB_fixed_Asm_8
    32784U,	// VST4LNdWB_register_Asm_16
    32784U,	// VST4LNdWB_register_Asm_32
    32784U,	// VST4LNdWB_register_Asm_8
    1040U,	// VST4LNqAsm_16
    1040U,	// VST4LNqAsm_32
    2064U,	// VST4LNqWB_fixed_Asm_16
    2064U,	// VST4LNqWB_fixed_Asm_32
    32784U,	// VST4LNqWB_register_Asm_16
    32784U,	// VST4LNqWB_register_Asm_32
    32U,	// VST4dAsm_16
    32U,	// VST4dAsm_32
    32U,	// VST4dAsm_8
    40U,	// VST4dWB_fixed_Asm_16
    40U,	// VST4dWB_fixed_Asm_32
    40U,	// VST4dWB_fixed_Asm_8
    68656U,	// VST4dWB_register_Asm_16
    68656U,	// VST4dWB_register_Asm_32
    68656U,	// VST4dWB_register_Asm_8
    0U,	// VST4qAsm_16
    0U,	// VST4qAsm_32
    0U,	// VST4qAsm_8
    0U,	// VST4qWB_fixed_Asm_16
    0U,	// VST4qWB_fixed_Asm_32
    0U,	// VST4qWB_fixed_Asm_8
    1048U,	// VST4qWB_register_Asm_16
    1048U,	// VST4qWB_register_Asm_32
    1048U,	// VST4qWB_register_Asm_8
    0U,	// WIN__CHKSTK
    0U,	// WIN__DBZCHK
    0U,	// t2ABS
    0U,	// t2ADDSri
    0U,	// t2ADDSrr
    0U,	// t2ADDSrs
    0U,	// t2BR_JT
    0U,	// t2LDMIA_RET
    1024U,	// t2LDRBpcrel
    1024U,	// t2LDRConstPool
    1024U,	// t2LDRHpcrel
    1024U,	// t2LDRSBpcrel
    1024U,	// t2LDRSHpcrel
    0U,	// t2LDRpci_pic
    1024U,	// t2LDRpcrel
    0U,	// t2LEApcrel
    0U,	// t2LEApcrelJT
    0U,	// t2MOVCCasr
    0U,	// t2MOVCCi
    0U,	// t2MOVCCi16
    0U,	// t2MOVCCi32imm
    0U,	// t2MOVCClsl
    0U,	// t2MOVCClsr
    0U,	// t2MOVCCr
    0U,	// t2MOVCCror
    56U,	// t2MOVSsi
    64U,	// t2MOVSsr
    0U,	// t2MOVTi16_ga_pcrel
    0U,	// t2MOV_ga_pcrel
    0U,	// t2MOVi16_ga_pcrel
    0U,	// t2MOVi32imm
    56U,	// t2MOVsi
    64U,	// t2MOVsr
    0U,	// t2MVNCCi
    0U,	// t2RSBSri
    0U,	// t2RSBSrs
    0U,	// t2STRB_preidx
    0U,	// t2STRH_preidx
    0U,	// t2STR_preidx
    0U,	// t2SUBSri
    0U,	// t2SUBSrr
    0U,	// t2SUBSrs
    0U,	// t2TBB_JT
    0U,	// t2TBH_JT
    0U,	// tADCS
    0U,	// tADDSi3
    0U,	// tADDSi8
    0U,	// tADDSrr
    0U,	// tADDframe
    0U,	// tADJCALLSTACKDOWN
    0U,	// tADJCALLSTACKUP
    0U,	// tBRIND
    0U,	// tBR_JTr
    0U,	// tBX_CALL
    0U,	// tBX_RET
    0U,	// tBX_RET_vararg
    0U,	// tBfar
    0U,	// tLDMIA_UPD
    1024U,	// tLDRConstPool
    0U,	// tLDRLIT_ga_abs
    0U,	// tLDRLIT_ga_pcrel
    0U,	// tLDR_postidx
    0U,	// tLDRpci_pic
    0U,	// tLEApcrel
    0U,	// tLEApcrelJT
    0U,	// tMOVCCr_pseudo
    0U,	// tPOP_RET
    0U,	// tSBCS
    0U,	// tSUBSi3
    0U,	// tSUBSi8
    0U,	// tSUBSrr
    0U,	// tTAILJMPd
    0U,	// tTAILJMPdND
    0U,	// tTAILJMPr
    0U,	// tTBB_JT
    0U,	// tTBH_JT
    0U,	// tTPsoft
    98304U,	// ADCri
    0U,	// ADCrr
    131072U,	// ADCrsi
    0U,	// ADCrsr
    98304U,	// ADDri
    0U,	// ADDrr
    131072U,	// ADDrsi
    0U,	// ADDrsr
    72U,	// ADR
    0U,	// AESD
    0U,	// AESE
    0U,	// AESIMC
    0U,	// AESMC
    98304U,	// ANDri
    0U,	// ANDrr
    131072U,	// ANDrsi
    0U,	// ANDrsr
    80U,	// BFC
    163928U,	// BFI
    98304U,	// BICri
    0U,	// BICrr
    131072U,	// BICrsi
    0U,	// BICrsr
    0U,	// BKPT
    0U,	// BL
    0U,	// BLX
    0U,	// BLX_pred
    0U,	// BLXi
    0U,	// BL_pred
    0U,	// BX
    0U,	// BXJ
    0U,	// BX_RET
    0U,	// BX_pred
    0U,	// Bcc
    4145U,	// CDP
    0U,	// CDP2
    0U,	// CLREX
    1024U,	// CLZ
    96U,	// CMNri
    1024U,	// CMNzrr
    104U,	// CMNzrsi
    64U,	// CMNzrsr
    96U,	// CMPri
    1024U,	// CMPrr
    104U,	// CMPrsi
    64U,	// CMPrsr
    0U,	// CPS1p
    0U,	// CPS2p
    1112U,	// CPS3p
    1112U,	// CRC32B
    1112U,	// CRC32CB
    1112U,	// CRC32CH
    1112U,	// CRC32CW
    1112U,	// CRC32H
    1112U,	// CRC32W
    0U,	// DBG
    0U,	// DMB
    0U,	// DSB
    98304U,	// EORri
    0U,	// EORrr
    131072U,	// EORrsi
    0U,	// EORrsr
    0U,	// ERET
    1U,	// FCONSTD
    1U,	// FCONSTH
    1U,	// FCONSTS
    33U,	// FLDMXDB_UPD
    1136U,	// FLDMXIA
    33U,	// FLDMXIA_UPD
    0U,	// FMSTAT
    33U,	// FSTMXDB_UPD
    1136U,	// FSTMXIA
    33U,	// FSTMXIA_UPD
    0U,	// HINT
    0U,	// HLT
    0U,	// HVC
    0U,	// ISB
    8U,	// LDA
    8U,	// LDAB
    8U,	// LDAEX
    8U,	// LDAEXB
    0U,	// LDAEXD
    8U,	// LDAEXH
    8U,	// LDAH
    0U,	// LDC2L_OFFSET
    1U,	// LDC2L_OPTION
    2U,	// LDC2L_POST
    0U,	// LDC2L_PRE
    0U,	// LDC2_OFFSET
    1U,	// LDC2_OPTION
    2U,	// LDC2_POST
    0U,	// LDC2_PRE
    122U,	// LDCL_OFFSET
    196738U,	// LDCL_OPTION
    229506U,	// LDCL_POST
    138U,	// LDCL_PRE
    122U,	// LDC_OFFSET
    196738U,	// LDC_OPTION
    229506U,	// LDC_POST
    138U,	// LDC_PRE
    1136U,	// LDMDA
    33U,	// LDMDA_UPD
    1136U,	// LDMDB
    33U,	// LDMDB_UPD
    1136U,	// LDMIA
    33U,	// LDMIA_UPD
    1136U,	// LDMIB
    33U,	// LDMIB_UPD
    262272U,	// LDRBT_POST_IMM
    262272U,	// LDRBT_POST_REG
    262272U,	// LDRB_POST_IMM
    262272U,	// LDRB_POST_REG
    144U,	// LDRB_PRE_IMM
    152U,	// LDRB_PRE_REG
    160U,	// LDRBi12
    168U,	// LDRBrs
    294912U,	// LDRD
    2424832U,	// LDRD_POST
    360448U,	// LDRD_PRE
    8U,	// LDREX
    8U,	// LDREXB
    0U,	// LDREXD
    8U,	// LDREXH
    176U,	// LDRH
    393344U,	// LDRHTi
    426112U,	// LDRHTr
    458880U,	// LDRH_POST
    184U,	// LDRH_PRE
    176U,	// LDRSB
    393344U,	// LDRSBTi
    426112U,	// LDRSBTr
    458880U,	// LDRSB_POST
    184U,	// LDRSB_PRE
    176U,	// LDRSH
    393344U,	// LDRSHTi
    426112U,	// LDRSHTr
    458880U,	// LDRSH_POST
    184U,	// LDRSH_PRE
    262272U,	// LDRT_POST_IMM
    262272U,	// LDRT_POST_REG
    262272U,	// LDR_POST_IMM
    262272U,	// LDR_POST_REG
    144U,	// LDR_PRE_IMM
    152U,	// LDR_PRE_REG
    160U,	// LDRcp
    160U,	// LDRi12
    168U,	// LDRrs
    4690993U,	// MCR
    192U,	// MCR2
    6788145U,	// MCRR
    524312U,	// MCRR2
    35651584U,	// MLA
    35651584U,	// MLS
    0U,	// MOVPCLR
    1112U,	// MOVTi16
    96U,	// MOVi
    1024U,	// MOVi16
    1024U,	// MOVr
    1024U,	// MOVr_TC
    104U,	// MOVsi
    64U,	// MOVsr
    0U,	// MRC
    0U,	// MRC2
    0U,	// MRRC
    0U,	// MRRC2
    2U,	// MRS
    200U,	// MRSbanked
    2U,	// MRSsys
    33U,	// MSR
    0U,	// MSRbanked
    3U,	// MSRi
    0U,	// MUL
    96U,	// MVNi
    1024U,	// MVNr
    104U,	// MVNsi
    64U,	// MVNsr
    98304U,	// ORRri
    0U,	// ORRrr
    131072U,	// ORRrsi
    0U,	// ORRrsr
    8388608U,	// PKHBT
    10485760U,	// PKHTB
    0U,	// PLDWi12
    0U,	// PLDWrs
    0U,	// PLDi12
    0U,	// PLDrs
    0U,	// PLIi12
    0U,	// PLIrs
    0U,	// QADD
    0U,	// QADD16
    0U,	// QADD8
    0U,	// QASX
    0U,	// QDADD
    0U,	// QDSUB
    0U,	// QSAX
    0U,	// QSUB
    0U,	// QSUB16
    0U,	// QSUB8
    1024U,	// RBIT
    1024U,	// REV
    1024U,	// REV16
    1024U,	// REVSH
    0U,	// RFEDA
    0U,	// RFEDA_UPD
    0U,	// RFEDB
    0U,	// RFEDB_UPD
    0U,	// RFEIA
    0U,	// RFEIA_UPD
    0U,	// RFEIB
    0U,	// RFEIB_UPD
    98304U,	// RSBri
    0U,	// RSBrr
    131072U,	// RSBrsi
    0U,	// RSBrsr
    98304U,	// RSCri
    0U,	// RSCrr
    131072U,	// RSCrsi
    0U,	// RSCrsr
    0U,	// SADD16
    0U,	// SADD8
    0U,	// SASX
    98304U,	// SBCri
    0U,	// SBCrr
    131072U,	// SBCrsi
    0U,	// SBCrsr
    69206016U,	// SBFX
    0U,	// SDIV
    0U,	// SEL
    0U,	// SETEND
    0U,	// SETPAN
    1048U,	// SHA1C
    0U,	// SHA1H
    1048U,	// SHA1M
    1048U,	// SHA1P
    1048U,	// SHA1SU0
    0U,	// SHA1SU1
    1048U,	// SHA256H
    1048U,	// SHA256H2
    0U,	// SHA256SU0
    1048U,	// SHA256SU1
    0U,	// SHADD16
    0U,	// SHADD8
    0U,	// SHASX
    0U,	// SHSAX
    0U,	// SHSUB16
    0U,	// SHSUB8
    0U,	// SMC
    35651584U,	// SMLABB
    35651584U,	// SMLABT
    35651584U,	// SMLAD
    35651584U,	// SMLADX
    0U,	// SMLAL
    35651584U,	// SMLALBB
    35651584U,	// SMLALBT
    35651584U,	// SMLALD
    35651584U,	// SMLALDX
    35651584U,	// SMLALTB
    35651584U,	// SMLALTT
    35651584U,	// SMLATB
    35651584U,	// SMLATT
    35651584U,	// SMLAWB
    35651584U,	// SMLAWT
    35651584U,	// SMLSD
    35651584U,	// SMLSDX
    35651584U,	// SMLSLD
    35651584U,	// SMLSLDX
    35651584U,	// SMMLA
    35651584U,	// SMMLAR
    35651584U,	// SMMLS
    35651584U,	// SMMLSR
    0U,	// SMMUL
    0U,	// SMMULR
    0U,	// SMUAD
    0U,	// SMUADX
    0U,	// SMULBB
    0U,	// SMULBT
    35651584U,	// SMULL
    0U,	// SMULTB
    0U,	// SMULTT
    0U,	// SMULWB
    0U,	// SMULWT
    0U,	// SMUSD
    0U,	// SMUSDX
    0U,	// SRSDA
    0U,	// SRSDA_UPD
    0U,	// SRSDB
    0U,	// SRSDB_UPD
    0U,	// SRSIA
    0U,	// SRSIA_UPD
    0U,	// SRSIB
    0U,	// SRSIB_UPD
    6352U,	// SSAT
    1232U,	// SSAT16
    0U,	// SSAX
    0U,	// SSUB16
    0U,	// SSUB8
    0U,	// STC2L_OFFSET
    1U,	// STC2L_OPTION
    2U,	// STC2L_POST
    0U,	// STC2L_PRE
    0U,	// STC2_OFFSET
    1U,	// STC2_OPTION
    2U,	// STC2_POST
    0U,	// STC2_PRE
    122U,	// STCL_OFFSET
    196738U,	// STCL_OPTION
    229506U,	// STCL_POST
    138U,	// STCL_PRE
    122U,	// STC_OFFSET
    196738U,	// STC_OPTION
    229506U,	// STC_POST
    138U,	// STC_PRE
    8U,	// STL
    8U,	// STLB
    557056U,	// STLEX
    557056U,	// STLEXB
    216U,	// STLEXD
    557056U,	// STLEXH
    8U,	// STLH
    1136U,	// STMDA
    33U,	// STMDA_UPD
    1136U,	// STMDB
    33U,	// STMDB_UPD
    1136U,	// STMIA
    33U,	// STMIA_UPD
    1136U,	// STMIB
    33U,	// STMIB_UPD
    262272U,	// STRBT_POST_IMM
    262272U,	// STRBT_POST_REG
    262272U,	// STRB_POST_IMM
    262272U,	// STRB_POST_REG
    144U,	// STRB_PRE_IMM
    152U,	// STRB_PRE_REG
    160U,	// STRBi12
    168U,	// STRBrs
    294912U,	// STRD
    2424920U,	// STRD_POST
    360536U,	// STRD_PRE
    557056U,	// STREX
    557056U,	// STREXB
    216U,	// STREXD
    557056U,	// STREXH
    176U,	// STRH
    393344U,	// STRHTi
    426112U,	// STRHTr
    458880U,	// STRH_POST
    184U,	// STRH_PRE
    262272U,	// STRT_POST_IMM
    262272U,	// STRT_POST_REG
    262272U,	// STR_POST_IMM
    262272U,	// STR_POST_REG
    144U,	// STR_PRE_IMM
    152U,	// STR_PRE_REG
    160U,	// STRi12
    168U,	// STRrs
    98304U,	// SUBri
    0U,	// SUBrr
    131072U,	// SUBrsi
    0U,	// SUBrsr
    0U,	// SVC
    557056U,	// SWP
    557056U,	// SWPB
    12582912U,	// SXTAB
    12582912U,	// SXTAB16
    12582912U,	// SXTAH
    7168U,	// SXTB
    7168U,	// SXTB16
    7168U,	// SXTH
    96U,	// TEQri
    1024U,	// TEQrr
    104U,	// TEQrsi
    64U,	// TEQrsr
    0U,	// TRAP
    0U,	// TRAPNaCl
    0U,	// TSB
    96U,	// TSTri
    1024U,	// TSTrr
    104U,	// TSTrsi
    64U,	// TSTrsr
    0U,	// UADD16
    0U,	// UADD8
    0U,	// UASX
    69206016U,	// UBFX
    0U,	// UDF
    0U,	// UDIV
    0U,	// UHADD16
    0U,	// UHADD8
    0U,	// UHASX
    0U,	// UHSAX
    0U,	// UHSUB16
    0U,	// UHSUB8
    35651584U,	// UMAAL
    0U,	// UMLAL
    35651584U,	// UMULL
    0U,	// UQADD16
    0U,	// UQADD8
    0U,	// UQASX
    0U,	// UQSAX
    0U,	// UQSUB16
    0U,	// UQSUB8
    0U,	// USAD8
    35651584U,	// USADA8
    14680064U,	// USAT
    0U,	// USAT16
    0U,	// USAX
    0U,	// USUB16
    0U,	// USUB8
    12582912U,	// UXTAB
    12582912U,	// UXTAB16
    12582912U,	// UXTAH
    7168U,	// UXTB
    7168U,	// UXTB16
    7168U,	// UXTH
    1048U,	// VABALsv2i64
    1048U,	// VABALsv4i32
    1048U,	// VABALsv8i16
    1048U,	// VABALuv2i64
    1048U,	// VABALuv4i32
    1048U,	// VABALuv8i16
    1048U,	// VABAsv16i8
    1048U,	// VABAsv2i32
    1048U,	// VABAsv4i16
    1048U,	// VABAsv4i32
    1048U,	// VABAsv8i16
    1048U,	// VABAsv8i8
    1048U,	// VABAuv16i8
    1048U,	// VABAuv2i32
    1048U,	// VABAuv4i16
    1048U,	// VABAuv4i32
    1048U,	// VABAuv8i16
    1048U,	// VABAuv8i8
    1112U,	// VABDLsv2i64
    1112U,	// VABDLsv4i32
    1112U,	// VABDLsv8i16
    1112U,	// VABDLuv2i64
    1112U,	// VABDLuv4i32
    1112U,	// VABDLuv8i16
    70705U,	// VABDfd
    70705U,	// VABDfq
    70705U,	// VABDhd
    70705U,	// VABDhq
    1112U,	// VABDsv16i8
    1112U,	// VABDsv2i32
    1112U,	// VABDsv4i16
    1112U,	// VABDsv4i32
    1112U,	// VABDsv8i16
    1112U,	// VABDsv8i8
    1112U,	// VABDuv16i8
    1112U,	// VABDuv2i32
    1112U,	// VABDuv4i16
    1112U,	// VABDuv4i32
    1112U,	// VABDuv8i16
    1112U,	// VABDuv8i8
    33U,	// VABSD
    33U,	// VABSH
    33U,	// VABSS
    33U,	// VABSfd
    33U,	// VABSfq
    33U,	// VABShd
    33U,	// VABShq
    0U,	// VABSv16i8
    0U,	// VABSv2i32
    0U,	// VABSv4i16
    0U,	// VABSv4i32
    0U,	// VABSv8i16
    0U,	// VABSv8i8
    70705U,	// VACGEfd
    70705U,	// VACGEfq
    70705U,	// VACGEhd
    70705U,	// VACGEhq
    70705U,	// VACGTfd
    70705U,	// VACGTfq
    70705U,	// VACGThd
    70705U,	// VACGThq
    70705U,	// VADDD
    70705U,	// VADDH
    1112U,	// VADDHNv2i32
    1112U,	// VADDHNv4i16
    1112U,	// VADDHNv8i8
    1112U,	// VADDLsv2i64
    1112U,	// VADDLsv4i32
    1112U,	// VADDLsv8i16
    1112U,	// VADDLuv2i64
    1112U,	// VADDLuv4i32
    1112U,	// VADDLuv8i16
    70705U,	// VADDS
    1112U,	// VADDWsv2i64
    1112U,	// VADDWsv4i32
    1112U,	// VADDWsv8i16
    1112U,	// VADDWuv2i64
    1112U,	// VADDWuv4i32
    1112U,	// VADDWuv8i16
    70705U,	// VADDfd
    70705U,	// VADDfq
    70705U,	// VADDhd
    70705U,	// VADDhq
    1112U,	// VADDv16i8
    1112U,	// VADDv1i64
    1112U,	// VADDv2i32
    1112U,	// VADDv2i64
    1112U,	// VADDv4i16
    1112U,	// VADDv4i32
    1112U,	// VADDv8i16
    1112U,	// VADDv8i8
    0U,	// VANDd
    0U,	// VANDq
    0U,	// VBICd
    0U,	// VBICiv2i32
    0U,	// VBICiv4i16
    0U,	// VBICiv4i32
    0U,	// VBICiv8i16
    0U,	// VBICq
    589912U,	// VBIFd
    589912U,	// VBIFq
    589912U,	// VBITd
    589912U,	// VBITq
    589912U,	// VBSLd
    589912U,	// VBSLq
    622680U,	// VCADDv2f32
    622680U,	// VCADDv4f16
    622680U,	// VCADDv4f32
    622680U,	// VCADDv8f16
    70705U,	// VCEQfd
    70705U,	// VCEQfq
    70705U,	// VCEQhd
    70705U,	// VCEQhq
    1112U,	// VCEQv16i8
    1112U,	// VCEQv2i32
    1112U,	// VCEQv4i16
    1112U,	// VCEQv4i32
    1112U,	// VCEQv8i16
    1112U,	// VCEQv8i8
    3U,	// VCEQzv16i8
    225U,	// VCEQzv2f32
    3U,	// VCEQzv2i32
    225U,	// VCEQzv4f16
    225U,	// VCEQzv4f32
    3U,	// VCEQzv4i16
    3U,	// VCEQzv4i32
    225U,	// VCEQzv8f16
    3U,	// VCEQzv8i16
    3U,	// VCEQzv8i8
    70705U,	// VCGEfd
    70705U,	// VCGEfq
    70705U,	// VCGEhd
    70705U,	// VCGEhq
    1112U,	// VCGEsv16i8
    1112U,	// VCGEsv2i32
    1112U,	// VCGEsv4i16
    1112U,	// VCGEsv4i32
    1112U,	// VCGEsv8i16
    1112U,	// VCGEsv8i8
    1112U,	// VCGEuv16i8
    1112U,	// VCGEuv2i32
    1112U,	// VCGEuv4i16
    1112U,	// VCGEuv4i32
    1112U,	// VCGEuv8i16
    1112U,	// VCGEuv8i8
    3U,	// VCGEzv16i8
    225U,	// VCGEzv2f32
    3U,	// VCGEzv2i32
    225U,	// VCGEzv4f16
    225U,	// VCGEzv4f32
    3U,	// VCGEzv4i16
    3U,	// VCGEzv4i32
    225U,	// VCGEzv8f16
    3U,	// VCGEzv8i16
    3U,	// VCGEzv8i8
    70705U,	// VCGTfd
    70705U,	// VCGTfq
    70705U,	// VCGThd
    70705U,	// VCGThq
    1112U,	// VCGTsv16i8
    1112U,	// VCGTsv2i32
    1112U,	// VCGTsv4i16
    1112U,	// VCGTsv4i32
    1112U,	// VCGTsv8i16
    1112U,	// VCGTsv8i8
    1112U,	// VCGTuv16i8
    1112U,	// VCGTuv2i32
    1112U,	// VCGTuv4i16
    1112U,	// VCGTuv4i32
    1112U,	// VCGTuv8i16
    1112U,	// VCGTuv8i8
    3U,	// VCGTzv16i8
    225U,	// VCGTzv2f32
    3U,	// VCGTzv2i32
    225U,	// VCGTzv4f16
    225U,	// VCGTzv4f32
    3U,	// VCGTzv4i16
    3U,	// VCGTzv4i32
    225U,	// VCGTzv8f16
    3U,	// VCGTzv8i16
    3U,	// VCGTzv8i8
    3U,	// VCLEzv16i8
    225U,	// VCLEzv2f32
    3U,	// VCLEzv2i32
    225U,	// VCLEzv4f16
    225U,	// VCLEzv4f32
    3U,	// VCLEzv4i16
    3U,	// VCLEzv4i32
    225U,	// VCLEzv8f16
    3U,	// VCLEzv8i16
    3U,	// VCLEzv8i8
    0U,	// VCLSv16i8
    0U,	// VCLSv2i32
    0U,	// VCLSv4i16
    0U,	// VCLSv4i32
    0U,	// VCLSv8i16
    0U,	// VCLSv8i8
    3U,	// VCLTzv16i8
    225U,	// VCLTzv2f32
    3U,	// VCLTzv2i32
    225U,	// VCLTzv4f16
    225U,	// VCLTzv4f32
    3U,	// VCLTzv4i16
    3U,	// VCLTzv4i32
    225U,	// VCLTzv8f16
    3U,	// VCLTzv8i16
    3U,	// VCLTzv8i8
    0U,	// VCLZv16i8
    0U,	// VCLZv2i32
    0U,	// VCLZv4i16
    0U,	// VCLZv4i32
    0U,	// VCLZv8i16
    0U,	// VCLZv8i8
    655384U,	// VCMLAv2f32
    17276952U,	// VCMLAv2f32_indexed
    655384U,	// VCMLAv4f16
    17276952U,	// VCMLAv4f16_indexed
    655384U,	// VCMLAv4f32
    17276952U,	// VCMLAv4f32_indexed
    655384U,	// VCMLAv8f16
    17276952U,	// VCMLAv8f16_indexed
    33U,	// VCMPD
    33U,	// VCMPED
    33U,	// VCMPEH
    33U,	// VCMPES
    0U,	// VCMPEZD
    0U,	// VCMPEZH
    0U,	// VCMPEZS
    33U,	// VCMPH
    33U,	// VCMPS
    0U,	// VCMPZD
    0U,	// VCMPZH
    0U,	// VCMPZS
    1024U,	// VCNTd
    1024U,	// VCNTq
    0U,	// VCVTANSDf
    0U,	// VCVTANSDh
    0U,	// VCVTANSQf
    0U,	// VCVTANSQh
    0U,	// VCVTANUDf
    0U,	// VCVTANUDh
    0U,	// VCVTANUQf
    0U,	// VCVTANUQh
    0U,	// VCVTASD
    0U,	// VCVTASH
    0U,	// VCVTASS
    0U,	// VCVTAUD
    0U,	// VCVTAUH
    0U,	// VCVTAUS
    0U,	// VCVTBDH
    0U,	// VCVTBHD
    0U,	// VCVTBHS
    0U,	// VCVTBSH
    0U,	// VCVTDS
    0U,	// VCVTMNSDf
    0U,	// VCVTMNSDh
    0U,	// VCVTMNSQf
    0U,	// VCVTMNSQh
    0U,	// VCVTMNUDf
    0U,	// VCVTMNUDh
    0U,	// VCVTMNUQf
    0U,	// VCVTMNUQh
    0U,	// VCVTMSD
    0U,	// VCVTMSH
    0U,	// VCVTMSS
    0U,	// VCVTMUD
    0U,	// VCVTMUH
    0U,	// VCVTMUS
    0U,	// VCVTNNSDf
    0U,	// VCVTNNSDh
    0U,	// VCVTNNSQf
    0U,	// VCVTNNSQh
    0U,	// VCVTNNUDf
    0U,	// VCVTNNUDh
    0U,	// VCVTNNUQf
    0U,	// VCVTNNUQh
    0U,	// VCVTNSD
    0U,	// VCVTNSH
    0U,	// VCVTNSS
    0U,	// VCVTNUD
    0U,	// VCVTNUH
    0U,	// VCVTNUS
    0U,	// VCVTPNSDf
    0U,	// VCVTPNSDh
    0U,	// VCVTPNSQf
    0U,	// VCVTPNSQh
    0U,	// VCVTPNUDf
    0U,	// VCVTPNUDh
    0U,	// VCVTPNUQf
    0U,	// VCVTPNUQh
    0U,	// VCVTPSD
    0U,	// VCVTPSH
    0U,	// VCVTPSS
    0U,	// VCVTPUD
    0U,	// VCVTPUH
    0U,	// VCVTPUS
    0U,	// VCVTSD
    0U,	// VCVTTDH
    0U,	// VCVTTHD
    0U,	// VCVTTHS
    0U,	// VCVTTSH
    0U,	// VCVTf2h
    0U,	// VCVTf2sd
    0U,	// VCVTf2sq
    0U,	// VCVTf2ud
    0U,	// VCVTf2uq
    35U,	// VCVTf2xsd
    35U,	// VCVTf2xsq
    35U,	// VCVTf2xud
    35U,	// VCVTf2xuq
    0U,	// VCVTh2f
    0U,	// VCVTh2sd
    0U,	// VCVTh2sq
    0U,	// VCVTh2ud
    0U,	// VCVTh2uq
    35U,	// VCVTh2xsd
    35U,	// VCVTh2xsq
    35U,	// VCVTh2xud
    35U,	// VCVTh2xuq
    0U,	// VCVTs2fd
    0U,	// VCVTs2fq
    0U,	// VCVTs2hd
    0U,	// VCVTs2hq
    0U,	// VCVTu2fd
    0U,	// VCVTu2fq
    0U,	// VCVTu2hd
    0U,	// VCVTu2hq
    35U,	// VCVTxs2fd
    35U,	// VCVTxs2fq
    35U,	// VCVTxs2hd
    35U,	// VCVTxs2hq
    35U,	// VCVTxu2fd
    35U,	// VCVTxu2fq
    35U,	// VCVTxu2hd
    35U,	// VCVTxu2hq
    70705U,	// VDIVD
    70705U,	// VDIVH
    70705U,	// VDIVS
    1024U,	// VDUP16d
    1024U,	// VDUP16q
    1024U,	// VDUP32d
    1024U,	// VDUP32q
    1024U,	// VDUP8d
    1024U,	// VDUP8q
    9216U,	// VDUPLN16d
    9216U,	// VDUPLN16q
    9216U,	// VDUPLN32d
    9216U,	// VDUPLN32q
    9216U,	// VDUPLN8d
    9216U,	// VDUPLN8q
    0U,	// VEORd
    0U,	// VEORq
    35651584U,	// VEXTd16
    35651584U,	// VEXTd32
    35651584U,	// VEXTd8
    35651584U,	// VEXTq16
    35651584U,	// VEXTq32
    35651584U,	// VEXTq64
    35651584U,	// VEXTq8
    68659U,	// VFMAD
    68659U,	// VFMAH
    68659U,	// VFMAS
    68659U,	// VFMAfd
    68659U,	// VFMAfq
    68659U,	// VFMAhd
    68659U,	// VFMAhq
    68659U,	// VFMSD
    68659U,	// VFMSH
    68659U,	// VFMSS
    68659U,	// VFMSfd
    68659U,	// VFMSfq
    68659U,	// VFMShd
    68659U,	// VFMShq
    68659U,	// VFNMAD
    68659U,	// VFNMAH
    68659U,	// VFNMAS
    68659U,	// VFNMSD
    68659U,	// VFNMSH
    68659U,	// VFNMSS
    9216U,	// VGETLNi32
    3U,	// VGETLNs16
    3U,	// VGETLNs8
    3U,	// VGETLNu16
    3U,	// VGETLNu8
    1112U,	// VHADDsv16i8
    1112U,	// VHADDsv2i32
    1112U,	// VHADDsv4i16
    1112U,	// VHADDsv4i32
    1112U,	// VHADDsv8i16
    1112U,	// VHADDsv8i8
    1112U,	// VHADDuv16i8
    1112U,	// VHADDuv2i32
    1112U,	// VHADDuv4i16
    1112U,	// VHADDuv4i32
    1112U,	// VHADDuv8i16
    1112U,	// VHADDuv8i8
    1112U,	// VHSUBsv16i8
    1112U,	// VHSUBsv2i32
    1112U,	// VHSUBsv4i16
    1112U,	// VHSUBsv4i32
    1112U,	// VHSUBsv8i16
    1112U,	// VHSUBsv8i8
    1112U,	// VHSUBuv16i8
    1112U,	// VHSUBuv2i32
    1112U,	// VHSUBuv4i16
    1112U,	// VHSUBuv4i32
    1112U,	// VHSUBuv8i16
    1112U,	// VHSUBuv8i8
    0U,	// VINSH
    0U,	// VJCVT
    32U,	// VLD1DUPd16
    44U,	// VLD1DUPd16wb_fixed
    10292U,	// VLD1DUPd16wb_register
    32U,	// VLD1DUPd32
    44U,	// VLD1DUPd32wb_fixed
    10292U,	// VLD1DUPd32wb_register
    32U,	// VLD1DUPd8
    44U,	// VLD1DUPd8wb_fixed
    10292U,	// VLD1DUPd8wb_register
    32U,	// VLD1DUPq16
    44U,	// VLD1DUPq16wb_fixed
    10292U,	// VLD1DUPq16wb_register
    32U,	// VLD1DUPq32
    44U,	// VLD1DUPq32wb_fixed
    10292U,	// VLD1DUPq32wb_register
    32U,	// VLD1DUPq8
    44U,	// VLD1DUPq8wb_fixed
    10292U,	// VLD1DUPq8wb_register
    699628U,	// VLD1LNd16
    732404U,	// VLD1LNd16_UPD
    699628U,	// VLD1LNd32
    732404U,	// VLD1LNd32_UPD
    699628U,	// VLD1LNd8
    732404U,	// VLD1LNd8_UPD
    0U,	// VLD1LNq16Pseudo
    0U,	// VLD1LNq16Pseudo_UPD
    0U,	// VLD1LNq32Pseudo
    0U,	// VLD1LNq32Pseudo_UPD
    0U,	// VLD1LNq8Pseudo
    0U,	// VLD1LNq8Pseudo_UPD
    32U,	// VLD1d16
    32U,	// VLD1d16Q
    0U,	// VLD1d16QPseudo
    44U,	// VLD1d16Qwb_fixed
    10292U,	// VLD1d16Qwb_register
    32U,	// VLD1d16T
    0U,	// VLD1d16TPseudo
    44U,	// VLD1d16Twb_fixed
    10292U,	// VLD1d16Twb_register
    44U,	// VLD1d16wb_fixed
    10292U,	// VLD1d16wb_register
    32U,	// VLD1d32
    32U,	// VLD1d32Q
    0U,	// VLD1d32QPseudo
    44U,	// VLD1d32Qwb_fixed
    10292U,	// VLD1d32Qwb_register
    32U,	// VLD1d32T
    0U,	// VLD1d32TPseudo
    44U,	// VLD1d32Twb_fixed
    10292U,	// VLD1d32Twb_register
    44U,	// VLD1d32wb_fixed
    10292U,	// VLD1d32wb_register
    32U,	// VLD1d64
    32U,	// VLD1d64Q
    0U,	// VLD1d64QPseudo
    0U,	// VLD1d64QPseudoWB_fixed
    0U,	// VLD1d64QPseudoWB_register
    44U,	// VLD1d64Qwb_fixed
    10292U,	// VLD1d64Qwb_register
    32U,	// VLD1d64T
    0U,	// VLD1d64TPseudo
    0U,	// VLD1d64TPseudoWB_fixed
    0U,	// VLD1d64TPseudoWB_register
    44U,	// VLD1d64Twb_fixed
    10292U,	// VLD1d64Twb_register
    44U,	// VLD1d64wb_fixed
    10292U,	// VLD1d64wb_register
    32U,	// VLD1d8
    32U,	// VLD1d8Q
    0U,	// VLD1d8QPseudo
    44U,	// VLD1d8Qwb_fixed
    10292U,	// VLD1d8Qwb_register
    32U,	// VLD1d8T
    0U,	// VLD1d8TPseudo
    44U,	// VLD1d8Twb_fixed
    10292U,	// VLD1d8Twb_register
    44U,	// VLD1d8wb_fixed
    10292U,	// VLD1d8wb_register
    32U,	// VLD1q16
    0U,	// VLD1q16HighQPseudo
    0U,	// VLD1q16HighTPseudo
    0U,	// VLD1q16LowQPseudo_UPD
    0U,	// VLD1q16LowTPseudo_UPD
    44U,	// VLD1q16wb_fixed
    10292U,	// VLD1q16wb_register
    32U,	// VLD1q32
    0U,	// VLD1q32HighQPseudo
    0U,	// VLD1q32HighTPseudo
    0U,	// VLD1q32LowQPseudo_UPD
    0U,	// VLD1q32LowTPseudo_UPD
    44U,	// VLD1q32wb_fixed
    10292U,	// VLD1q32wb_register
    32U,	// VLD1q64
    0U,	// VLD1q64HighQPseudo
    0U,	// VLD1q64HighTPseudo
    0U,	// VLD1q64LowQPseudo_UPD
    0U,	// VLD1q64LowTPseudo_UPD
    44U,	// VLD1q64wb_fixed
    10292U,	// VLD1q64wb_register
    32U,	// VLD1q8
    0U,	// VLD1q8HighQPseudo
    0U,	// VLD1q8HighTPseudo
    0U,	// VLD1q8LowQPseudo_UPD
    0U,	// VLD1q8LowTPseudo_UPD
    44U,	// VLD1q8wb_fixed
    10292U,	// VLD1q8wb_register
    32U,	// VLD2DUPd16
    44U,	// VLD2DUPd16wb_fixed
    10292U,	// VLD2DUPd16wb_register
    32U,	// VLD2DUPd16x2
    44U,	// VLD2DUPd16x2wb_fixed
    10292U,	// VLD2DUPd16x2wb_register
    32U,	// VLD2DUPd32
    44U,	// VLD2DUPd32wb_fixed
    10292U,	// VLD2DUPd32wb_register
    32U,	// VLD2DUPd32x2
    44U,	// VLD2DUPd32x2wb_fixed
    10292U,	// VLD2DUPd32x2wb_register
    32U,	// VLD2DUPd8
    44U,	// VLD2DUPd8wb_fixed
    10292U,	// VLD2DUPd8wb_register
    32U,	// VLD2DUPd8x2
    44U,	// VLD2DUPd8x2wb_fixed
    10292U,	// VLD2DUPd8x2wb_register
    0U,	// VLD2DUPq16EvenPseudo
    0U,	// VLD2DUPq16OddPseudo
    0U,	// VLD2DUPq32EvenPseudo
    0U,	// VLD2DUPq32OddPseudo
    0U,	// VLD2DUPq8EvenPseudo
    0U,	// VLD2DUPq8OddPseudo
    766196U,	// VLD2LNd16
    0U,	// VLD2LNd16Pseudo
    0U,	// VLD2LNd16Pseudo_UPD
    799996U,	// VLD2LNd16_UPD
    766196U,	// VLD2LNd32
    0U,	// VLD2LNd32Pseudo
    0U,	// VLD2LNd32Pseudo_UPD
    799996U,	// VLD2LNd32_UPD
    766196U,	// VLD2LNd8
    0U,	// VLD2LNd8Pseudo
    0U,	// VLD2LNd8Pseudo_UPD
    799996U,	// VLD2LNd8_UPD
    766196U,	// VLD2LNq16
    0U,	// VLD2LNq16Pseudo
    0U,	// VLD2LNq16Pseudo_UPD
    799996U,	// VLD2LNq16_UPD
    766196U,	// VLD2LNq32
    0U,	// VLD2LNq32Pseudo
    0U,	// VLD2LNq32Pseudo_UPD
    799996U,	// VLD2LNq32_UPD
    32U,	// VLD2b16
    44U,	// VLD2b16wb_fixed
    10292U,	// VLD2b16wb_register
    32U,	// VLD2b32
    44U,	// VLD2b32wb_fixed
    10292U,	// VLD2b32wb_register
    32U,	// VLD2b8
    44U,	// VLD2b8wb_fixed
    10292U,	// VLD2b8wb_register
    32U,	// VLD2d16
    44U,	// VLD2d16wb_fixed
    10292U,	// VLD2d16wb_register
    32U,	// VLD2d32
    44U,	// VLD2d32wb_fixed
    10292U,	// VLD2d32wb_register
    32U,	// VLD2d8
    44U,	// VLD2d8wb_fixed
    10292U,	// VLD2d8wb_register
    32U,	// VLD2q16
    0U,	// VLD2q16Pseudo
    0U,	// VLD2q16PseudoWB_fixed
    0U,	// VLD2q16PseudoWB_register
    44U,	// VLD2q16wb_fixed
    10292U,	// VLD2q16wb_register
    32U,	// VLD2q32
    0U,	// VLD2q32Pseudo
    0U,	// VLD2q32PseudoWB_fixed
    0U,	// VLD2q32PseudoWB_register
    44U,	// VLD2q32wb_fixed
    10292U,	// VLD2q32wb_register
    32U,	// VLD2q8
    0U,	// VLD2q8Pseudo
    0U,	// VLD2q8PseudoWB_fixed
    0U,	// VLD2q8PseudoWB_register
    44U,	// VLD2q8wb_fixed
    10292U,	// VLD2q8wb_register
    14596U,	// VLD3DUPd16
    0U,	// VLD3DUPd16Pseudo
    0U,	// VLD3DUPd16Pseudo_UPD
    834820U,	// VLD3DUPd16_UPD
    14596U,	// VLD3DUPd32
    0U,	// VLD3DUPd32Pseudo
    0U,	// VLD3DUPd32Pseudo_UPD
    834820U,	// VLD3DUPd32_UPD
    14596U,	// VLD3DUPd8
    0U,	// VLD3DUPd8Pseudo
    0U,	// VLD3DUPd8Pseudo_UPD
    834820U,	// VLD3DUPd8_UPD
    14596U,	// VLD3DUPq16
    0U,	// VLD3DUPq16EvenPseudo
    0U,	// VLD3DUPq16OddPseudo
    834820U,	// VLD3DUPq16_UPD
    14596U,	// VLD3DUPq32
    0U,	// VLD3DUPq32EvenPseudo
    0U,	// VLD3DUPq32OddPseudo
    834820U,	// VLD3DUPq32_UPD
    14596U,	// VLD3DUPq8
    0U,	// VLD3DUPq8EvenPseudo
    0U,	// VLD3DUPq8OddPseudo
    834820U,	// VLD3DUPq8_UPD
    865532U,	// VLD3LNd16
    0U,	// VLD3LNd16Pseudo
    0U,	// VLD3LNd16Pseudo_UPD
    896268U,	// VLD3LNd16_UPD
    865532U,	// VLD3LNd32
    0U,	// VLD3LNd32Pseudo
    0U,	// VLD3LNd32Pseudo_UPD
    896268U,	// VLD3LNd32_UPD
    865532U,	// VLD3LNd8
    0U,	// VLD3LNd8Pseudo
    0U,	// VLD3LNd8Pseudo_UPD
    896268U,	// VLD3LNd8_UPD
    865532U,	// VLD3LNq16
    0U,	// VLD3LNq16Pseudo
    0U,	// VLD3LNq16Pseudo_UPD
    896268U,	// VLD3LNq16_UPD
    865532U,	// VLD3LNq32
    0U,	// VLD3LNq32Pseudo
    0U,	// VLD3LNq32Pseudo_UPD
    896268U,	// VLD3LNq32_UPD
    119537664U,	// VLD3d16
    0U,	// VLD3d16Pseudo
    0U,	// VLD3d16Pseudo_UPD
    153092096U,	// VLD3d16_UPD
    119537664U,	// VLD3d32
    0U,	// VLD3d32Pseudo
    0U,	// VLD3d32Pseudo_UPD
    153092096U,	// VLD3d32_UPD
    119537664U,	// VLD3d8
    0U,	// VLD3d8Pseudo
    0U,	// VLD3d8Pseudo_UPD
    153092096U,	// VLD3d8_UPD
    119537664U,	// VLD3q16
    0U,	// VLD3q16Pseudo_UPD
    153092096U,	// VLD3q16_UPD
    0U,	// VLD3q16oddPseudo
    0U,	// VLD3q16oddPseudo_UPD
    119537664U,	// VLD3q32
    0U,	// VLD3q32Pseudo_UPD
    153092096U,	// VLD3q32_UPD
    0U,	// VLD3q32oddPseudo
    0U,	// VLD3q32oddPseudo_UPD
    119537664U,	// VLD3q8
    0U,	// VLD3q8Pseudo_UPD
    153092096U,	// VLD3q8_UPD
    0U,	// VLD3q8oddPseudo
    0U,	// VLD3q8oddPseudo_UPD
    81172U,	// VLD4DUPd16
    0U,	// VLD4DUPd16Pseudo
    0U,	// VLD4DUPd16Pseudo_UPD
    16660U,	// VLD4DUPd16_UPD
    81172U,	// VLD4DUPd32
    0U,	// VLD4DUPd32Pseudo
    0U,	// VLD4DUPd32Pseudo_UPD
    16660U,	// VLD4DUPd32_UPD
    81172U,	// VLD4DUPd8
    0U,	// VLD4DUPd8Pseudo
    0U,	// VLD4DUPd8Pseudo_UPD
    16660U,	// VLD4DUPd8_UPD
    81172U,	// VLD4DUPq16
    0U,	// VLD4DUPq16EvenPseudo
    0U,	// VLD4DUPq16OddPseudo
    16660U,	// VLD4DUPq16_UPD
    81172U,	// VLD4DUPq32
    0U,	// VLD4DUPq32EvenPseudo
    0U,	// VLD4DUPq32OddPseudo
    16660U,	// VLD4DUPq32_UPD
    81172U,	// VLD4DUPq8
    0U,	// VLD4DUPq8EvenPseudo
    0U,	// VLD4DUPq8OddPseudo
    16660U,	// VLD4DUPq8_UPD
    189346060U,	// VLD4LNd16
    0U,	// VLD4LNd16Pseudo
    0U,	// VLD4LNd16Pseudo_UPD
    284U,	// VLD4LNd16_UPD
    189346060U,	// VLD4LNd32
    0U,	// VLD4LNd32Pseudo
    0U,	// VLD4LNd32Pseudo_UPD
    284U,	// VLD4LNd32_UPD
    189346060U,	// VLD4LNd8
    0U,	// VLD4LNd8Pseudo
    0U,	// VLD4LNd8Pseudo_UPD
    284U,	// VLD4LNd8_UPD
    189346060U,	// VLD4LNq16
    0U,	// VLD4LNq16Pseudo
    0U,	// VLD4LNq16Pseudo_UPD
    284U,	// VLD4LNq16_UPD
    189346060U,	// VLD4LNq32
    0U,	// VLD4LNq32Pseudo
    0U,	// VLD4LNq32Pseudo_UPD
    284U,	// VLD4LNq32_UPD
    572522496U,	// VLD4d16
    0U,	// VLD4d16Pseudo
    0U,	// VLD4d16Pseudo_UPD
    1646264320U,	// VLD4d16_UPD
    572522496U,	// VLD4d32
    0U,	// VLD4d32Pseudo
    0U,	// VLD4d32Pseudo_UPD
    1646264320U,	// VLD4d32_UPD
    572522496U,	// VLD4d8
    0U,	// VLD4d8Pseudo
    0U,	// VLD4d8Pseudo_UPD
    1646264320U,	// VLD4d8_UPD
    572522496U,	// VLD4q16
    0U,	// VLD4q16Pseudo_UPD
    1646264320U,	// VLD4q16_UPD
    0U,	// VLD4q16oddPseudo
    0U,	// VLD4q16oddPseudo_UPD
    572522496U,	// VLD4q32
    0U,	// VLD4q32Pseudo_UPD
    1646264320U,	// VLD4q32_UPD
    0U,	// VLD4q32oddPseudo
    0U,	// VLD4q32oddPseudo_UPD
    572522496U,	// VLD4q8
    0U,	// VLD4q8Pseudo_UPD
    1646264320U,	// VLD4q8_UPD
    0U,	// VLD4q8oddPseudo
    0U,	// VLD4q8oddPseudo_UPD
    33U,	// VLDMDDB_UPD
    1136U,	// VLDMDIA
    33U,	// VLDMDIA_UPD
    0U,	// VLDMQIA
    33U,	// VLDMSDB_UPD
    1136U,	// VLDMSIA
    33U,	// VLDMSIA_UPD
    288U,	// VLDRD
    296U,	// VLDRH
    288U,	// VLDRS
    0U,	// VLLDM
    0U,	// VLSTM
    1112U,	// VMAXNMD
    1112U,	// VMAXNMH
    1112U,	// VMAXNMNDf
    1112U,	// VMAXNMNDh
    1112U,	// VMAXNMNQf
    1112U,	// VMAXNMNQh
    1112U,	// VMAXNMS
    70705U,	// VMAXfd
    70705U,	// VMAXfq
    70705U,	// VMAXhd
    70705U,	// VMAXhq
    1112U,	// VMAXsv16i8
    1112U,	// VMAXsv2i32
    1112U,	// VMAXsv4i16
    1112U,	// VMAXsv4i32
    1112U,	// VMAXsv8i16
    1112U,	// VMAXsv8i8
    1112U,	// VMAXuv16i8
    1112U,	// VMAXuv2i32
    1112U,	// VMAXuv4i16
    1112U,	// VMAXuv4i32
    1112U,	// VMAXuv8i16
    1112U,	// VMAXuv8i8
    1112U,	// VMINNMD
    1112U,	// VMINNMH
    1112U,	// VMINNMNDf
    1112U,	// VMINNMNDh
    1112U,	// VMINNMNQf
    1112U,	// VMINNMNQh
    1112U,	// VMINNMS
    70705U,	// VMINfd
    70705U,	// VMINfq
    70705U,	// VMINhd
    70705U,	// VMINhq
    1112U,	// VMINsv16i8
    1112U,	// VMINsv2i32
    1112U,	// VMINsv4i16
    1112U,	// VMINsv4i32
    1112U,	// VMINsv8i16
    1112U,	// VMINsv8i8
    1112U,	// VMINuv16i8
    1112U,	// VMINuv2i32
    1112U,	// VMINuv4i16
    1112U,	// VMINuv4i32
    1112U,	// VMINuv8i16
    1112U,	// VMINuv8i8
    68659U,	// VMLAD
    68659U,	// VMLAH
    73752U,	// VMLALslsv2i32
    73752U,	// VMLALslsv4i16
    73752U,	// VMLALsluv2i32
    73752U,	// VMLALsluv4i16
    1048U,	// VMLALsv2i64
    1048U,	// VMLALsv4i32
    1048U,	// VMLALsv8i16
    1048U,	// VMLALuv2i64
    1048U,	// VMLALuv4i32
    1048U,	// VMLALuv8i16
    68659U,	// VMLAS
    68659U,	// VMLAfd
    68659U,	// VMLAfq
    68659U,	// VMLAhd
    68659U,	// VMLAhq
    920627U,	// VMLAslfd
    920627U,	// VMLAslfq
    920627U,	// VMLAslhd
    920627U,	// VMLAslhq
    73752U,	// VMLAslv2i32
    73752U,	// VMLAslv4i16
    73752U,	// VMLAslv4i32
    73752U,	// VMLAslv8i16
    1048U,	// VMLAv16i8
    1048U,	// VMLAv2i32
    1048U,	// VMLAv4i16
    1048U,	// VMLAv4i32
    1048U,	// VMLAv8i16
    1048U,	// VMLAv8i8
    68659U,	// VMLSD
    68659U,	// VMLSH
    73752U,	// VMLSLslsv2i32
    73752U,	// VMLSLslsv4i16
    73752U,	// VMLSLsluv2i32
    73752U,	// VMLSLsluv4i16
    1048U,	// VMLSLsv2i64
    1048U,	// VMLSLsv4i32
    1048U,	// VMLSLsv8i16
    1048U,	// VMLSLuv2i64
    1048U,	// VMLSLuv4i32
    1048U,	// VMLSLuv8i16
    68659U,	// VMLSS
    68659U,	// VMLSfd
    68659U,	// VMLSfq
    68659U,	// VMLShd
    68659U,	// VMLShq
    920627U,	// VMLSslfd
    920627U,	// VMLSslfq
    920627U,	// VMLSslhd
    920627U,	// VMLSslhq
    73752U,	// VMLSslv2i32
    73752U,	// VMLSslv4i16
    73752U,	// VMLSslv4i32
    73752U,	// VMLSslv8i16
    1048U,	// VMLSv16i8
    1048U,	// VMLSv2i32
    1048U,	// VMLSv4i16
    1048U,	// VMLSv4i32
    1048U,	// VMLSv8i16
    1048U,	// VMLSv8i8
    33U,	// VMOVD
    0U,	// VMOVDRR
    0U,	// VMOVH
    33U,	// VMOVHR
    0U,	// VMOVLsv2i64
    0U,	// VMOVLsv4i32
    0U,	// VMOVLsv8i16
    0U,	// VMOVLuv2i64
    0U,	// VMOVLuv4i32
    0U,	// VMOVLuv8i16
    0U,	// VMOVNv2i32
    0U,	// VMOVNv4i16
    0U,	// VMOVNv8i8
    33U,	// VMOVRH
    0U,	// VMOVRRD
    35651584U,	// VMOVRRS
    1024U,	// VMOVRS
    33U,	// VMOVS
    1024U,	// VMOVSR
    35651584U,	// VMOVSRR
    0U,	// VMOVv16i8
    0U,	// VMOVv1i64
    1U,	// VMOVv2f32
    0U,	// VMOVv2i32
    0U,	// VMOVv2i64
    1U,	// VMOVv4f32
    0U,	// VMOVv4i16
    0U,	// VMOVv4i32
    0U,	// VMOVv8i16
    0U,	// VMOVv8i8
    4U,	// VMRS
    5U,	// VMRS_FPEXC
    5U,	// VMRS_FPINST
    5U,	// VMRS_FPINST2
    5U,	// VMRS_FPSID
    6U,	// VMRS_MVFR0
    6U,	// VMRS_MVFR1
    6U,	// VMRS_MVFR2
    0U,	// VMSR
    0U,	// VMSR_FPEXC
    0U,	// VMSR_FPINST
    0U,	// VMSR_FPINST2
    0U,	// VMSR_FPSID
    70705U,	// VMULD
    70705U,	// VMULH
    1112U,	// VMULLp64
    0U,	// VMULLp8
    17496U,	// VMULLslsv2i32
    17496U,	// VMULLslsv4i16
    17496U,	// VMULLsluv2i32
    17496U,	// VMULLsluv4i16
    1112U,	// VMULLsv2i64
    1112U,	// VMULLsv4i32
    1112U,	// VMULLsv8i16
    1112U,	// VMULLuv2i64
    1112U,	// VMULLuv4i32
    1112U,	// VMULLuv8i16
    70705U,	// VMULS
    70705U,	// VMULfd
    70705U,	// VMULfq
    70705U,	// VMULhd
    70705U,	// VMULhq
    0U,	// VMULpd
    0U,	// VMULpq
    955441U,	// VMULslfd
    955441U,	// VMULslfq
    955441U,	// VMULslhd
    955441U,	// VMULslhq
    17496U,	// VMULslv2i32
    17496U,	// VMULslv4i16
    17496U,	// VMULslv4i32
    17496U,	// VMULslv8i16
    1112U,	// VMULv16i8
    1112U,	// VMULv2i32
    1112U,	// VMULv4i16
    1112U,	// VMULv4i32
    1112U,	// VMULv8i16
    1112U,	// VMULv8i8
    1024U,	// VMVNd
    1024U,	// VMVNq
    0U,	// VMVNv2i32
    0U,	// VMVNv4i16
    0U,	// VMVNv4i32
    0U,	// VMVNv8i16
    33U,	// VNEGD
    33U,	// VNEGH
    33U,	// VNEGS
    33U,	// VNEGf32q
    33U,	// VNEGfd
    33U,	// VNEGhd
    33U,	// VNEGhq
    0U,	// VNEGs16d
    0U,	// VNEGs16q
    0U,	// VNEGs32d
    0U,	// VNEGs32q
    0U,	// VNEGs8d
    0U,	// VNEGs8q
    68659U,	// VNMLAD
    68659U,	// VNMLAH
    68659U,	// VNMLAS
    68659U,	// VNMLSD
    68659U,	// VNMLSH
    68659U,	// VNMLSS
    70705U,	// VNMULD
    70705U,	// VNMULH
    70705U,	// VNMULS
    0U,	// VORNd
    0U,	// VORNq
    0U,	// VORRd
    0U,	// VORRiv2i32
    0U,	// VORRiv4i16
    0U,	// VORRiv4i32
    0U,	// VORRiv8i16
    0U,	// VORRq
    0U,	// VPADALsv16i8
    0U,	// VPADALsv2i32
    0U,	// VPADALsv4i16
    0U,	// VPADALsv4i32
    0U,	// VPADALsv8i16
    0U,	// VPADALsv8i8
    0U,	// VPADALuv16i8
    0U,	// VPADALuv2i32
    0U,	// VPADALuv4i16
    0U,	// VPADALuv4i32
    0U,	// VPADALuv8i16
    0U,	// VPADALuv8i8
    0U,	// VPADDLsv16i8
    0U,	// VPADDLsv2i32
    0U,	// VPADDLsv4i16
    0U,	// VPADDLsv4i32
    0U,	// VPADDLsv8i16
    0U,	// VPADDLsv8i8
    0U,	// VPADDLuv16i8
    0U,	// VPADDLuv2i32
    0U,	// VPADDLuv4i16
    0U,	// VPADDLuv4i32
    0U,	// VPADDLuv8i16
    0U,	// VPADDLuv8i8
    70705U,	// VPADDf
    70705U,	// VPADDh
    1112U,	// VPADDi16
    1112U,	// VPADDi32
    1112U,	// VPADDi8
    70705U,	// VPMAXf
    70705U,	// VPMAXh
    1112U,	// VPMAXs16
    1112U,	// VPMAXs32
    1112U,	// VPMAXs8
    1112U,	// VPMAXu16
    1112U,	// VPMAXu32
    1112U,	// VPMAXu8
    70705U,	// VPMINf
    70705U,	// VPMINh
    1112U,	// VPMINs16
    1112U,	// VPMINs32
    1112U,	// VPMINs8
    1112U,	// VPMINu16
    1112U,	// VPMINu32
    1112U,	// VPMINu8
    0U,	// VQABSv16i8
    0U,	// VQABSv2i32
    0U,	// VQABSv4i16
    0U,	// VQABSv4i32
    0U,	// VQABSv8i16
    0U,	// VQABSv8i8
    1112U,	// VQADDsv16i8
    1112U,	// VQADDsv1i64
    1112U,	// VQADDsv2i32
    1112U,	// VQADDsv2i64
    1112U,	// VQADDsv4i16
    1112U,	// VQADDsv4i32
    1112U,	// VQADDsv8i16
    1112U,	// VQADDsv8i8
    1112U,	// VQADDuv16i8
    1112U,	// VQADDuv1i64
    1112U,	// VQADDuv2i32
    1112U,	// VQADDuv2i64
    1112U,	// VQADDuv4i16
    1112U,	// VQADDuv4i32
    1112U,	// VQADDuv8i16
    1112U,	// VQADDuv8i8
    73752U,	// VQDMLALslv2i32
    73752U,	// VQDMLALslv4i16
    1048U,	// VQDMLALv2i64
    1048U,	// VQDMLALv4i32
    73752U,	// VQDMLSLslv2i32
    73752U,	// VQDMLSLslv4i16
    1048U,	// VQDMLSLv2i64
    1048U,	// VQDMLSLv4i32
    17496U,	// VQDMULHslv2i32
    17496U,	// VQDMULHslv4i16
    17496U,	// VQDMULHslv4i32
    17496U,	// VQDMULHslv8i16
    1112U,	// VQDMULHv2i32
    1112U,	// VQDMULHv4i16
    1112U,	// VQDMULHv4i32
    1112U,	// VQDMULHv8i16
    17496U,	// VQDMULLslv2i32
    17496U,	// VQDMULLslv4i16
    1112U,	// VQDMULLv2i64
    1112U,	// VQDMULLv4i32
    0U,	// VQMOVNsuv2i32
    0U,	// VQMOVNsuv4i16
    0U,	// VQMOVNsuv8i8
    0U,	// VQMOVNsv2i32
    0U,	// VQMOVNsv4i16
    0U,	// VQMOVNsv8i8
    0U,	// VQMOVNuv2i32
    0U,	// VQMOVNuv4i16
    0U,	// VQMOVNuv8i8
    0U,	// VQNEGv16i8
    0U,	// VQNEGv2i32
    0U,	// VQNEGv4i16
    0U,	// VQNEGv4i32
    0U,	// VQNEGv8i16
    0U,	// VQNEGv8i8
    73752U,	// VQRDMLAHslv2i32
    73752U,	// VQRDMLAHslv4i16
    73752U,	// VQRDMLAHslv4i32
    73752U,	// VQRDMLAHslv8i16
    1048U,	// VQRDMLAHv2i32
    1048U,	// VQRDMLAHv4i16
    1048U,	// VQRDMLAHv4i32
    1048U,	// VQRDMLAHv8i16
    73752U,	// VQRDMLSHslv2i32
    73752U,	// VQRDMLSHslv4i16
    73752U,	// VQRDMLSHslv4i32
    73752U,	// VQRDMLSHslv8i16
    1048U,	// VQRDMLSHv2i32
    1048U,	// VQRDMLSHv4i16
    1048U,	// VQRDMLSHv4i32
    1048U,	// VQRDMLSHv8i16
    17496U,	// VQRDMULHslv2i32
    17496U,	// VQRDMULHslv4i16
    17496U,	// VQRDMULHslv4i32
    17496U,	// VQRDMULHslv8i16
    1112U,	// VQRDMULHv2i32
    1112U,	// VQRDMULHv4i16
    1112U,	// VQRDMULHv4i32
    1112U,	// VQRDMULHv8i16
    1112U,	// VQRSHLsv16i8
    1112U,	// VQRSHLsv1i64
    1112U,	// VQRSHLsv2i32
    1112U,	// VQRSHLsv2i64
    1112U,	// VQRSHLsv4i16
    1112U,	// VQRSHLsv4i32
    1112U,	// VQRSHLsv8i16
    1112U,	// VQRSHLsv8i8
    1112U,	// VQRSHLuv16i8
    1112U,	// VQRSHLuv1i64
    1112U,	// VQRSHLuv2i32
    1112U,	// VQRSHLuv2i64
    1112U,	// VQRSHLuv4i16
    1112U,	// VQRSHLuv4i32
    1112U,	// VQRSHLuv8i16
    1112U,	// VQRSHLuv8i8
    1112U,	// VQRSHRNsv2i32
    1112U,	// VQRSHRNsv4i16
    1112U,	// VQRSHRNsv8i8
    1112U,	// VQRSHRNuv2i32
    1112U,	// VQRSHRNuv4i16
    1112U,	// VQRSHRNuv8i8
    1112U,	// VQRSHRUNv2i32
    1112U,	// VQRSHRUNv4i16
    1112U,	// VQRSHRUNv8i8
    1112U,	// VQSHLsiv16i8
    1112U,	// VQSHLsiv1i64
    1112U,	// VQSHLsiv2i32
    1112U,	// VQSHLsiv2i64
    1112U,	// VQSHLsiv4i16
    1112U,	// VQSHLsiv4i32
    1112U,	// VQSHLsiv8i16
    1112U,	// VQSHLsiv8i8
    1112U,	// VQSHLsuv16i8
    1112U,	// VQSHLsuv1i64
    1112U,	// VQSHLsuv2i32
    1112U,	// VQSHLsuv2i64
    1112U,	// VQSHLsuv4i16
    1112U,	// VQSHLsuv4i32
    1112U,	// VQSHLsuv8i16
    1112U,	// VQSHLsuv8i8
    1112U,	// VQSHLsv16i8
    1112U,	// VQSHLsv1i64
    1112U,	// VQSHLsv2i32
    1112U,	// VQSHLsv2i64
    1112U,	// VQSHLsv4i16
    1112U,	// VQSHLsv4i32
    1112U,	// VQSHLsv8i16
    1112U,	// VQSHLsv8i8
    1112U,	// VQSHLuiv16i8
    1112U,	// VQSHLuiv1i64
    1112U,	// VQSHLuiv2i32
    1112U,	// VQSHLuiv2i64
    1112U,	// VQSHLuiv4i16
    1112U,	// VQSHLuiv4i32
    1112U,	// VQSHLuiv8i16
    1112U,	// VQSHLuiv8i8
    1112U,	// VQSHLuv16i8
    1112U,	// VQSHLuv1i64
    1112U,	// VQSHLuv2i32
    1112U,	// VQSHLuv2i64
    1112U,	// VQSHLuv4i16
    1112U,	// VQSHLuv4i32
    1112U,	// VQSHLuv8i16
    1112U,	// VQSHLuv8i8
    1112U,	// VQSHRNsv2i32
    1112U,	// VQSHRNsv4i16
    1112U,	// VQSHRNsv8i8
    1112U,	// VQSHRNuv2i32
    1112U,	// VQSHRNuv4i16
    1112U,	// VQSHRNuv8i8
    1112U,	// VQSHRUNv2i32
    1112U,	// VQSHRUNv4i16
    1112U,	// VQSHRUNv8i8
    1112U,	// VQSUBsv16i8
    1112U,	// VQSUBsv1i64
    1112U,	// VQSUBsv2i32
    1112U,	// VQSUBsv2i64
    1112U,	// VQSUBsv4i16
    1112U,	// VQSUBsv4i32
    1112U,	// VQSUBsv8i16
    1112U,	// VQSUBsv8i8
    1112U,	// VQSUBuv16i8
    1112U,	// VQSUBuv1i64
    1112U,	// VQSUBuv2i32
    1112U,	// VQSUBuv2i64
    1112U,	// VQSUBuv4i16
    1112U,	// VQSUBuv4i32
    1112U,	// VQSUBuv8i16
    1112U,	// VQSUBuv8i8
    1112U,	// VRADDHNv2i32
    1112U,	// VRADDHNv4i16
    1112U,	// VRADDHNv8i8
    0U,	// VRECPEd
    33U,	// VRECPEfd
    33U,	// VRECPEfq
    33U,	// VRECPEhd
    33U,	// VRECPEhq
    0U,	// VRECPEq
    70705U,	// VRECPSfd
    70705U,	// VRECPSfq
    70705U,	// VRECPShd
    70705U,	// VRECPShq
    1024U,	// VREV16d8
    1024U,	// VREV16q8
    1024U,	// VREV32d16
    1024U,	// VREV32d8
    1024U,	// VREV32q16
    1024U,	// VREV32q8
    1024U,	// VREV64d16
    1024U,	// VREV64d32
    1024U,	// VREV64d8
    1024U,	// VREV64q16
    1024U,	// VREV64q32
    1024U,	// VREV64q8
    1112U,	// VRHADDsv16i8
    1112U,	// VRHADDsv2i32
    1112U,	// VRHADDsv4i16
    1112U,	// VRHADDsv4i32
    1112U,	// VRHADDsv8i16
    1112U,	// VRHADDsv8i8
    1112U,	// VRHADDuv16i8
    1112U,	// VRHADDuv2i32
    1112U,	// VRHADDuv4i16
    1112U,	// VRHADDuv4i32
    1112U,	// VRHADDuv8i16
    1112U,	// VRHADDuv8i8
    0U,	// VRINTAD
    0U,	// VRINTAH
    0U,	// VRINTANDf
    0U,	// VRINTANDh
    0U,	// VRINTANQf
    0U,	// VRINTANQh
    0U,	// VRINTAS
    0U,	// VRINTMD
    0U,	// VRINTMH
    0U,	// VRINTMNDf
    0U,	// VRINTMNDh
    0U,	// VRINTMNQf
    0U,	// VRINTMNQh
    0U,	// VRINTMS
    0U,	// VRINTND
    0U,	// VRINTNH
    0U,	// VRINTNNDf
    0U,	// VRINTNNDh
    0U,	// VRINTNNQf
    0U,	// VRINTNNQh
    0U,	// VRINTNS
    0U,	// VRINTPD
    0U,	// VRINTPH
    0U,	// VRINTPNDf
    0U,	// VRINTPNDh
    0U,	// VRINTPNQf
    0U,	// VRINTPNQh
    0U,	// VRINTPS
    33U,	// VRINTRD
    33U,	// VRINTRH
    33U,	// VRINTRS
    33U,	// VRINTXD
    33U,	// VRINTXH
    0U,	// VRINTXNDf
    0U,	// VRINTXNDh
    0U,	// VRINTXNQf
    0U,	// VRINTXNQh
    33U,	// VRINTXS
    33U,	// VRINTZD
    33U,	// VRINTZH
    0U,	// VRINTZNDf
    0U,	// VRINTZNDh
    0U,	// VRINTZNQf
    0U,	// VRINTZNQh
    33U,	// VRINTZS
    1112U,	// VRSHLsv16i8
    1112U,	// VRSHLsv1i64
    1112U,	// VRSHLsv2i32
    1112U,	// VRSHLsv2i64
    1112U,	// VRSHLsv4i16
    1112U,	// VRSHLsv4i32
    1112U,	// VRSHLsv8i16
    1112U,	// VRSHLsv8i8
    1112U,	// VRSHLuv16i8
    1112U,	// VRSHLuv1i64
    1112U,	// VRSHLuv2i32
    1112U,	// VRSHLuv2i64
    1112U,	// VRSHLuv4i16
    1112U,	// VRSHLuv4i32
    1112U,	// VRSHLuv8i16
    1112U,	// VRSHLuv8i8
    1112U,	// VRSHRNv2i32
    1112U,	// VRSHRNv4i16
    1112U,	// VRSHRNv8i8
    1112U,	// VRSHRsv16i8
    1112U,	// VRSHRsv1i64
    1112U,	// VRSHRsv2i32
    1112U,	// VRSHRsv2i64
    1112U,	// VRSHRsv4i16
    1112U,	// VRSHRsv4i32
    1112U,	// VRSHRsv8i16
    1112U,	// VRSHRsv8i8
    1112U,	// VRSHRuv16i8
    1112U,	// VRSHRuv1i64
    1112U,	// VRSHRuv2i32
    1112U,	// VRSHRuv2i64
    1112U,	// VRSHRuv4i16
    1112U,	// VRSHRuv4i32
    1112U,	// VRSHRuv8i16
    1112U,	// VRSHRuv8i8
    0U,	// VRSQRTEd
    33U,	// VRSQRTEfd
    33U,	// VRSQRTEfq
    33U,	// VRSQRTEhd
    33U,	// VRSQRTEhq
    0U,	// VRSQRTEq
    70705U,	// VRSQRTSfd
    70705U,	// VRSQRTSfq
    70705U,	// VRSQRTShd
    70705U,	// VRSQRTShq
    1048U,	// VRSRAsv16i8
    1048U,	// VRSRAsv1i64
    1048U,	// VRSRAsv2i32
    1048U,	// VRSRAsv2i64
    1048U,	// VRSRAsv4i16
    1048U,	// VRSRAsv4i32
    1048U,	// VRSRAsv8i16
    1048U,	// VRSRAsv8i8
    1048U,	// VRSRAuv16i8
    1048U,	// VRSRAuv1i64
    1048U,	// VRSRAuv2i32
    1048U,	// VRSRAuv2i64
    1048U,	// VRSRAuv4i16
    1048U,	// VRSRAuv4i32
    1048U,	// VRSRAuv8i16
    1048U,	// VRSRAuv8i8
    1112U,	// VRSUBHNv2i32
    1112U,	// VRSUBHNv4i16
    1112U,	// VRSUBHNv8i8
    0U,	// VSDOTD
    0U,	// VSDOTDI
    0U,	// VSDOTQ
    0U,	// VSDOTQI
    1112U,	// VSELEQD
    1112U,	// VSELEQH
    1112U,	// VSELEQS
    1112U,	// VSELGED
    1112U,	// VSELGEH
    1112U,	// VSELGES
    1112U,	// VSELGTD
    1112U,	// VSELGTH
    1112U,	// VSELGTS
    1112U,	// VSELVSD
    1112U,	// VSELVSH
    1112U,	// VSELVSS
    6U,	// VSETLNi16
    6U,	// VSETLNi32
    6U,	// VSETLNi8
    1112U,	// VSHLLi16
    1112U,	// VSHLLi32
    1112U,	// VSHLLi8
    1112U,	// VSHLLsv2i64
    1112U,	// VSHLLsv4i32
    1112U,	// VSHLLsv8i16
    1112U,	// VSHLLuv2i64
    1112U,	// VSHLLuv4i32
    1112U,	// VSHLLuv8i16
    1112U,	// VSHLiv16i8
    1112U,	// VSHLiv1i64
    1112U,	// VSHLiv2i32
    1112U,	// VSHLiv2i64
    1112U,	// VSHLiv4i16
    1112U,	// VSHLiv4i32
    1112U,	// VSHLiv8i16
    1112U,	// VSHLiv8i8
    1112U,	// VSHLsv16i8
    1112U,	// VSHLsv1i64
    1112U,	// VSHLsv2i32
    1112U,	// VSHLsv2i64
    1112U,	// VSHLsv4i16
    1112U,	// VSHLsv4i32
    1112U,	// VSHLsv8i16
    1112U,	// VSHLsv8i8
    1112U,	// VSHLuv16i8
    1112U,	// VSHLuv1i64
    1112U,	// VSHLuv2i32
    1112U,	// VSHLuv2i64
    1112U,	// VSHLuv4i16
    1112U,	// VSHLuv4i32
    1112U,	// VSHLuv8i16
    1112U,	// VSHLuv8i8
    1112U,	// VSHRNv2i32
    1112U,	// VSHRNv4i16
    1112U,	// VSHRNv8i8
    1112U,	// VSHRsv16i8
    1112U,	// VSHRsv1i64
    1112U,	// VSHRsv2i32
    1112U,	// VSHRsv2i64
    1112U,	// VSHRsv4i16
    1112U,	// VSHRsv4i32
    1112U,	// VSHRsv8i16
    1112U,	// VSHRsv8i8
    1112U,	// VSHRuv16i8
    1112U,	// VSHRuv1i64
    1112U,	// VSHRuv2i32
    1112U,	// VSHRuv2i64
    1112U,	// VSHRuv4i16
    1112U,	// VSHRuv4i32
    1112U,	// VSHRuv8i16
    1112U,	// VSHRuv8i8
    0U,	// VSHTOD
    7U,	// VSHTOH
    0U,	// VSHTOS
    0U,	// VSITOD
    0U,	// VSITOH
    0U,	// VSITOS
    589912U,	// VSLIv16i8
    589912U,	// VSLIv1i64
    589912U,	// VSLIv2i32
    589912U,	// VSLIv2i64
    589912U,	// VSLIv4i16
    589912U,	// VSLIv4i32
    589912U,	// VSLIv8i16
    589912U,	// VSLIv8i8
    7U,	// VSLTOD
    7U,	// VSLTOH
    7U,	// VSLTOS
    33U,	// VSQRTD
    33U,	// VSQRTH
    33U,	// VSQRTS
    1048U,	// VSRAsv16i8
    1048U,	// VSRAsv1i64
    1048U,	// VSRAsv2i32
    1048U,	// VSRAsv2i64
    1048U,	// VSRAsv4i16
    1048U,	// VSRAsv4i32
    1048U,	// VSRAsv8i16
    1048U,	// VSRAsv8i8
    1048U,	// VSRAuv16i8
    1048U,	// VSRAuv1i64
    1048U,	// VSRAuv2i32
    1048U,	// VSRAuv2i64
    1048U,	// VSRAuv4i16
    1048U,	// VSRAuv4i32
    1048U,	// VSRAuv8i16
    1048U,	// VSRAuv8i8
    589912U,	// VSRIv16i8
    589912U,	// VSRIv1i64
    589912U,	// VSRIv2i32
    589912U,	// VSRIv2i64
    589912U,	// VSRIv4i16
    589912U,	// VSRIv4i32
    589912U,	// VSRIv8i16
    589912U,	// VSRIv8i8
    308U,	// VST1LNd16
    23768380U,	// VST1LNd16_UPD
    308U,	// VST1LNd32
    23768380U,	// VST1LNd32_UPD
    308U,	// VST1LNd8
    23768380U,	// VST1LNd8_UPD
    0U,	// VST1LNq16Pseudo
    0U,	// VST1LNq16Pseudo_UPD
    0U,	// VST1LNq32Pseudo
    0U,	// VST1LNq32Pseudo_UPD
    0U,	// VST1LNq8Pseudo
    0U,	// VST1LNq8Pseudo_UPD
    0U,	// VST1d16
    0U,	// VST1d16Q
    0U,	// VST1d16QPseudo
    0U,	// VST1d16Qwb_fixed
    0U,	// VST1d16Qwb_register
    0U,	// VST1d16T
    0U,	// VST1d16TPseudo
    0U,	// VST1d16Twb_fixed
    0U,	// VST1d16Twb_register
    0U,	// VST1d16wb_fixed
    0U,	// VST1d16wb_register
    0U,	// VST1d32
    0U,	// VST1d32Q
    0U,	// VST1d32QPseudo
    0U,	// VST1d32Qwb_fixed
    0U,	// VST1d32Qwb_register
    0U,	// VST1d32T
    0U,	// VST1d32TPseudo
    0U,	// VST1d32Twb_fixed
    0U,	// VST1d32Twb_register
    0U,	// VST1d32wb_fixed
    0U,	// VST1d32wb_register
    0U,	// VST1d64
    0U,	// VST1d64Q
    0U,	// VST1d64QPseudo
    0U,	// VST1d64QPseudoWB_fixed
    0U,	// VST1d64QPseudoWB_register
    0U,	// VST1d64Qwb_fixed
    0U,	// VST1d64Qwb_register
    0U,	// VST1d64T
    0U,	// VST1d64TPseudo
    0U,	// VST1d64TPseudoWB_fixed
    0U,	// VST1d64TPseudoWB_register
    0U,	// VST1d64Twb_fixed
    0U,	// VST1d64Twb_register
    0U,	// VST1d64wb_fixed
    0U,	// VST1d64wb_register
    0U,	// VST1d8
    0U,	// VST1d8Q
    0U,	// VST1d8QPseudo
    0U,	// VST1d8Qwb_fixed
    0U,	// VST1d8Qwb_register
    0U,	// VST1d8T
    0U,	// VST1d8TPseudo
    0U,	// VST1d8Twb_fixed
    0U,	// VST1d8Twb_register
    0U,	// VST1d8wb_fixed
    0U,	// VST1d8wb_register
    0U,	// VST1q16
    0U,	// VST1q16HighQPseudo
    0U,	// VST1q16HighTPseudo
    0U,	// VST1q16LowQPseudo_UPD
    0U,	// VST1q16LowTPseudo_UPD
    0U,	// VST1q16wb_fixed
    0U,	// VST1q16wb_register
    0U,	// VST1q32
    0U,	// VST1q32HighQPseudo
    0U,	// VST1q32HighTPseudo
    0U,	// VST1q32LowQPseudo_UPD
    0U,	// VST1q32LowTPseudo_UPD
    0U,	// VST1q32wb_fixed
    0U,	// VST1q32wb_register
    0U,	// VST1q64
    0U,	// VST1q64HighQPseudo
    0U,	// VST1q64HighTPseudo
    0U,	// VST1q64LowQPseudo_UPD
    0U,	// VST1q64LowTPseudo_UPD
    0U,	// VST1q64wb_fixed
    0U,	// VST1q64wb_register
    0U,	// VST1q8
    0U,	// VST1q8HighQPseudo
    0U,	// VST1q8HighTPseudo
    0U,	// VST1q8LowQPseudo_UPD
    0U,	// VST1q8LowTPseudo_UPD
    0U,	// VST1q8wb_fixed
    0U,	// VST1q8wb_register
    222900460U,	// VST2LNd16
    0U,	// VST2LNd16Pseudo
    0U,	// VST2LNd16Pseudo_UPD
    995572U,	// VST2LNd16_UPD
    222900460U,	// VST2LNd32
    0U,	// VST2LNd32Pseudo
    0U,	// VST2LNd32Pseudo_UPD
    995572U,	// VST2LNd32_UPD
    222900460U,	// VST2LNd8
    0U,	// VST2LNd8Pseudo
    0U,	// VST2LNd8Pseudo_UPD
    995572U,	// VST2LNd8_UPD
    222900460U,	// VST2LNq16
    0U,	// VST2LNq16Pseudo
    0U,	// VST2LNq16Pseudo_UPD
    995572U,	// VST2LNq16_UPD
    222900460U,	// VST2LNq32
    0U,	// VST2LNq32Pseudo
    0U,	// VST2LNq32Pseudo_UPD
    995572U,	// VST2LNq32_UPD
    0U,	// VST2b16
    0U,	// VST2b16wb_fixed
    0U,	// VST2b16wb_register
    0U,	// VST2b32
    0U,	// VST2b32wb_fixed
    0U,	// VST2b32wb_register
    0U,	// VST2b8
    0U,	// VST2b8wb_fixed
    0U,	// VST2b8wb_register
    0U,	// VST2d16
    0U,	// VST2d16wb_fixed
    0U,	// VST2d16wb_register
    0U,	// VST2d32
    0U,	// VST2d32wb_fixed
    0U,	// VST2d32wb_register
    0U,	// VST2d8
    0U,	// VST2d8wb_fixed
    0U,	// VST2d8wb_register
    0U,	// VST2q16
    0U,	// VST2q16Pseudo
    0U,	// VST2q16PseudoWB_fixed
    0U,	// VST2q16PseudoWB_register
    0U,	// VST2q16wb_fixed
    0U,	// VST2q16wb_register
    0U,	// VST2q32
    0U,	// VST2q32Pseudo
    0U,	// VST2q32PseudoWB_fixed
    0U,	// VST2q32PseudoWB_register
    0U,	// VST2q32wb_fixed
    0U,	// VST2q32wb_register
    0U,	// VST2q8
    0U,	// VST2q8Pseudo
    0U,	// VST2q8PseudoWB_fixed
    0U,	// VST2q8PseudoWB_register
    0U,	// VST2q8wb_fixed
    0U,	// VST2q8wb_register
    256454972U,	// VST3LNd16
    0U,	// VST3LNd16Pseudo
    0U,	// VST3LNd16Pseudo_UPD
    324U,	// VST3LNd16_UPD
    256454972U,	// VST3LNd32
    0U,	// VST3LNd32Pseudo
    0U,	// VST3LNd32Pseudo_UPD
    324U,	// VST3LNd32_UPD
    256454972U,	// VST3LNd8
    0U,	// VST3LNd8Pseudo
    0U,	// VST3LNd8Pseudo_UPD
    324U,	// VST3LNd8_UPD
    256454972U,	// VST3LNq16
    0U,	// VST3LNq16Pseudo
    0U,	// VST3LNq16Pseudo_UPD
    324U,	// VST3LNq16_UPD
    256454972U,	// VST3LNq32
    0U,	// VST3LNq32Pseudo
    0U,	// VST3LNq32Pseudo_UPD
    324U,	// VST3LNq32_UPD
    287342616U,	// VST3d16
    0U,	// VST3d16Pseudo
    0U,	// VST3d16Pseudo_UPD
    18760U,	// VST3d16_UPD
    287342616U,	// VST3d32
    0U,	// VST3d32Pseudo
    0U,	// VST3d32Pseudo_UPD
    18760U,	// VST3d32_UPD
    287342616U,	// VST3d8
    0U,	// VST3d8Pseudo
    0U,	// VST3d8Pseudo_UPD
    18760U,	// VST3d8_UPD
    287342616U,	// VST3q16
    0U,	// VST3q16Pseudo_UPD
    18760U,	// VST3q16_UPD
    0U,	// VST3q16oddPseudo
    0U,	// VST3q16oddPseudo_UPD
    287342616U,	// VST3q32
    0U,	// VST3q32Pseudo_UPD
    18760U,	// VST3q32_UPD
    0U,	// VST3q32oddPseudo
    0U,	// VST3q32oddPseudo_UPD
    287342616U,	// VST3q8
    0U,	// VST3q8Pseudo_UPD
    18760U,	// VST3q8_UPD
    0U,	// VST3q8oddPseudo
    0U,	// VST3q8oddPseudo_UPD
    323563764U,	// VST4LNd16
    0U,	// VST4LNd16Pseudo
    0U,	// VST4LNd16Pseudo_UPD
    19708U,	// VST4LNd16_UPD
    323563764U,	// VST4LNd32
    0U,	// VST4LNd32Pseudo
    0U,	// VST4LNd32Pseudo_UPD
    19708U,	// VST4LNd32_UPD
    323563764U,	// VST4LNd8
    0U,	// VST4LNd8Pseudo
    0U,	// VST4LNd8Pseudo_UPD
    19708U,	// VST4LNd8_UPD
    323563764U,	// VST4LNq16
    0U,	// VST4LNq16Pseudo
    0U,	// VST4LNq16Pseudo_UPD
    19708U,	// VST4LNq16_UPD
    323563764U,	// VST4LNq32
    0U,	// VST4LNq32Pseudo
    0U,	// VST4LNq32Pseudo_UPD
    19708U,	// VST4LNq32_UPD
    337674264U,	// VST4d16
    0U,	// VST4d16Pseudo
    0U,	// VST4d16Pseudo_UPD
    1016136U,	// VST4d16_UPD
    337674264U,	// VST4d32
    0U,	// VST4d32Pseudo
    0U,	// VST4d32Pseudo_UPD
    1016136U,	// VST4d32_UPD
    337674264U,	// VST4d8
    0U,	// VST4d8Pseudo
    0U,	// VST4d8Pseudo_UPD
    1016136U,	// VST4d8_UPD
    337674264U,	// VST4q16
    0U,	// VST4q16Pseudo_UPD
    1016136U,	// VST4q16_UPD
    0U,	// VST4q16oddPseudo
    0U,	// VST4q16oddPseudo_UPD
    337674264U,	// VST4q32
    0U,	// VST4q32Pseudo_UPD
    1016136U,	// VST4q32_UPD
    0U,	// VST4q32oddPseudo
    0U,	// VST4q32oddPseudo_UPD
    337674264U,	// VST4q8
    0U,	// VST4q8Pseudo_UPD
    1016136U,	// VST4q8_UPD
    0U,	// VST4q8oddPseudo
    0U,	// VST4q8oddPseudo_UPD
    33U,	// VSTMDDB_UPD
    1136U,	// VSTMDIA
    33U,	// VSTMDIA_UPD
    0U,	// VSTMQIA
    33U,	// VSTMSDB_UPD
    1136U,	// VSTMSIA
    33U,	// VSTMSIA_UPD
    288U,	// VSTRD
    296U,	// VSTRH
    288U,	// VSTRS
    70705U,	// VSUBD
    70705U,	// VSUBH
    1112U,	// VSUBHNv2i32
    1112U,	// VSUBHNv4i16
    1112U,	// VSUBHNv8i8
    1112U,	// VSUBLsv2i64
    1112U,	// VSUBLsv4i32
    1112U,	// VSUBLsv8i16
    1112U,	// VSUBLuv2i64
    1112U,	// VSUBLuv4i32
    1112U,	// VSUBLuv8i16
    70705U,	// VSUBS
    1112U,	// VSUBWsv2i64
    1112U,	// VSUBWsv4i32
    1112U,	// VSUBWsv8i16
    1112U,	// VSUBWuv2i64
    1112U,	// VSUBWuv4i32
    1112U,	// VSUBWuv8i16
    70705U,	// VSUBfd
    70705U,	// VSUBfq
    70705U,	// VSUBhd
    70705U,	// VSUBhq
    1112U,	// VSUBv16i8
    1112U,	// VSUBv1i64
    1112U,	// VSUBv2i32
    1112U,	// VSUBv2i64
    1112U,	// VSUBv4i16
    1112U,	// VSUBv4i32
    1112U,	// VSUBv8i16
    1112U,	// VSUBv8i8
    1024U,	// VSWPd
    1024U,	// VSWPq
    336U,	// VTBL1
    344U,	// VTBL2
    352U,	// VTBL3
    0U,	// VTBL3Pseudo
    360U,	// VTBL4
    0U,	// VTBL4Pseudo
    368U,	// VTBX1
    376U,	// VTBX2
    384U,	// VTBX3
    0U,	// VTBX3Pseudo
    392U,	// VTBX4
    0U,	// VTBX4Pseudo
    0U,	// VTOSHD
    7U,	// VTOSHH
    0U,	// VTOSHS
    0U,	// VTOSIRD
    0U,	// VTOSIRH
    0U,	// VTOSIRS
    0U,	// VTOSIZD
    0U,	// VTOSIZH
    0U,	// VTOSIZS
    7U,	// VTOSLD
    7U,	// VTOSLH
    7U,	// VTOSLS
    0U,	// VTOUHD
    7U,	// VTOUHH
    0U,	// VTOUHS
    0U,	// VTOUIRD
    0U,	// VTOUIRH
    0U,	// VTOUIRS
    0U,	// VTOUIZD
    0U,	// VTOUIZH
    0U,	// VTOUIZS
    7U,	// VTOULD
    7U,	// VTOULH
    7U,	// VTOULS
    1024U,	// VTRNd16
    1024U,	// VTRNd32
    1024U,	// VTRNd8
    1024U,	// VTRNq16
    1024U,	// VTRNq32
    1024U,	// VTRNq8
    0U,	// VTSTv16i8
    0U,	// VTSTv2i32
    0U,	// VTSTv4i16
    0U,	// VTSTv4i32
    0U,	// VTSTv8i16
    0U,	// VTSTv8i8
    0U,	// VUDOTD
    0U,	// VUDOTDI
    0U,	// VUDOTQ
    0U,	// VUDOTQI
    0U,	// VUHTOD
    7U,	// VUHTOH
    0U,	// VUHTOS
    0U,	// VUITOD
    0U,	// VUITOH
    0U,	// VUITOS
    7U,	// VULTOD
    7U,	// VULTOH
    7U,	// VULTOS
    1024U,	// VUZPd16
    1024U,	// VUZPd8
    1024U,	// VUZPq16
    1024U,	// VUZPq32
    1024U,	// VUZPq8
    1024U,	// VZIPd16
    1024U,	// VZIPd8
    1024U,	// VZIPq16
    1024U,	// VZIPq32
    1024U,	// VZIPq8
    20592U,	// sysLDMDA
    401U,	// sysLDMDA_UPD
    20592U,	// sysLDMDB
    401U,	// sysLDMDB_UPD
    20592U,	// sysLDMIA
    401U,	// sysLDMIA_UPD
    20592U,	// sysLDMIB
    401U,	// sysLDMIB_UPD
    20592U,	// sysSTMDA
    401U,	// sysSTMDA_UPD
    20592U,	// sysSTMDB
    401U,	// sysSTMDB_UPD
    20592U,	// sysSTMIA
    401U,	// sysSTMIA_UPD
    20592U,	// sysSTMIB
    401U,	// sysSTMIB_UPD
    0U,	// t2ADCri
    0U,	// t2ADCrr
    1048576U,	// t2ADCrs
    0U,	// t2ADDri
    0U,	// t2ADDri12
    0U,	// t2ADDrr
    1048576U,	// t2ADDrs
    72U,	// t2ADR
    0U,	// t2ANDri
    0U,	// t2ANDrr
    1048576U,	// t2ANDrs
    1081344U,	// t2ASRri
    0U,	// t2ASRrr
    0U,	// t2B
    80U,	// t2BFC
    163928U,	// t2BFI
    0U,	// t2BICri
    0U,	// t2BICrr
    1048576U,	// t2BICrs
    0U,	// t2BXJ
    0U,	// t2Bcc
    4145U,	// t2CDP
    4145U,	// t2CDP2
    0U,	// t2CLREX
    1024U,	// t2CLZ
    1024U,	// t2CMNri
    1024U,	// t2CMNzrr
    56U,	// t2CMNzrs
    1024U,	// t2CMPri
    1024U,	// t2CMPrr
    56U,	// t2CMPrs
    0U,	// t2CPS1p
    0U,	// t2CPS2p
    1112U,	// t2CPS3p
    1112U,	// t2CRC32B
    1112U,	// t2CRC32CB
    1112U,	// t2CRC32CH
    1112U,	// t2CRC32CW
    1112U,	// t2CRC32H
    1112U,	// t2CRC32W
    0U,	// t2DBG
    0U,	// t2DCPS1
    0U,	// t2DCPS2
    0U,	// t2DCPS3
    0U,	// t2DMB
    0U,	// t2DSB
    0U,	// t2EORri
    0U,	// t2EORrr
    1048576U,	// t2EORrs
    0U,	// t2HINT
    0U,	// t2HVC
    0U,	// t2ISB
    0U,	// t2IT
    0U,	// t2Int_eh_sjlj_setjmp
    0U,	// t2Int_eh_sjlj_setjmp_nofp
    8U,	// t2LDA
    8U,	// t2LDAB
    8U,	// t2LDAEX
    8U,	// t2LDAEXB
    557056U,	// t2LDAEXD
    8U,	// t2LDAEXH
    8U,	// t2LDAH
    122U,	// t2LDC2L_OFFSET
    196738U,	// t2LDC2L_OPTION
    229506U,	// t2LDC2L_POST
    138U,	// t2LDC2L_PRE
    122U,	// t2LDC2_OFFSET
    196738U,	// t2LDC2_OPTION
    229506U,	// t2LDC2_POST
    138U,	// t2LDC2_PRE
    122U,	// t2LDCL_OFFSET
    196738U,	// t2LDCL_OPTION
    229506U,	// t2LDCL_POST
    138U,	// t2LDCL_PRE
    122U,	// t2LDC_OFFSET
    196738U,	// t2LDC_OPTION
    229506U,	// t2LDC_POST
    138U,	// t2LDC_PRE
    1136U,	// t2LDMDB
    33U,	// t2LDMDB_UPD
    1136U,	// t2LDMIA
    33U,	// t2LDMIA_UPD
    408U,	// t2LDRBT
    21632U,	// t2LDRB_POST
    416U,	// t2LDRB_PRE
    160U,	// t2LDRBi12
    408U,	// t2LDRBi8
    424U,	// t2LDRBpci
    432U,	// t2LDRBs
    25493504U,	// t2LDRD_POST
    1114112U,	// t2LDRD_PRE
    1146880U,	// t2LDRDi8
    440U,	// t2LDREX
    8U,	// t2LDREXB
    557056U,	// t2LDREXD
    8U,	// t2LDREXH
    408U,	// t2LDRHT
    21632U,	// t2LDRH_POST
    416U,	// t2LDRH_PRE
    160U,	// t2LDRHi12
    408U,	// t2LDRHi8
    424U,	// t2LDRHpci
    432U,	// t2LDRHs
    408U,	// t2LDRSBT
    21632U,	// t2LDRSB_POST
    416U,	// t2LDRSB_PRE
    160U,	// t2LDRSBi12
    408U,	// t2LDRSBi8
    424U,	// t2LDRSBpci
    432U,	// t2LDRSBs
    408U,	// t2LDRSHT
    21632U,	// t2LDRSH_POST
    416U,	// t2LDRSH_PRE
    160U,	// t2LDRSHi12
    408U,	// t2LDRSHi8
    424U,	// t2LDRSHpci
    432U,	// t2LDRSHs
    408U,	// t2LDRT
    21632U,	// t2LDR_POST
    416U,	// t2LDR_PRE
    160U,	// t2LDRi12
    408U,	// t2LDRi8
    424U,	// t2LDRpci
    432U,	// t2LDRs
    0U,	// t2LSLri
    0U,	// t2LSLrr
    1081344U,	// t2LSRri
    0U,	// t2LSRrr
    4690993U,	// t2MCR
    4690993U,	// t2MCR2
    6788145U,	// t2MCRR
    6788145U,	// t2MCRR2
    35651584U,	// t2MLA
    35651584U,	// t2MLS
    1112U,	// t2MOVTi16
    1024U,	// t2MOVi
    1024U,	// t2MOVi16
    1024U,	// t2MOVr
    22528U,	// t2MOVsra_flag
    22528U,	// t2MOVsrl_flag
    0U,	// t2MRC
    0U,	// t2MRC2
    0U,	// t2MRRC
    0U,	// t2MRRC2
    2U,	// t2MRS_AR
    448U,	// t2MRS_M
    200U,	// t2MRSbanked
    2U,	// t2MRSsys_AR
    33U,	// t2MSR_AR
    33U,	// t2MSR_M
    0U,	// t2MSRbanked
    0U,	// t2MUL
    1024U,	// t2MVNi
    1024U,	// t2MVNr
    56U,	// t2MVNs
    0U,	// t2ORNri
    0U,	// t2ORNrr
    1048576U,	// t2ORNrs
    0U,	// t2ORRri
    0U,	// t2ORRrr
    1048576U,	// t2ORRrs
    8388608U,	// t2PKHBT
    10485760U,	// t2PKHTB
    0U,	// t2PLDWi12
    0U,	// t2PLDWi8
    0U,	// t2PLDWs
    0U,	// t2PLDi12
    0U,	// t2PLDi8
    0U,	// t2PLDpci
    0U,	// t2PLDs
    0U,	// t2PLIi12
    0U,	// t2PLIi8
    0U,	// t2PLIpci
    0U,	// t2PLIs
    0U,	// t2QADD
    0U,	// t2QADD16
    0U,	// t2QADD8
    0U,	// t2QASX
    0U,	// t2QDADD
    0U,	// t2QDSUB
    0U,	// t2QSAX
    0U,	// t2QSUB
    0U,	// t2QSUB16
    0U,	// t2QSUB8
    1024U,	// t2RBIT
    1024U,	// t2REV
    1024U,	// t2REV16
    1024U,	// t2REVSH
    0U,	// t2RFEDB
    0U,	// t2RFEDBW
    0U,	// t2RFEIA
    0U,	// t2RFEIAW
    0U,	// t2RORri
    0U,	// t2RORrr
    1024U,	// t2RRX
    0U,	// t2RSBri
    0U,	// t2RSBrr
    1048576U,	// t2RSBrs
    0U,	// t2SADD16
    0U,	// t2SADD8
    0U,	// t2SASX
    0U,	// t2SBCri
    0U,	// t2SBCrr
    1048576U,	// t2SBCrs
    69206016U,	// t2SBFX
    0U,	// t2SDIV
    0U,	// t2SEL
    0U,	// t2SETPAN
    0U,	// t2SG
    0U,	// t2SHADD16
    0U,	// t2SHADD8
    0U,	// t2SHASX
    0U,	// t2SHSAX
    0U,	// t2SHSUB16
    0U,	// t2SHSUB8
    0U,	// t2SMC
    35651584U,	// t2SMLABB
    35651584U,	// t2SMLABT
    35651584U,	// t2SMLAD
    35651584U,	// t2SMLADX
    35651584U,	// t2SMLAL
    35651584U,	// t2SMLALBB
    35651584U,	// t2SMLALBT
    35651584U,	// t2SMLALD
    35651584U,	// t2SMLALDX
    35651584U,	// t2SMLALTB
    35651584U,	// t2SMLALTT
    35651584U,	// t2SMLATB
    35651584U,	// t2SMLATT
    35651584U,	// t2SMLAWB
    35651584U,	// t2SMLAWT
    35651584U,	// t2SMLSD
    35651584U,	// t2SMLSDX
    35651584U,	// t2SMLSLD
    35651584U,	// t2SMLSLDX
    35651584U,	// t2SMMLA
    35651584U,	// t2SMMLAR
    35651584U,	// t2SMMLS
    35651584U,	// t2SMMLSR
    0U,	// t2SMMUL
    0U,	// t2SMMULR
    0U,	// t2SMUAD
    0U,	// t2SMUADX
    0U,	// t2SMULBB
    0U,	// t2SMULBT
    35651584U,	// t2SMULL
    0U,	// t2SMULTB
    0U,	// t2SMULTT
    0U,	// t2SMULWB
    0U,	// t2SMULWT
    0U,	// t2SMUSD
    0U,	// t2SMUSDX
    0U,	// t2SRSDB
    0U,	// t2SRSDB_UPD
    0U,	// t2SRSIA
    0U,	// t2SRSIA_UPD
    6352U,	// t2SSAT
    1232U,	// t2SSAT16
    0U,	// t2SSAX
    0U,	// t2SSUB16
    0U,	// t2SSUB8
    122U,	// t2STC2L_OFFSET
    196738U,	// t2STC2L_OPTION
    229506U,	// t2STC2L_POST
    138U,	// t2STC2L_PRE
    122U,	// t2STC2_OFFSET
    196738U,	// t2STC2_OPTION
    229506U,	// t2STC2_POST
    138U,	// t2STC2_PRE
    122U,	// t2STCL_OFFSET
    196738U,	// t2STCL_OPTION
    229506U,	// t2STCL_POST
    138U,	// t2STCL_PRE
    122U,	// t2STC_OFFSET
    196738U,	// t2STC_OPTION
    229506U,	// t2STC_POST
    138U,	// t2STC_PRE
    8U,	// t2STL
    8U,	// t2STLB
    557056U,	// t2STLEX
    557056U,	// t2STLEXB
    371195904U,	// t2STLEXD
    557056U,	// t2STLEXH
    8U,	// t2STLH
    1136U,	// t2STMDB
    33U,	// t2STMDB_UPD
    1136U,	// t2STMIA
    33U,	// t2STMIA_UPD
    408U,	// t2STRBT
    21632U,	// t2STRB_POST
    416U,	// t2STRB_PRE
    160U,	// t2STRBi12
    408U,	// t2STRBi8
    432U,	// t2STRBs
    25493592U,	// t2STRD_POST
    1114200U,	// t2STRD_PRE
    1146880U,	// t2STRDi8
    1179648U,	// t2STREX
    557056U,	// t2STREXB
    371195904U,	// t2STREXD
    557056U,	// t2STREXH
    408U,	// t2STRHT
    21632U,	// t2STRH_POST
    416U,	// t2STRH_PRE
    160U,	// t2STRHi12
    408U,	// t2STRHi8
    432U,	// t2STRHs
    408U,	// t2STRT
    21632U,	// t2STR_POST
    416U,	// t2STR_PRE
    160U,	// t2STRi12
    408U,	// t2STRi8
    432U,	// t2STRs
    0U,	// t2SUBS_PC_LR
    0U,	// t2SUBri
    0U,	// t2SUBri12
    0U,	// t2SUBrr
    1048576U,	// t2SUBrs
    12582912U,	// t2SXTAB
    12582912U,	// t2SXTAB16
    12582912U,	// t2SXTAH
    7168U,	// t2SXTB
    7168U,	// t2SXTB16
    7168U,	// t2SXTH
    0U,	// t2TBB
    0U,	// t2TBH
    1024U,	// t2TEQri
    1024U,	// t2TEQrr
    56U,	// t2TEQrs
    0U,	// t2TSB
    1024U,	// t2TSTri
    1024U,	// t2TSTrr
    56U,	// t2TSTrs
    1024U,	// t2TT
    1024U,	// t2TTA
    1024U,	// t2TTAT
    1024U,	// t2TTT
    0U,	// t2UADD16
    0U,	// t2UADD8
    0U,	// t2UASX
    69206016U,	// t2UBFX
    0U,	// t2UDF
    0U,	// t2UDIV
    0U,	// t2UHADD16
    0U,	// t2UHADD8
    0U,	// t2UHASX
    0U,	// t2UHSAX
    0U,	// t2UHSUB16
    0U,	// t2UHSUB8
    35651584U,	// t2UMAAL
    35651584U,	// t2UMLAL
    35651584U,	// t2UMULL
    0U,	// t2UQADD16
    0U,	// t2UQADD8
    0U,	// t2UQASX
    0U,	// t2UQSAX
    0U,	// t2UQSUB16
    0U,	// t2UQSUB8
    0U,	// t2USAD8
    35651584U,	// t2USADA8
    14680064U,	// t2USAT
    0U,	// t2USAT16
    0U,	// t2USAX
    0U,	// t2USUB16
    0U,	// t2USUB8
    12582912U,	// t2UXTAB
    12582912U,	// t2UXTAB16
    12582912U,	// t2UXTAH
    7168U,	// t2UXTB
    7168U,	// t2UXTB16
    7168U,	// t2UXTH
    0U,	// tADC
    1112U,	// tADDhirr
    1048U,	// tADDi3
    0U,	// tADDi8
    0U,	// tADDrSP
    1212416U,	// tADDrSPi
    1048U,	// tADDrr
    456U,	// tADDspi
    1112U,	// tADDspr
    464U,	// tADR
    0U,	// tAND
    472U,	// tASRri
    0U,	// tASRrr
    0U,	// tB
    0U,	// tBIC
    0U,	// tBKPT
    0U,	// tBL
    0U,	// tBLXNSr
    0U,	// tBLXi
    0U,	// tBLXr
    0U,	// tBX
    0U,	// tBXNS
    0U,	// tBcc
    0U,	// tCBNZ
    0U,	// tCBZ
    1024U,	// tCMNz
    1024U,	// tCMPhir
    1024U,	// tCMPi8
    1024U,	// tCMPr
    0U,	// tCPS
    0U,	// tEOR
    0U,	// tHINT
    0U,	// tHLT
    0U,	// tInt_WIN_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_setjmp
    1136U,	// tLDMIA
    480U,	// tLDRBi
    488U,	// tLDRBr
    496U,	// tLDRHi
    488U,	// tLDRHr
    488U,	// tLDRSB
    488U,	// tLDRSH
    504U,	// tLDRi
    424U,	// tLDRpci
    488U,	// tLDRr
    512U,	// tLDRspi
    1048U,	// tLSLri
    0U,	// tLSLrr
    472U,	// tLSRri
    0U,	// tLSRrr
    0U,	// tMOVSr
    0U,	// tMOVi8
    1024U,	// tMOVr
    1048U,	// tMUL
    0U,	// tMVN
    0U,	// tORR
    0U,	// tPICADD
    0U,	// tPOP
    0U,	// tPUSH
    1024U,	// tREV
    1024U,	// tREV16
    1024U,	// tREVSH
    0U,	// tROR
    0U,	// tRSB
    0U,	// tSBC
    0U,	// tSETEND
    33U,	// tSTMIA_UPD
    480U,	// tSTRBi
    488U,	// tSTRBr
    496U,	// tSTRHi
    488U,	// tSTRHr
    504U,	// tSTRi
    488U,	// tSTRr
    512U,	// tSTRspi
    1048U,	// tSUBi3
    0U,	// tSUBi8
    1048U,	// tSUBrr
    456U,	// tSUBspi
    0U,	// tSVC
    1024U,	// tSXTB
    1024U,	// tSXTH
    0U,	// tTRAP
    1024U,	// tTST
    0U,	// tUDF
    1024U,	// tUXTB
    1024U,	// tUXTH
    0U,	// t__brkdiv0
  };

  unsigned int opcode = MCInst_getOpcode(MI);
  // printf("opcode = %u\n", opcode);

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[opcode] << 0;
  Bits |= (uint64_t)OpInfo1[opcode] << 32;
#ifndef CAPSTONE_DIET
  SStream_concat0(O, AsmStrs+(Bits & 4095)-1);
#endif


  // Fragment 0 encoded into 5 bits for 32 unique commands.
  // printf("Fragment 0: %"PRIu64"\n", ((Bits >> 12) & 31));
  switch ((Bits >> 12) & 31) {
  default: // unreachable
  case 0:
    // DBG_VALUE, DBG_LABEL, BUNDLE, LIFETIME_START, LIFETIME_END, FENTRY_CAL...
    return;
    break;
  case 1:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, ADCri, ADCrr, ADDri, A...
    printSBitModifierOperand(MI, 5, O);
    printPredicateOperand(MI, 3, O);
    break;
  case 2:
    // ITasm, t2IT
    printThumbITMask(MI, 1, O);
    break;
  case 3:
    // LDRBT_POST, LDRConstPool, LDRT_POST, STRBT_POST, STRT_POST, t2LDRBpcre...
    printPredicateOperand(MI, 2, O);
    break;
  case 4:
    // RRXi, MOVi, MOVr, MOVr_TC, MVNi, MVNr, t2MOVi, t2MOVr, t2MVNi, t2MVNr,...
    printSBitModifierOperand(MI, 4, O);
    printPredicateOperand(MI, 2, O);
    break;
  case 5:
    // VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_16, VL...
    printPredicateOperand(MI, 4, O);
    break;
  case 6:
    // VLD1LNdWB_register_Asm_16, VLD1LNdWB_register_Asm_32, VLD1LNdWB_regist...
    printPredicateOperand(MI, 5, O);
    break;
  case 7:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPdWB_fixed_Asm_16...
    printPredicateOperand(MI, 3, O);
    break;
  case 8:
    // ADCrsi, ADDrsi, ANDrsi, BICrsi, EORrsi, MLA, MOVsr, MVNsr, ORRrsi, RSB...
    printSBitModifierOperand(MI, 6, O);
    printPredicateOperand(MI, 4, O);
    break;
  case 9:
    // ADCrsr, ADDrsr, ANDrsr, BICrsr, EORrsr, ORRrsr, RSBrsr, RSCrsr, SBCrsr...
    printSBitModifierOperand(MI, 7, O);
    printPredicateOperand(MI, 5, O);
    SStream_concat0(O, "\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printSORegRegOperand(MI, 2, O);
    return;
    break;
  case 10:
    // AESD, AESE, AESIMC, AESMC, BKPT, BL, BLX, BLXi, BX, CPS1p, CRC32B, CRC...
    printOperand(MI, 0, O);
    break;
  case 11:
    // BLX_pred, BL_pred, BXJ, BX_pred, Bcc, DBG, FLDMXIA, FSTMXIA, HINT, LDM...
    printPredicateOperand(MI, 1, O);
    break;
  case 12:
    // BX_RET, ERET, FMSTAT, MOVPCLR, t2CLREX, t2DCPS1, t2DCPS2, t2DCPS3, t2S...
    printPredicateOperand(MI, 0, O);
    break;
  case 13:
    // CDP, LDRD_POST, LDRD_PRE, MCR, MRC, SMLALBB, SMLALBT, SMLALD, SMLALDX,...
    printPredicateOperand(MI, 6, O);
    break;
  case 14:
    // CDP2, LDC2L_OFFSET, LDC2L_OPTION, LDC2L_POST, LDC2L_PRE, LDC2_OFFSET, ...
    printPImmediate(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 15:
    // CPS2p, CPS3p, t2CPS2p, t2CPS3p, tCPS
    printCPSIMod(MI, 0, O);
    break;
  case 16:
    // DMB, DSB
    printMemBOption(MI, 0, O);
    return;
    break;
  case 17:
    // ISB
    printInstSyncBOption(MI, 0, O);
    return;
    break;
  case 18:
    // MRC2
    printPImmediate(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    return;
    break;
  case 19:
    // MRRC2
    printPImmediate(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    return;
    break;
  case 20:
    // PLDWi12, PLDi12, PLIi12
    printAddrModeImm12Operand(MI, 0, O, false);
    return;
    break;
  case 21:
    // PLDWrs, PLDrs, PLIrs
    printAddrMode2Operand(MI, 0, O);
    return;
    break;
  case 22:
    // SETEND, tSETEND
    printSetendOperand(MI, 0, O);
    return;
    break;
  case 23:
    // SMLAL, UMLAL
    printSBitModifierOperand(MI, 8, O);
    printPredicateOperand(MI, 6, O);
    SStream_concat0(O, "\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 24:
    // TSB
    printTraceSyncBOption(MI, 0, O);
    return;
    break;
  case 25:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD, VLD2LNd16, VLD2LNd32, VLD2...
    printPredicateOperand(MI, 7, O);
    break;
  case 26:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printPredicateOperand(MI, 9, O);
    break;
  case 27:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printPredicateOperand(MI, 11, O);
    break;
  case 28:
    // VLD4DUPd16_UPD, VLD4DUPd32_UPD, VLD4DUPd8_UPD, VLD4DUPq16_UPD, VLD4DUP...
    printPredicateOperand(MI, 8, O);
    break;
  case 29:
    // VLD4LNd16_UPD, VLD4LNd32_UPD, VLD4LNd8_UPD, VLD4LNq16_UPD, VLD4LNq32_U...
    printPredicateOperand(MI, 13, O);
    break;
  case 30:
    // VSDOTD, VSDOTDI, VSDOTQ, VSDOTQI, VUDOTD, VUDOTDI, VUDOTQ, VUDOTQI
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    break;
  case 31:
    // tADC, tADDi3, tADDi8, tADDrr, tAND, tASRri, tASRrr, tBIC, tEOR, tLSLri...
    printSBitModifierOperand(MI, 1, O);
    break;
  }


  // Fragment 1 encoded into 7 bits for 75 unique commands.
  // printf("Fragment 1: %"PRIu64"\n", ((Bits >> 17) & 127));
  switch ((Bits >> 17) & 127) {
  default: // unreachable
  case 0:
    // ASRi, ASRr, ITasm, LDRBT_POST, LDRConstPool, LDRT_POST, LSLi, LSLr, LS...
    SStream_concat0(O, " ");
    break;
  case 1:
    // VLD1LNdAsm_16, VLD1LNdWB_fixed_Asm_16, VLD1LNdWB_register_Asm_16, VLD2...
    SStream_concat0(O, ".16\t");
    ARM_addVectorDataSize(MI, 16);
    break;
  case 2:
    // VLD1LNdAsm_32, VLD1LNdWB_fixed_Asm_32, VLD1LNdWB_register_Asm_32, VLD2...
    SStream_concat0(O, ".32\t");
    ARM_addVectorDataSize(MI, 32);
    break;
  case 3:
    // VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_8, VLD1LNdWB_register_Asm_8, VLD2LNd...
    SStream_concat0(O, ".8\t");
    ARM_addVectorDataSize(MI, 8);
    break;
  case 4:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ADR, ANDri, ANDrr, ANDrsi,...
    SStream_concat0(O, "\t");
    break;
  case 5:
    // AESD, AESE, AESIMC, AESMC, CRC32B, CRC32CB, CRC32CH, CRC32CW, CRC32H, ...
    SStream_concat0(O, ", ");
    break;
  case 6:
    // BKPT, BL, BLX, BLXi, BX, CPS1p, ERET, HLT, HVC, RFEDA, RFEDB, RFEIA, R...
    return;
    break;
  case 7:
    // BX_RET
    SStream_concat0(O, "\tlr");
    ARM_addReg(MI, ARM_REG_LR);
    return;
    break;
  case 8:
    // CDP2, MCR2, MCRR2
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    break;
  case 9:
    // FCONSTD, VABSD, VADDD, VCMPD, VCMPED, VCMPEZD, VCMPZD, VDIVD, VFMAD, V...
    SStream_concat0(O, ".f64\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F64);
    printOperand(MI, 0, O);
    break;
  case 10:
    // FCONSTH, VABDhd, VABDhq, VABSH, VABShd, VABShq, VACGEhd, VACGEhq, VACG...
    SStream_concat0(O, ".f16\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F16);
    printOperand(MI, 0, O);
    break;
  case 11:
    // FCONSTS, VABDfd, VABDfq, VABSS, VABSfd, VABSfq, VACGEfd, VACGEfq, VACG...
    SStream_concat0(O, ".f32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F32);
    printOperand(MI, 0, O);
    break;
  case 12:
    // FMSTAT
    SStream_concat0(O, "\tapsr_nzcv, fpscr");
    ARM_addReg(MI, ARM_REG_APSR_NZCV);
    ARM_addReg(MI, ARM_REG_FPSCR);
    return;
    break;
  case 13:
    // LDC2L_OFFSET, LDC2L_OPTION, LDC2L_POST, LDC2L_PRE, LDC2_OFFSET, LDC2_O...
    printCImmediate(MI, 1, O);
    SStream_concat0(O, ", ");
    break;
  case 14:
    // MOVPCLR
    SStream_concat0(O, "\tpc, lr");
    ARM_addReg(MI, ARM_REG_PC);
    ARM_addReg(MI, ARM_REG_LR);
    return;
    break;
  case 15:
    // RFEDA_UPD, RFEDB_UPD, RFEIA_UPD, RFEIB_UPD
    SStream_concat0(O, "!");
    return;
    break;
  case 16:
    // VABALsv2i64, VABAsv2i32, VABAsv4i32, VABDLsv2i64, VABDsv2i32, VABDsv4i...
    SStream_concat0(O, ".s32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_S32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 17:
    // VABALsv4i32, VABAsv4i16, VABAsv8i16, VABDLsv4i32, VABDsv4i16, VABDsv8i...
    SStream_concat0(O, ".s16\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_S16);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 18:
    // VABALsv8i16, VABAsv16i8, VABAsv8i8, VABDLsv8i16, VABDsv16i8, VABDsv8i8...
    SStream_concat0(O, ".s8\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_S8);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 19:
    // VABALuv2i64, VABAuv2i32, VABAuv4i32, VABDLuv2i64, VABDuv2i32, VABDuv4i...
    SStream_concat0(O, ".u32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_U32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 20:
    // VABALuv4i32, VABAuv4i16, VABAuv8i16, VABDLuv4i32, VABDuv4i16, VABDuv8i...
    SStream_concat0(O, ".u16\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_U16);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 21:
    // VABALuv8i16, VABAuv16i8, VABAuv8i8, VABDLuv8i16, VABDuv16i8, VABDuv8i8...
    SStream_concat0(O, ".u8\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_U8);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 22:
    // VADDHNv2i32, VADDv1i64, VADDv2i64, VMOVNv2i32, VMOVv1i64, VMOVv2i64, V...
    SStream_concat0(O, ".i64\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_I64);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 23:
    // VADDHNv4i16, VADDv2i32, VADDv4i32, VBICiv2i32, VBICiv4i32, VCEQv2i32, ...
    SStream_concat0(O, ".i32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_I32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 24:
    // VADDHNv8i8, VADDv4i16, VADDv8i16, VBICiv4i16, VBICiv8i16, VCEQv4i16, V...
    SStream_concat0(O, ".i16\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_I16);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 25:
    // VADDv16i8, VADDv8i8, VCEQv16i8, VCEQv8i8, VCEQzv16i8, VCEQzv8i8, VCLZv...
    SStream_concat0(O, ".i8\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_I8);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 26:
    // VCVTBDH, VCVTTDH
    SStream_concat0(O, ".f16.f64\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F16F64);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 27:
    // VCVTBHD, VCVTTHD
    SStream_concat0(O, ".f64.f16\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F64F16);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 28:
    // VCVTBHS, VCVTTHS, VCVTh2f
    SStream_concat0(O, ".f32.f16\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F32F16);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 29:
    // VCVTBSH, VCVTTSH, VCVTf2h
    SStream_concat0(O, ".f16.f32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F16F32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 30:
    // VCVTDS
    SStream_concat0(O, ".f64.f32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F64F32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 31:
    // VCVTSD
    SStream_concat0(O, ".f32.f64\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F32F64);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 32:
    // VCVTf2sd, VCVTf2sq, VCVTf2xsd, VCVTf2xsq, VTOSIRS, VTOSIZS, VTOSLS
    SStream_concat0(O, ".s32.f32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_S32F32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 33:
    // VCVTf2ud, VCVTf2uq, VCVTf2xud, VCVTf2xuq, VTOUIRS, VTOUIZS, VTOULS
    SStream_concat0(O, ".u32.f32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_U32F32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 34:
    // VCVTh2sd, VCVTh2sq, VCVTh2xsd, VCVTh2xsq, VTOSHH
    SStream_concat0(O, ".s16.f16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 35:
    // VCVTh2ud, VCVTh2uq, VCVTh2xud, VCVTh2xuq, VTOUHH
    SStream_concat0(O, ".u16.f16\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_U16F16);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 36:
    // VCVTs2fd, VCVTs2fq, VCVTxs2fd, VCVTxs2fq, VSITOS, VSLTOS
    SStream_concat0(O, ".f32.s32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F32S32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 37:
    // VCVTs2hd, VCVTs2hq, VCVTxs2hd, VCVTxs2hq, VSHTOH
    SStream_concat0(O, ".f16.s16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 38:
    // VCVTu2fd, VCVTu2fq, VCVTxu2fd, VCVTxu2fq, VUITOS, VULTOS
    SStream_concat0(O, ".f32.u32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F32U32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 39:
    // VCVTu2hd, VCVTu2hq, VCVTxu2hd, VCVTxu2hq, VUHTOH
    SStream_concat0(O, ".f16.u16\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F16U16);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 40:
    // VEXTq64, VLD1d64, VLD1d64Q, VLD1d64Qwb_fixed, VLD1d64Qwb_register, VLD...
    SStream_concat0(O, ".64\t");
    ARM_addVectorDataSize(MI, 64);
    break;
  case 41:
    // VJCVT, VTOSIRD, VTOSIZD, VTOSLD
    SStream_concat0(O, ".s32.f64\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_S32F64);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 42:
    // VLD1LNd16, VLD1LNd16_UPD, VLD2LNd16, VLD2LNd16_UPD, VLD2LNq16, VLD2LNq...
    SStream_concat0(O, ".16\t{");
    ARM_addVectorDataSize(MI, 16);
    break;
  case 43:
    // VLD1LNd32, VLD1LNd32_UPD, VLD2LNd32, VLD2LNd32_UPD, VLD2LNq32, VLD2LNq...
    SStream_concat0(O, ".32\t{");
    ARM_addVectorDataSize(MI, 32);
    break;
  case 44:
    // VLD1LNd8, VLD1LNd8_UPD, VLD2LNd8, VLD2LNd8_UPD, VLD3DUPd8, VLD3DUPd8_U...
    SStream_concat0(O, ".8\t{");
    ARM_addVectorDataSize(MI, 8);
    break;
  case 45:
    // VMSR
    SStream_concat0(O, "\tfpscr, ");
    ARM_addReg(MI, ARM_REG_FPSCR);
    printOperand(MI, 0, O);
    return;
    break;
  case 46:
    // VMSR_FPEXC
    SStream_concat0(O, "\tfpexc, ");
    ARM_addReg(MI, ARM_REG_FPEXC);
    printOperand(MI, 0, O);
    return;
    break;
  case 47:
    // VMSR_FPINST
    SStream_concat0(O, "\tfpinst, ");
    ARM_addReg(MI, ARM_REG_FPINST);
    printOperand(MI, 0, O);
    return;
    break;
  case 48:
    // VMSR_FPINST2
    SStream_concat0(O, "\tfpinst2, ");
    ARM_addReg(MI, ARM_REG_FPINST2);
    printOperand(MI, 0, O);
    return;
    break;
  case 49:
    // VMSR_FPSID
    SStream_concat0(O, "\tfpsid, ");
    ARM_addReg(MI, ARM_REG_FPSID);
    printOperand(MI, 0, O);
    return;
    break;
  case 50:
    // VMULLp8, VMULpd, VMULpq
    SStream_concat0(O, ".p8\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_P8);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 51:
    // VQADDsv1i64, VQADDsv2i64, VQMOVNsuv2i32, VQMOVNsv2i32, VQRSHLsv1i64, V...
    SStream_concat0(O, ".s64\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_S64);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 52:
    // VQADDuv1i64, VQADDuv2i64, VQMOVNuv2i32, VQRSHLuv1i64, VQRSHLuv2i64, VQ...
    SStream_concat0(O, ".u64\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_U64);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 53:
    // VSDOTDI, VSDOTQI, VUDOTDI, VUDOTQI
    printVectorIndex(MI, 4, O);
    return;
    break;
  case 54:
    // VSHTOD
    SStream_concat0(O, ".f64.s16\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F64S16);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 55:
    // VSHTOS
    SStream_concat0(O, ".f32.s16\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F32S16);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 56:
    // VSITOD, VSLTOD
    SStream_concat0(O, ".f64.s32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F64S32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 57:
    // VSITOH, VSLTOH
    SStream_concat0(O, ".f16.s32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 58:
    // VTOSHD
    SStream_concat0(O, ".s16.f64\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_S16F64);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 59:
    // VTOSHS
    SStream_concat0(O, ".s16.f32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_S16F32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 60:
    // VTOSIRH, VTOSIZH, VTOSLH
    SStream_concat0(O, ".s32.f16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 61:
    // VTOUHD
    SStream_concat0(O, ".u16.f64\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_U16F64);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 62:
    // VTOUHS
    SStream_concat0(O, ".u16.f32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_U16F32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 63:
    // VTOUIRD, VTOUIZD, VTOULD
    SStream_concat0(O, ".u32.f64\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_U32F64);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 64:
    // VTOUIRH, VTOUIZH, VTOULH
    SStream_concat0(O, ".u32.f16\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_U32F16);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 65:
    // VUHTOD
    SStream_concat0(O, ".f64.u16\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F64U16);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 66:
    // VUHTOS
    SStream_concat0(O, ".f32.u16\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F32U16);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 67:
    // VUITOD, VULTOD
    SStream_concat0(O, ".f64.u32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F64U32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 68:
    // VUITOH, VULTOH
    SStream_concat0(O, ".f16.u32\t");
    ARM_addVectorDataType(MI, ARM_VECTORDATA_F16U32);
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 69:
    // t2ADCrr, t2ADCrs, t2ADDri, t2ADDrr, t2ADDrs, t2ADR, t2ANDrr, t2ANDrs, ...
    SStream_concat0(O, ".w\t");
    break;
  case 70:
    // t2SRSDB, t2SRSIA
    SStream_concat0(O, "\tsp, ");
    ARM_addReg(MI, ARM_REG_SP);
    printOperand(MI, 0, O);
    return;
    break;
  case 71:
    // t2SRSDB_UPD, t2SRSIA_UPD
    SStream_concat0(O, "\tsp!, ");
    ARM_addReg(MI, ARM_REG_SP);
    printOperand(MI, 0, O);
    return;
    break;
  case 72:
    // t2SUBS_PC_LR
    SStream_concat0(O, "\tpc, lr, ");
    printOperand(MI, 0, O);
    return;
    break;
  case 73:
    // tADC, tADDi3, tADDi8, tADDrr, tAND, tASRri, tASRrr, tBIC, tEOR, tLSLri...
    printPredicateOperand(MI, 4, O);
    SStream_concat0(O, "\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 74:
    // tMOVi8, tMVN, tRSB
    printPredicateOperand(MI, 3, O);
    SStream_concat0(O, "\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    break;
  }


  // Fragment 2 encoded into 6 bits for 60 unique commands.
  // printf("Fragment 2: %"PRIu64"\n", ((Bits >> 24) & 63));
  switch ((Bits >> 24) & 63) {
  default: // unreachable
  case 0:
    // ASRi, ASRr, LDRBT_POST, LDRConstPool, LDRT_POST, LSLi, LSLr, LSRi, LSR...
    printOperand(MI, 0, O);
    break;
  case 1:
    // ITasm, t2IT
    printMandatoryPredicateOperand(MI, 0, O);
    return;
    break;
  case 2:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPdWB_fixed_Asm_16...
    printVectorListThreeAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    break;
  case 3:
    // VLD3DUPqAsm_16, VLD3DUPqAsm_32, VLD3DUPqAsm_8, VLD3DUPqWB_fixed_Asm_16...
    printVectorListThreeSpacedAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    break;
  case 4:
    // VLD3dAsm_16, VLD3dAsm_32, VLD3dAsm_8, VLD3dWB_fixed_Asm_16, VLD3dWB_fi...
    printVectorListThree(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 5:
    // VLD3qAsm_16, VLD3qAsm_32, VLD3qAsm_8, VLD3qWB_fixed_Asm_16, VLD3qWB_fi...
    printVectorListThreeSpaced(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    break;
  case 6:
    // VLD4DUPdAsm_16, VLD4DUPdAsm_32, VLD4DUPdAsm_8, VLD4DUPdWB_fixed_Asm_16...
    printVectorListFourAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    break;
  case 7:
    // VLD4DUPqAsm_16, VLD4DUPqAsm_32, VLD4DUPqAsm_8, VLD4DUPqWB_fixed_Asm_16...
    printVectorListFourSpacedAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    break;
  case 8:
    // VLD4dAsm_16, VLD4dAsm_32, VLD4dAsm_8, VLD4dWB_fixed_Asm_16, VLD4dWB_fi...
    printVectorListFour(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 9:
    // VLD4qAsm_16, VLD4qAsm_32, VLD4qAsm_8, VLD4qWB_fixed_Asm_16, VLD4qWB_fi...
    printVectorListFourSpaced(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    break;
  case 10:
    // AESD, AESE, MCR2, MCRR2, SHA1C, SHA1M, SHA1P, SHA1SU0, SHA1SU1, SHA256...
    printOperand(MI, 2, O);
    break;
  case 11:
    // AESIMC, AESMC, CRC32B, CRC32CB, CRC32CH, CRC32CW, CRC32H, CRC32W, FLDM...
    printOperand(MI, 1, O);
    break;
  case 12:
    // CDP, LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, LDC_OFFSET, LDC_OP...
    printPImmediate(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 13:
    // CDP2
    printCImmediate(MI, 2, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    return;
    break;
  case 14:
    // CPS2p, CPS3p, t2CPS2p, t2CPS3p, tCPS
    printCPSIFlag(MI, 1, O);
    break;
  case 15:
    // FCONSTD, FCONSTH, FCONSTS, VABDfd, VABDfq, VABDhd, VABDhq, VABSD, VABS...
    SStream_concat0(O, ", ");
    break;
  case 16:
    // LDAEXD, LDREXD
    printGPRPairOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode7Operand(MI, 1, O);
    return;
    break;
  case 17:
    // LDC2L_OFFSET, LDC2_OFFSET, STC2L_OFFSET, STC2_OFFSET
    printAddrMode5Operand(MI, 2, O, false);
    return;
    break;
  case 18:
    // LDC2L_OPTION, LDC2L_POST, LDC2_OPTION, LDC2_POST, STC2L_OPTION, STC2L_...
    printAddrMode7Operand(MI, 2, O);
    SStream_concat0(O, ", ");
    break;
  case 19:
    // LDC2L_PRE, LDC2_PRE, STC2L_PRE, STC2_PRE
    printAddrMode5Operand(MI, 2, O, true);
    SStream_concat0(O, "!");
    return;
    break;
  case 20:
    // MRC, t2MRC, t2MRC2
    printPImmediate(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    return;
    break;
  case 21:
    // MRRC, t2MRRC, t2MRRC2
    printPImmediate(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    return;
    break;
  case 22:
    // MSR, MSRi, t2MSR_AR, t2MSR_M
    printMSRMaskOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 23:
    // MSRbanked, t2MSRbanked
    printBankedRegOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 24:
    // VBICiv2i32, VBICiv4i16, VBICiv4i32, VBICiv8i16, VMOVv16i8, VMOVv1i64, ...
    printNEONModImmOperand(MI, 1, O);
    return;
    break;
  case 25:
    // VCMPEZD, VCMPEZH, VCMPEZS, VCMPZD, VCMPZH, VCMPZS, tRSB
    SStream_concat0(O, ", #0");
    op_addImm(MI, 0);
    return;
    break;
  case 26:
    // VCVTf2sd, VCVTf2sq, VCVTf2ud, VCVTf2uq, VCVTh2sd, VCVTh2sq, VCVTh2ud, ...
    return;
    break;
  case 27:
    // VLD1DUPd16, VLD1DUPd16wb_fixed, VLD1DUPd16wb_register, VLD1DUPd32, VLD...
    printVectorListOneAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 28:
    // VLD1DUPq16, VLD1DUPq16wb_fixed, VLD1DUPq16wb_register, VLD1DUPq32, VLD...
    printVectorListTwoAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 29:
    // VLD1d16, VLD1d16wb_fixed, VLD1d16wb_register, VLD1d32, VLD1d32wb_fixed...
    printVectorListOne(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 30:
    // VLD1q16, VLD1q16wb_fixed, VLD1q16wb_register, VLD1q32, VLD1q32wb_fixed...
    printVectorListTwo(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 31:
    // VLD2DUPd16x2, VLD2DUPd16x2wb_fixed, VLD2DUPd16x2wb_register, VLD2DUPd3...
    printVectorListTwoSpacedAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 32:
    // VLD2b16, VLD2b16wb_fixed, VLD2b16wb_register, VLD2b32, VLD2b32wb_fixed...
    printVectorListTwoSpaced(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 33:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD, VST2LNd16_UPD, VST2LNd32_U...
    printOperand(MI, 4, O);
    break;
  case 34:
    // VST1d16, VST1d32, VST1d64, VST1d8
    printVectorListOne(MI, 2, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 35:
    // VST1d16Q, VST1d32Q, VST1d64Q, VST1d8Q, VST2q16, VST2q32, VST2q8
    printVectorListFour(MI, 2, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 36:
    // VST1d16Qwb_fixed, VST1d32Qwb_fixed, VST1d64Qwb_fixed, VST1d8Qwb_fixed,...
    printVectorListFour(MI, 3, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, "!");
    return;
    break;
  case 37:
    // VST1d16Qwb_register, VST1d32Qwb_register, VST1d64Qwb_register, VST1d8Q...
    printVectorListFour(MI, 4, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 38:
    // VST1d16T, VST1d32T, VST1d64T, VST1d8T
    printVectorListThree(MI, 2, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 39:
    // VST1d16Twb_fixed, VST1d32Twb_fixed, VST1d64Twb_fixed, VST1d8Twb_fixed
    printVectorListThree(MI, 3, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, "!");
    return;
    break;
  case 40:
    // VST1d16Twb_register, VST1d32Twb_register, VST1d64Twb_register, VST1d8T...
    printVectorListThree(MI, 4, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 41:
    // VST1d16wb_fixed, VST1d32wb_fixed, VST1d64wb_fixed, VST1d8wb_fixed
    printVectorListOne(MI, 3, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, "!");
    return;
    break;
  case 42:
    // VST1d16wb_register, VST1d32wb_register, VST1d64wb_register, VST1d8wb_r...
    printVectorListOne(MI, 4, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 43:
    // VST1q16, VST1q32, VST1q64, VST1q8, VST2d16, VST2d32, VST2d8
    printVectorListTwo(MI, 2, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 44:
    // VST1q16wb_fixed, VST1q32wb_fixed, VST1q64wb_fixed, VST1q8wb_fixed, VST...
    printVectorListTwo(MI, 3, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, "!");
    return;
    break;
  case 45:
    // VST1q16wb_register, VST1q32wb_register, VST1q64wb_register, VST1q8wb_r...
    printVectorListTwo(MI, 4, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 46:
    // VST2b16, VST2b32, VST2b8
    printVectorListTwoSpaced(MI, 2, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 47:
    // VST2b16wb_fixed, VST2b32wb_fixed, VST2b8wb_fixed
    printVectorListTwoSpaced(MI, 3, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, "!");
    return;
    break;
  case 48:
    // VST2b16wb_register, VST2b32wb_register, VST2b8wb_register
    printVectorListTwoSpaced(MI, 4, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 49:
    // t2DMB, t2DSB
    printMemBOption(MI, 0, O);
    return;
    break;
  case 50:
    // t2ISB
    printInstSyncBOption(MI, 0, O);
    return;
    break;
  case 51:
    // t2PLDWi12, t2PLDi12, t2PLIi12
    printAddrModeImm12Operand(MI, 0, O, false);
    return;
    break;
  case 52:
    // t2PLDWi8, t2PLDi8, t2PLIi8
    printT2AddrModeImm8Operand(MI, 0, O, false);
    return;
    break;
  case 53:
    // t2PLDWs, t2PLDs, t2PLIs
    printT2AddrModeSoRegOperand(MI, 0, O);
    return;
    break;
  case 54:
    // t2PLDpci, t2PLIpci
    printThumbLdrLabelOperand(MI, 0, O);
    return;
    break;
  case 55:
    // t2TBB
    printAddrModeTBB(MI, 0, O);
    return;
    break;
  case 56:
    // t2TBH
    printAddrModeTBH(MI, 0, O);
    return;
    break;
  case 57:
    // t2TSB
    printTraceSyncBOption(MI, 0, O);
    return;
    break;
  case 58:
    // tADC, tADDi8, tAND, tASRrr, tBIC, tEOR, tLSLrr, tLSRrr, tORR, tROR, tS...
    printOperand(MI, 3, O);
    return;
    break;
  case 59:
    // tPOP, tPUSH
    printRegisterList(MI, 2, O);
    return;
    break;
  }


  // Fragment 3 encoded into 5 bits for 30 unique commands.
  // printf("Fragment 3: %"PRIu64"\n", ((Bits >> 30) & 31));
  switch ((Bits >> 30) & 31) {
  default: // unreachable
  case 0:
    // ASRi, ASRr, LDRBT_POST, LDRConstPool, LDRT_POST, LSLi, LSLr, LSRi, LSR...
    SStream_concat0(O, ", ");
    break;
  case 1:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPqAsm_16, VLD3DUP...
    return;
    break;
  case 2:
    // VLD3DUPdWB_fixed_Asm_16, VLD3DUPdWB_fixed_Asm_32, VLD3DUPdWB_fixed_Asm...
    SStream_concat0(O, "!");
    return;
    break;
  case 3:
    // VLD3dAsm_16, VLD3dAsm_32, VLD3dAsm_8, VLD3dWB_fixed_Asm_16, VLD3dWB_fi...
    printAddrMode6Operand(MI, 1, O);
    break;
  case 4:
    // CDP, MCR, MCRR, MSR, VABDfd, VABDfq, VABDhd, VABDhq, VABSD, VABSH, VAB...
    printOperand(MI, 1, O);
    break;
  case 5:
    // FCONSTD, FCONSTH, FCONSTS, VMOVv2f32, VMOVv4f32
    printFPImmOperand(MI, 1, O);
    return;
    break;
  case 6:
    // FLDMXDB_UPD, FLDMXIA_UPD, FSTMXDB_UPD, FSTMXIA_UPD, LDMDA_UPD, LDMDB_U...
    SStream_concat0(O, "!, ");
    printRegisterList(MI, 4, O);
    break;
  case 7:
    // LDC2L_OPTION, LDC2_OPTION, STC2L_OPTION, STC2_OPTION
    printCoprocOptionImm(MI, 3, O);
    return;
    break;
  case 8:
    // LDC2L_POST, LDC2_POST, STC2L_POST, STC2_POST
    printPostIdxImm8s4Operand(MI, 3, O);
    return;
    break;
  case 9:
    // LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, LDC_OFFSET, LDC_OPTION,...
    printCImmediate(MI, 1, O);
    SStream_concat0(O, ", ");
    break;
  case 10:
    // MRS, t2MRS_AR
    SStream_concat0(O, ", apsr");
    ARM_addReg(MI, ARM_REG_APSR);
    return;
    break;
  case 11:
    // MRSsys, t2MRSsys_AR
    SStream_concat0(O, ", spsr");
    ARM_addReg(MI, ARM_REG_SPSR);
    return;
    break;
  case 12:
    // MSRi
    printModImmOperand(MI, 1, O);
    return;
    break;
  case 13:
    // VCEQzv16i8, VCEQzv2i32, VCEQzv4i16, VCEQzv4i32, VCEQzv8i16, VCEQzv8i8,...
    SStream_concat0(O, ", #0");
    op_addImm(MI, 0);
    return;
    break;
  case 14:
    // VCVTf2xsd, VCVTf2xsq, VCVTf2xud, VCVTf2xuq, VCVTh2xsd, VCVTh2xsq, VCVT...
    printOperand(MI, 2, O);
    break;
  case 15:
    // VGETLNs16, VGETLNs8, VGETLNu16, VGETLNu8
    printVectorIndex(MI, 2, O);
    return;
    break;
  case 16:
    // VLD1DUPd16wb_fixed, VLD1DUPd16wb_register, VLD1DUPd32wb_fixed, VLD1DUP...
    printAddrMode6Operand(MI, 2, O);
    break;
  case 17:
    // VLD1LNd16, VLD1LNd16_UPD, VLD1LNd32, VLD1LNd32_UPD, VLD1LNd8, VLD1LNd8...
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    break;
  case 18:
    // VLD3DUPd16, VLD3DUPd16_UPD, VLD3DUPd32, VLD3DUPd32_UPD, VLD3DUPd8, VLD...
    SStream_concat0(O, "[], ");
    printOperand(MI, 1, O);
    SStream_concat0(O, "[], ");
    printOperand(MI, 2, O);
    break;
  case 19:
    // VMRS
    SStream_concat0(O, ", fpscr");
    ARM_addReg(MI, ARM_REG_FPSCR);
    return;
    break;
  case 20:
    // VMRS_FPEXC
    SStream_concat0(O, ", fpexc");
    ARM_addReg(MI, ARM_REG_FPEXC);
    return;
    break;
  case 21:
    // VMRS_FPINST
    SStream_concat0(O, ", fpinst");
    ARM_addReg(MI, ARM_REG_FPINST);
    return;
    break;
  case 22:
    // VMRS_FPINST2
    SStream_concat0(O, ", fpinst2");
    ARM_addReg(MI, ARM_REG_FPINST2);
    return;
    break;
  case 23:
    // VMRS_FPSID
    SStream_concat0(O, ", fpsid");
    ARM_addReg(MI, ARM_REG_FPSID);
    return;
    break;
  case 24:
    // VMRS_MVFR0
    SStream_concat0(O, ", mvfr0");
    ARM_addReg(MI, ARM_REG_MVFR0);
    return;
    break;
  case 25:
    // VMRS_MVFR1
    SStream_concat0(O, ", mvfr1");
    ARM_addReg(MI, ARM_REG_MVFR1);
    return;
    break;
  case 26:
    // VMRS_MVFR2
    SStream_concat0(O, ", mvfr2");
    ARM_addReg(MI, ARM_REG_MVFR2);
    return;
    break;
  case 27:
    // VSETLNi16, VSETLNi32, VSETLNi8
    printVectorIndex(MI, 3, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 28:
    // VSHTOH, VTOSHH, VTOUHH, VUHTOH
    printFBits16(MI, 2, O);
    return;
    break;
  case 29:
    // VSLTOD, VSLTOH, VSLTOS, VTOSLD, VTOSLH, VTOSLS, VTOULD, VTOULH, VTOULS...
    printFBits32(MI, 2, O);
    return;
    break;
  }


  // Fragment 4 encoded into 7 bits for 65 unique commands.
  // printf("Fragment 4: %"PRIu64"\n", ((Bits >> 35) & 127));
  switch ((Bits >> 35) & 127) {
  default: // unreachable
  case 0:
    // ASRi, ASRr, LDRConstPool, LSLi, LSLr, LSRi, LSRr, RORi, RORr, RRXi, t2...
    printOperand(MI, 1, O);
    break;
  case 1:
    // LDRBT_POST, LDRT_POST, STRBT_POST, STRT_POST, LDA, LDAB, LDAEX, LDAEXB...
    printAddrMode7Operand(MI, 1, O);
    return;
    break;
  case 2:
    // VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_16, VL...
    printAddrMode6Operand(MI, 2, O);
    break;
  case 3:
    // VLD3DUPdWB_register_Asm_16, VLD3DUPdWB_register_Asm_32, VLD3DUPdWB_reg...
    printOperand(MI, 3, O);
    break;
  case 4:
    // VLD3dAsm_16, VLD3dAsm_32, VLD3dAsm_8, VLD4dAsm_16, VLD4dAsm_32, VLD4dA...
    return;
    break;
  case 5:
    // VLD3dWB_fixed_Asm_16, VLD3dWB_fixed_Asm_32, VLD3dWB_fixed_Asm_8, VLD4d...
    SStream_concat0(O, "!");
    return;
    break;
  case 6:
    // VLD3dWB_register_Asm_16, VLD3dWB_register_Asm_32, VLD3dWB_register_Asm...
    SStream_concat0(O, ", ");
    break;
  case 7:
    // t2MOVSsi, t2MOVsi, t2CMNzrs, t2CMPrs, t2MVNs, t2TEQrs, t2TSTrs
    printT2SOOperand(MI, 1, O);
    return;
    break;
  case 8:
    // t2MOVSsr, t2MOVsr, CMNzrsr, CMPrsr, MOVsr, MVNsr, TEQrsr, TSTrsr
    printSORegRegOperand(MI, 1, O);
    return;
    break;
  case 9:
    // ADR, t2ADR
    printAdrLabelOperand(MI, 1, O, 0);
    return;
    break;
  case 10:
    // BFC, t2BFC
    printBitfieldInvMaskImmOperand(MI, 2, O);
    return;
    break;
  case 11:
    // BFI, CPS3p, CRC32B, CRC32CB, CRC32CH, CRC32CW, CRC32H, CRC32W, MOVTi16...
    printOperand(MI, 2, O);
    break;
  case 12:
    // CMNri, CMPri, MOVi, MVNi, TEQri, TSTri
    printModImmOperand(MI, 1, O);
    return;
    break;
  case 13:
    // CMNzrsi, CMPrsi, MOVsi, MVNsi, TEQrsi, TSTrsi
    printSORegImmOperand(MI, 1, O);
    return;
    break;
  case 14:
    // FLDMXIA, FSTMXIA, LDMDA, LDMDB, LDMIA, LDMIB, STMDA, STMDB, STMIA, STM...
    printRegisterList(MI, 3, O);
    break;
  case 15:
    // LDCL_OFFSET, LDC_OFFSET, STCL_OFFSET, STC_OFFSET, t2LDC2L_OFFSET, t2LD...
    printAddrMode5Operand(MI, 2, O, false);
    return;
    break;
  case 16:
    // LDCL_OPTION, LDCL_POST, LDC_OPTION, LDC_POST, LDRBT_POST_IMM, LDRBT_PO...
    printAddrMode7Operand(MI, 2, O);
    break;
  case 17:
    // LDCL_PRE, LDC_PRE, STCL_PRE, STC_PRE, t2LDC2L_PRE, t2LDC2_PRE, t2LDCL_...
    printAddrMode5Operand(MI, 2, O, true);
    SStream_concat0(O, "!");
    return;
    break;
  case 18:
    // LDRB_PRE_IMM, LDR_PRE_IMM, STRB_PRE_IMM, STR_PRE_IMM
    printAddrModeImm12Operand(MI, 2, O, true);
    SStream_concat0(O, "!");
    return;
    break;
  case 19:
    // LDRB_PRE_REG, LDR_PRE_REG, STRB_PRE_REG, STR_PRE_REG
    printAddrMode2Operand(MI, 2, O);
    SStream_concat0(O, "!");
    return;
    break;
  case 20:
    // LDRBi12, LDRcp, LDRi12, STRBi12, STRi12, t2LDRBi12, t2LDRHi12, t2LDRSB...
    printAddrModeImm12Operand(MI, 1, O, false);
    return;
    break;
  case 21:
    // LDRBrs, LDRrs, STRBrs, STRrs
    printAddrMode2Operand(MI, 1, O);
    return;
    break;
  case 22:
    // LDRH, LDRSB, LDRSH, STRH
    printAddrMode3Operand(MI, 1, O, false);
    return;
    break;
  case 23:
    // LDRH_PRE, LDRSB_PRE, LDRSH_PRE, STRH_PRE
    printAddrMode3Operand(MI, 2, O, true);
    SStream_concat0(O, "!");
    return;
    break;
  case 24:
    // MCR2
    printCImmediate(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    return;
    break;
  case 25:
    // MRSbanked, t2MRSbanked
    printBankedRegOperand(MI, 1, O);
    return;
    break;
  case 26:
    // SSAT, SSAT16, t2SSAT, t2SSAT16
    printImmPlusOneOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    break;
  case 27:
    // STLEXD, STREXD
    printGPRPairOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printAddrMode7Operand(MI, 2, O);
    return;
    break;
  case 28:
    // VCEQzv2f32, VCEQzv4f16, VCEQzv4f32, VCEQzv8f16, VCGEzv2f32, VCGEzv4f16...
    SStream_concat0(O, ", #0");
    op_addImm(MI, 0);
    return;
    break;
  case 29:
    // VLD1LNd16, VLD1LNd32, VLD1LNd8, VST2LNd16, VST2LNd32, VST2LNd8, VST2LN...
    printNoHashImmediate(MI, 4, O);
    break;
  case 30:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD, VLD2LNd16, VLD2LNd32, VLD2...
    printNoHashImmediate(MI, 6, O);
    break;
  case 31:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printNoHashImmediate(MI, 8, O);
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    break;
  case 32:
    // VLD3DUPd16, VLD3DUPd16_UPD, VLD3DUPd32, VLD3DUPd32_UPD, VLD3DUPd8, VLD...
    SStream_concat0(O, "[]}, ");
    break;
  case 33:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printNoHashImmediate(MI, 10, O);
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    printOperand(MI, 1, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 10, O);
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    printOperand(MI, 2, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 10, O);
    break;
  case 34:
    // VLD4DUPd16, VLD4DUPd16_UPD, VLD4DUPd32, VLD4DUPd32_UPD, VLD4DUPd8, VLD...
    SStream_concat0(O, "[], ");
    printOperand(MI, 3, O);
    SStream_concat0(O, "[]}, ");
    break;
  case 35:
    // VLD4LNd16_UPD, VLD4LNd32_UPD, VLD4LNd8_UPD, VLD4LNq16_UPD, VLD4LNq32_U...
    printNoHashImmediate(MI, 12, O);
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    printOperand(MI, 1, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 12, O);
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    printOperand(MI, 2, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 12, O);
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    printOperand(MI, 3, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 12, O);
    SStream_concat0(O, "]}, ");
    set_mem_access(MI, false);
    printAddrMode6Operand(MI, 5, O);
    printAddrMode6OffsetOperand(MI, 7, O);
    return;
    break;
  case 36:
    // VLDRD, VLDRS, VSTRD, VSTRS
    printAddrMode5Operand(MI, 1, O, false);
    return;
    break;
  case 37:
    // VLDRH, VSTRH
    printAddrMode5FP16Operand(MI, 1, O, false);
    return;
    break;
  case 38:
    // VST1LNd16, VST1LNd32, VST1LNd8
    printNoHashImmediate(MI, 3, O);
    SStream_concat0(O, "]}, ");
    set_mem_access(MI, false);
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 39:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD, VST3LNd16, VST3LNd32, VST3...
    printNoHashImmediate(MI, 5, O);
    break;
  case 40:
    // VST3LNd16_UPD, VST3LNd32_UPD, VST3LNd8_UPD, VST3LNq16_UPD, VST3LNq32_U...
    printNoHashImmediate(MI, 7, O);
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    printOperand(MI, 5, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 7, O);
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    printOperand(MI, 6, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 7, O);
    SStream_concat0(O, "]}, ");
    set_mem_access(MI, false);
    printAddrMode6Operand(MI, 1, O);
    printAddrMode6OffsetOperand(MI, 3, O);
    return;
    break;
  case 41:
    // VST3d16_UPD, VST3d32_UPD, VST3d8_UPD, VST3q16_UPD, VST3q32_UPD, VST3q8...
    printOperand(MI, 5, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 6, O);
    break;
  case 42:
    // VTBL1
    printVectorListOne(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 43:
    // VTBL2
    printVectorListTwo(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 44:
    // VTBL3
    printVectorListThree(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 45:
    // VTBL4
    printVectorListFour(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 46:
    // VTBX1
    printVectorListOne(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 47:
    // VTBX2
    printVectorListTwo(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 48:
    // VTBX3
    printVectorListThree(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 49:
    // VTBX4
    printVectorListFour(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 50:
    // sysLDMDA_UPD, sysLDMDB_UPD, sysLDMIA_UPD, sysLDMIB_UPD, sysSTMDA_UPD, ...
    SStream_concat0(O, " ^");
    ARM_addUserMode(MI);
    return;
    break;
  case 51:
    // t2LDRBT, t2LDRBi8, t2LDRHT, t2LDRHi8, t2LDRSBT, t2LDRSBi8, t2LDRSHT, t...
    printT2AddrModeImm8Operand(MI, 1, O, false);
    return;
    break;
  case 52:
    // t2LDRB_PRE, t2LDRH_PRE, t2LDRSB_PRE, t2LDRSH_PRE, t2LDR_PRE, t2STRB_PR...
    printT2AddrModeImm8Operand(MI, 2, O, true);
    SStream_concat0(O, "!");
    return;
    break;
  case 53:
    // t2LDRBpci, t2LDRHpci, t2LDRSBpci, t2LDRSHpci, t2LDRpci, tLDRpci
    printThumbLdrLabelOperand(MI, 1, O);
    return;
    break;
  case 54:
    // t2LDRBs, t2LDRHs, t2LDRSBs, t2LDRSHs, t2LDRs, t2STRBs, t2STRHs, t2STRs
    printT2AddrModeSoRegOperand(MI, 1, O);
    return;
    break;
  case 55:
    // t2LDREX
    printT2AddrModeImm0_1020s4Operand(MI, 1, O);
    return;
    break;
  case 56:
    // t2MRS_M
    printMSRMaskOperand(MI, 1, O);
    return;
    break;
  case 57:
    // tADDspi, tSUBspi
    printThumbS4ImmOperand(MI, 2, O);
    return;
    break;
  case 58:
    // tADR
    printAdrLabelOperand(MI, 1, O, 2);
    return;
    break;
  case 59:
    // tASRri, tLSRri
    printThumbSRImm(MI, 3, O);
    return;
    break;
  case 60:
    // tLDRBi, tSTRBi
    printThumbAddrModeImm5S1Operand(MI, 1, O);
    return;
    break;
  case 61:
    // tLDRBr, tLDRHr, tLDRSB, tLDRSH, tLDRr, tSTRBr, tSTRHr, tSTRr
    printThumbAddrModeRROperand(MI, 1, O);
    return;
    break;
  case 62:
    // tLDRHi, tSTRHi
    printThumbAddrModeImm5S2Operand(MI, 1, O);
    return;
    break;
  case 63:
    // tLDRi, tSTRi
    printThumbAddrModeImm5S4Operand(MI, 1, O);
    return;
    break;
  case 64:
    // tLDRspi, tSTRspi
    printThumbAddrModeSPOperand(MI, 1, O);
    return;
    break;
  }


  // Fragment 5 encoded into 5 bits for 23 unique commands.
  // printf("Fragment 5: %"PRIu64"\n", ((Bits >> 42) & 31));
  switch ((Bits >> 42) & 31) {
  default: // unreachable
  case 0:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, VLD1LNdWB_register_Asm...
    SStream_concat0(O, ", ");
    break;
  case 1:
    // LDRConstPool, RRXi, VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD2LN...
    return;
    break;
  case 2:
    // VLD1LNdWB_fixed_Asm_16, VLD1LNdWB_fixed_Asm_32, VLD1LNdWB_fixed_Asm_8,...
    SStream_concat0(O, "!");
    return;
    break;
  case 3:
    // VLD3dWB_register_Asm_16, VLD3dWB_register_Asm_32, VLD3dWB_register_Asm...
    printOperand(MI, 3, O);
    break;
  case 4:
    // CDP, t2CDP, t2CDP2
    printCImmediate(MI, 2, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    return;
    break;
  case 5:
    // MCR, MCRR, VABDfd, VABDfq, VABDhd, VABDhq, VACGEfd, VACGEfq, VACGEhd, ...
    printOperand(MI, 2, O);
    break;
  case 6:
    // SSAT, t2SSAT
    printShiftImmOperand(MI, 3, O);
    return;
    break;
  case 7:
    // SXTB, SXTB16, SXTH, UXTB, UXTB16, UXTH, t2SXTB, t2SXTB16, t2SXTH, t2UX...
    printRotImmOperand(MI, 2, O);
    return;
    break;
  case 8:
    // VCMLAv2f32_indexed, VCMLAv4f16_indexed, VCMLAv4f32_indexed, VCMLAv8f16...
    printVectorIndex(MI, 4, O);
    break;
  case 9:
    // VDUPLN16d, VDUPLN16q, VDUPLN32d, VDUPLN32q, VDUPLN8d, VDUPLN8q, VGETLN...
    printVectorIndex(MI, 2, O);
    return;
    break;
  case 10:
    // VLD1DUPd16wb_register, VLD1DUPd32wb_register, VLD1DUPd8wb_register, VL...
    printOperand(MI, 4, O);
    return;
    break;
  case 11:
    // VLD1LNd16, VLD1LNd16_UPD, VLD1LNd32, VLD1LNd32_UPD, VLD1LNd8, VLD1LNd8...
    SStream_concat0(O, "]}, ");
    set_mem_access(MI, false);
    break;
  case 12:
    // VLD2LNd16, VLD2LNd32, VLD2LNd8, VLD2LNq16, VLD2LNq32, VLD4LNd16, VLD4L...
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    break;
  case 13:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printOperand(MI, 1, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 8, O);
    break;
  case 14:
    // VLD3DUPd16, VLD3DUPd32, VLD3DUPd8, VLD3DUPq16, VLD3DUPq32, VLD3DUPq8
    printAddrMode6Operand(MI, 3, O);
    return;
    break;
  case 15:
    // VLD3DUPd16_UPD, VLD3DUPd32_UPD, VLD3DUPd8_UPD, VLD3DUPq16_UPD, VLD3DUP...
    printAddrMode6Operand(MI, 4, O);
    break;
  case 16:
    // VLD4DUPd16_UPD, VLD4DUPd32_UPD, VLD4DUPd8_UPD, VLD4DUPq16_UPD, VLD4DUP...
    printAddrMode6Operand(MI, 5, O);
    printAddrMode6OffsetOperand(MI, 7, O);
    return;
    break;
  case 17:
    // VMULLslsv2i32, VMULLslsv4i16, VMULLsluv2i32, VMULLsluv4i16, VMULslv2i3...
    printVectorIndex(MI, 3, O);
    return;
    break;
  case 18:
    // VST3d16_UPD, VST3d32_UPD, VST3d8_UPD, VST3q16_UPD, VST3q32_UPD, VST3q8...
    SStream_concat0(O, "}, ");
    printAddrMode6Operand(MI, 1, O);
    printAddrMode6OffsetOperand(MI, 3, O);
    return;
    break;
  case 19:
    // VST4LNd16_UPD, VST4LNd32_UPD, VST4LNd8_UPD, VST4LNq16_UPD, VST4LNq32_U...
    printOperand(MI, 5, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 8, O);
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    printOperand(MI, 6, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 8, O);
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    printOperand(MI, 7, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 8, O);
    SStream_concat0(O, "]}, ");
    set_mem_access(MI, false);
    printAddrMode6Operand(MI, 1, O);
    printAddrMode6OffsetOperand(MI, 3, O);
    return;
    break;
  case 20:
    // sysLDMDA, sysLDMDB, sysLDMIA, sysLDMIB, sysSTMDA, sysSTMDB, sysSTMIA, ...
    SStream_concat0(O, " ^");
    ARM_addUserMode(MI);
    return;
    break;
  case 21:
    // t2LDRB_POST, t2LDRH_POST, t2LDRSB_POST, t2LDRSH_POST, t2LDR_POST, t2ST...
    printT2AddrModeImm8OffsetOperand(MI, 3, O);
    return;
    break;
  case 22:
    // t2MOVsra_flag, t2MOVsrl_flag
    SStream_concat0(O, ", #1");
    op_addImm(MI, 1);
    return;
    break;
  }


  // Fragment 6 encoded into 6 bits for 38 unique commands.
  // printf("Fragment 6: %"PRIu64"\n", ((Bits >> 47) & 63));
  switch ((Bits >> 47) & 63) {
  default: // unreachable
  case 0:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, ADCrr, ADDrr, ANDrr, B...
    printOperand(MI, 2, O);
    break;
  case 1:
    // VLD1LNdWB_register_Asm_16, VLD1LNdWB_register_Asm_32, VLD1LNdWB_regist...
    printOperand(MI, 4, O);
    break;
  case 2:
    // VLD3dWB_register_Asm_16, VLD3dWB_register_Asm_32, VLD3dWB_register_Asm...
    return;
    break;
  case 3:
    // ADCri, ADDri, ANDri, BICri, EORri, ORRri, RSBri, RSCri, SBCri, SUBri
    printModImmOperand(MI, 2, O);
    return;
    break;
  case 4:
    // ADCrsi, ADDrsi, ANDrsi, BICrsi, EORrsi, ORRrsi, RSBrsi, RSCrsi, SBCrsi...
    printSORegImmOperand(MI, 2, O);
    return;
    break;
  case 5:
    // BFI, t2BFI
    printBitfieldInvMaskImmOperand(MI, 3, O);
    return;
    break;
  case 6:
    // LDCL_OPTION, LDC_OPTION, STCL_OPTION, STC_OPTION, t2LDC2L_OPTION, t2LD...
    printCoprocOptionImm(MI, 3, O);
    return;
    break;
  case 7:
    // LDCL_POST, LDC_POST, STCL_POST, STC_POST, t2LDC2L_POST, t2LDC2_POST, t...
    printPostIdxImm8s4Operand(MI, 3, O);
    return;
    break;
  case 8:
    // LDRBT_POST_IMM, LDRBT_POST_REG, LDRB_POST_IMM, LDRB_POST_REG, LDRT_POS...
    printAddrMode2OffsetOperand(MI, 3, O);
    return;
    break;
  case 9:
    // LDRD, STRD
    printAddrMode3Operand(MI, 2, O, false);
    return;
    break;
  case 10:
    // LDRD_POST, STRD_POST, t2LDRD_POST, t2STRD_POST
    printAddrMode7Operand(MI, 3, O);
    break;
  case 11:
    // LDRD_PRE, STRD_PRE
    printAddrMode3Operand(MI, 3, O, true);
    SStream_concat0(O, "!");
    return;
    break;
  case 12:
    // LDRHTi, LDRSBTi, LDRSHTi, STRHTi
    printPostIdxImm8Operand(MI, 3, O);
    return;
    break;
  case 13:
    // LDRHTr, LDRSBTr, LDRSHTr, STRHTr
    printPostIdxRegOperand(MI, 3, O);
    return;
    break;
  case 14:
    // LDRH_POST, LDRSB_POST, LDRSH_POST, STRH_POST
    printAddrMode3OffsetOperand(MI, 3, O);
    return;
    break;
  case 15:
    // MCR, MCRR, VCMLAv2f32_indexed, VCMLAv4f16_indexed, VCMLAv4f32_indexed,...
    SStream_concat0(O, ", ");
    break;
  case 16:
    // MCRR2
    printCImmediate(MI, 4, O);
    return;
    break;
  case 17:
    // STLEX, STLEXB, STLEXH, STREX, STREXB, STREXH, SWP, SWPB, t2LDAEXD, t2L...
    printAddrMode7Operand(MI, 2, O);
    return;
    break;
  case 18:
    // VBIFd, VBIFq, VBITd, VBITq, VBSLd, VBSLq, VLD4LNd16, VLD4LNd32, VLD4LN...
    printOperand(MI, 3, O);
    break;
  case 19:
    // VCADDv2f32, VCADDv4f16, VCADDv4f32, VCADDv8f16
    printComplexRotationOp(MI, 3, O, 180, 90);
    return;
    break;
  case 20:
    // VCMLAv2f32, VCMLAv4f16, VCMLAv4f32, VCMLAv8f16
    printComplexRotationOp(MI, 4, O, 90, 0);
    return;
    break;
  case 21:
    // VLD1LNd16, VLD1LNd32, VLD1LNd8, VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8...
    printAddrMode6Operand(MI, 1, O);
    break;
  case 22:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD
    printAddrMode6Operand(MI, 2, O);
    printAddrMode6OffsetOperand(MI, 4, O);
    return;
    break;
  case 23:
    // VLD2LNd16, VLD2LNd32, VLD2LNd8, VLD2LNq16, VLD2LNq32
    printOperand(MI, 1, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 6, O);
    SStream_concat0(O, "]}, ");
    set_mem_access(MI, false);
    printAddrMode6Operand(MI, 2, O);
    return;
    break;
  case 24:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    SStream_concat0(O, "]}, ");
    set_mem_access(MI, false);
    printAddrMode6Operand(MI, 3, O);
    printAddrMode6OffsetOperand(MI, 5, O);
    return;
    break;
  case 25:
    // VLD3DUPd16_UPD, VLD3DUPd32_UPD, VLD3DUPd8_UPD, VLD3DUPq16_UPD, VLD3DUP...
    printAddrMode6OffsetOperand(MI, 6, O);
    return;
    break;
  case 26:
    // VLD3LNd16, VLD3LNd32, VLD3LNd8, VLD3LNq16, VLD3LNq32
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    printOperand(MI, 2, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 8, O);
    SStream_concat0(O, "]}, ");
    set_mem_access(MI, false);
    printAddrMode6Operand(MI, 3, O);
    return;
    break;
  case 27:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printAddrMode6Operand(MI, 4, O);
    printAddrMode6OffsetOperand(MI, 6, O);
    return;
    break;
  case 28:
    // VMLAslfd, VMLAslfq, VMLAslhd, VMLAslhq, VMLSslfd, VMLSslfq, VMLSslhd, ...
    printVectorIndex(MI, 4, O);
    return;
    break;
  case 29:
    // VMULslfd, VMULslfq, VMULslhd, VMULslhq
    printVectorIndex(MI, 3, O);
    return;
    break;
  case 30:
    // VST2LNd16_UPD, VST2LNd32_UPD, VST2LNd8_UPD, VST2LNq16_UPD, VST2LNq32_U...
    printOperand(MI, 5, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 6, O);
    SStream_concat0(O, "]}, ");
    set_mem_access(MI, false);
    printAddrMode6Operand(MI, 1, O);
    printAddrMode6OffsetOperand(MI, 3, O);
    return;
    break;
  case 31:
    // VST4d16_UPD, VST4d32_UPD, VST4d8_UPD, VST4q16_UPD, VST4q32_UPD, VST4q8...
    printOperand(MI, 7, O);
    SStream_concat0(O, "}, ");
    printAddrMode6Operand(MI, 1, O);
    printAddrMode6OffsetOperand(MI, 3, O);
    return;
    break;
  case 32:
    // t2ADCrs, t2ADDrs, t2ANDrs, t2BICrs, t2EORrs, t2ORNrs, t2ORRrs, t2RSBrs...
    printT2SOOperand(MI, 2, O);
    return;
    break;
  case 33:
    // t2ASRri, t2LSRri
    printThumbSRImm(MI, 2, O);
    return;
    break;
  case 34:
    // t2LDRD_PRE, t2STRD_PRE
    printT2AddrModeImm8s4Operand(MI, 3, O, true);
    SStream_concat0(O, "!");
    return;
    break;
  case 35:
    // t2LDRDi8, t2STRDi8
    printT2AddrModeImm8s4Operand(MI, 2, O, false);
    return;
    break;
  case 36:
    // t2STREX
    printT2AddrModeImm0_1020s4Operand(MI, 2, O);
    return;
    break;
  case 37:
    // tADDrSPi
    printThumbS4ImmOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 7 encoded into 4 bits for 13 unique commands.
  // printf("Fragment 7: %"PRIu64"\n", ((Bits >> 53) & 15));
  switch ((Bits >> 53) & 15) {
  default: // unreachable
  case 0:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, VLD1LNdWB_register_Asm...
    return;
    break;
  case 1:
    // LDRD_POST, MLA, MLS, SBFX, SMLABB, SMLABT, SMLAD, SMLADX, SMLALBB, SML...
    SStream_concat0(O, ", ");
    break;
  case 2:
    // MCR, t2MCR, t2MCR2
    printCImmediate(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    return;
    break;
  case 3:
    // MCRR, t2MCRR, t2MCRR2
    printOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    return;
    break;
  case 4:
    // PKHBT, t2PKHBT
    printPKHLSLShiftImm(MI, 3, O);
    return;
    break;
  case 5:
    // PKHTB, t2PKHTB
    printPKHASRShiftImm(MI, 3, O);
    return;
    break;
  case 6:
    // SXTAB, SXTAB16, SXTAH, UXTAB, UXTAB16, UXTAH, t2SXTAB, t2SXTAB16, t2SX...
    printRotImmOperand(MI, 3, O);
    return;
    break;
  case 7:
    // USAT, t2USAT
    printShiftImmOperand(MI, 3, O);
    return;
    break;
  case 8:
    // VCMLAv2f32_indexed, VCMLAv4f16_indexed, VCMLAv4f32_indexed, VCMLAv8f16...
    printComplexRotationOp(MI, 5, O, 90, 0);
    return;
    break;
  case 9:
    // VLD3d16, VLD3d16_UPD, VLD3d32, VLD3d32_UPD, VLD3d8, VLD3d8_UPD, VLD3q1...
    SStream_concat0(O, "}, ");
    break;
  case 10:
    // VLD4LNd16, VLD4LNd32, VLD4LNd8, VLD4LNq16, VLD4LNq32, VST2LNd16, VST2L...
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    break;
  case 11:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD
    printAddrMode6OffsetOperand(MI, 3, O);
    return;
    break;
  case 12:
    // t2LDRD_POST, t2STRD_POST
    printT2AddrModeImm8s4OffsetOperand(MI, 4, O);
    return;
    break;
  }


  // Fragment 8 encoded into 4 bits for 12 unique commands.
  // printf("Fragment 8: %"PRIu64"\n", ((Bits >> 57) & 15));
  switch ((Bits >> 57) & 15) {
  default: // unreachable
  case 0:
    // LDRD_POST, STRD_POST
    printAddrMode3OffsetOperand(MI, 4, O);
    return;
    break;
  case 1:
    // MLA, MLS, SMLABB, SMLABT, SMLAD, SMLADX, SMLALBB, SMLALBT, SMLALD, SML...
    printOperand(MI, 3, O);
    break;
  case 2:
    // SBFX, UBFX, t2SBFX, t2UBFX
    printImmPlusOneOperand(MI, 3, O);
    return;
    break;
  case 3:
    // VLD3d16, VLD3d32, VLD3d8, VLD3q16, VLD3q32, VLD3q8
    printAddrMode6Operand(MI, 3, O);
    return;
    break;
  case 4:
    // VLD3d16_UPD, VLD3d32_UPD, VLD3d8_UPD, VLD3q16_UPD, VLD3q32_UPD, VLD3q8...
    printAddrMode6Operand(MI, 4, O);
    printAddrMode6OffsetOperand(MI, 6, O);
    return;
    break;
  case 5:
    // VLD4LNd16, VLD4LNd32, VLD4LNd8, VLD4LNq16, VLD4LNq32
    printNoHashImmediate(MI, 10, O);
    SStream_concat0(O, "]}, ");
    set_mem_access(MI, false);
    printAddrMode6Operand(MI, 4, O);
    return;
    break;
  case 6:
    // VST2LNd16, VST2LNd32, VST2LNd8, VST2LNq16, VST2LNq32
    printNoHashImmediate(MI, 4, O);
    SStream_concat0(O, "]}, ");
    set_mem_access(MI, false);
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 7:
    // VST3LNd16, VST3LNd32, VST3LNd8, VST3LNq16, VST3LNq32
    printNoHashImmediate(MI, 5, O);
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    printOperand(MI, 4, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 5, O);
    SStream_concat0(O, "]}, ");
    set_mem_access(MI, false);
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 8:
    // VST3d16, VST3d32, VST3d8, VST3q16, VST3q32, VST3q8
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 9:
    // VST4LNd16, VST4LNd32, VST4LNd8, VST4LNq16, VST4LNq32
    printNoHashImmediate(MI, 6, O);
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    printOperand(MI, 4, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 6, O);
    SStream_concat0(O, "], ");
    set_mem_access(MI, false);
    printOperand(MI, 5, O);
    SStream_concat0(O, "[");
    set_mem_access(MI, true);
    printNoHashImmediate(MI, 6, O);
    SStream_concat0(O, "]}, ");
    set_mem_access(MI, false);
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 10:
    // VST4d16, VST4d32, VST4d8, VST4q16, VST4q32, VST4q8
    printOperand(MI, 5, O);
    SStream_concat0(O, "}, ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 11:
    // t2STLEXD, t2STREXD
    printAddrMode7Operand(MI, 3, O);
    return;
    break;
  }


  // Fragment 9 encoded into 1 bits for 2 unique commands.
  // printf("Fragment 9: %"PRIu64"\n", ((Bits >> 61) & 1));
  if ((Bits >> 61) & 1) {
    // VLD4d16, VLD4d16_UPD, VLD4d32, VLD4d32_UPD, VLD4d8, VLD4d8_UPD, VLD4q1...
    SStream_concat0(O, "}, ");
  } else {
    // MLA, MLS, SMLABB, SMLABT, SMLAD, SMLADX, SMLALBB, SMLALBT, SMLALD, SML...
    return;
  }


  // Fragment 10 encoded into 1 bits for 2 unique commands.
  // printf("Fragment 10: %"PRIu64"\n", ((Bits >> 62) & 1));
  if ((Bits >> 62) & 1) {
    // VLD4d16_UPD, VLD4d32_UPD, VLD4d8_UPD, VLD4q16_UPD, VLD4q32_UPD, VLD4q8...
    printAddrMode6Operand(MI, 5, O);
    printAddrMode6OffsetOperand(MI, 7, O);
    return;
  } else {
    // VLD4d16, VLD4d32, VLD4d8, VLD4q16, VLD4q32, VLD4q8
    printAddrMode6Operand(MI, 4, O);
    return;
  }

}



#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

static bool printAliasInstr(MCInst *MI, SStream *OS)
{
  unsigned int I = 0, OpIdx, PrintMethodIdx;
  char *tmpString;
  const char *AsmString;
  switch (MCInst_getOpcode(MI)) {
  default: return false;
  case ARM_DSB:
    if (MCInst_getNumOperands(MI) == 1 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 12 &&
        !ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureDFB)) {
      // (DSB 12)
      AsmString = "dfb";
      break;
    }
    return false;
  case ARM_HINT:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 0 &&
        !ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV6KOps)) {
      // (HINT 0, pred:$p)
      AsmString = "nop$\xFF\x02\x01";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 1 &&
        !ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV6KOps)) {
      // (HINT 1, pred:$p)
      AsmString = "yield$\xFF\x02\x01";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 2 &&
        !ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV6KOps)) {
      // (HINT 2, pred:$p)
      AsmString = "wfe$\xFF\x02\x01";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 3 &&
        !ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV6KOps)) {
      // (HINT 3, pred:$p)
      AsmString = "wfi$\xFF\x02\x01";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 4 &&
        !ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV6KOps)) {
      // (HINT 4, pred:$p)
      AsmString = "sev$\xFF\x02\x01";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 5 &&
        !ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV8Ops)) {
      // (HINT 5, pred:$p)
      AsmString = "sevl$\xFF\x02\x01";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 16 &&
        !ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureRAS)) {
      // (HINT 16, pred:$p)
      AsmString = "esb$\xFF\x02\x01";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 20 &&
        !ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV6KOps)) {
      // (HINT 20, pred:$p)
      AsmString = "csdb$\xFF\x02\x01";
      break;
    }
    return false;
  case ARM_t2DSB:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 12 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureDFB)) {
      // (t2DSB 12, pred:$p)
      AsmString = "dfb$\xFF\x02\x01";
      break;
    }
    return false;
  case ARM_t2HINT:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 0 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureThumb2)) {
      // (t2HINT 0, pred:$p)
      AsmString = "nop$\xFF\x02\x01.w";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 1 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureThumb2)) {
      // (t2HINT 1, pred:$p)
      AsmString = "yield$\xFF\x02\x01.w";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 2 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureThumb2)) {
      // (t2HINT 2, pred:$p)
      AsmString = "wfe$\xFF\x02\x01.w";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 3 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureThumb2)) {
      // (t2HINT 3, pred:$p)
      AsmString = "wfi$\xFF\x02\x01.w";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 4 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureThumb2)) {
      // (t2HINT 4, pred:$p)
      AsmString = "sev$\xFF\x02\x01.w";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 5 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureThumb2) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV8Ops)) {
      // (t2HINT 5, pred:$p)
      AsmString = "sevl$\xFF\x02\x01.w";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 16 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureThumb2) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureRAS)) {
      // (t2HINT 16, pred:$p)
      AsmString = "esb$\xFF\x02\x01.w";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 20 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureThumb2)) {
      // (t2HINT 20, pred:$p)
      AsmString = "csdb$\xFF\x02\x01";
      break;
    }
    return false;
  case ARM_t2SUBS_PC_LR:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 0 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureThumb2) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureVirtualization)) {
      // (t2SUBS_PC_LR 0, pred:$p)
      AsmString = "eret$\xFF\x02\x01";
      break;
    }
    return false;
  case ARM_tHINT:
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 0 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV6MOps)) {
      // (tHINT 0, pred:$p)
      AsmString = "nop$\xFF\x02\x01";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 1 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV6MOps)) {
      // (tHINT 1, pred:$p)
      AsmString = "yield$\xFF\x02\x01";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 2 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV6MOps)) {
      // (tHINT 2, pred:$p)
      AsmString = "wfe$\xFF\x02\x01";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 3 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV6MOps)) {
      // (tHINT 3, pred:$p)
      AsmString = "wfi$\xFF\x02\x01";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 4 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV6MOps)) {
      // (tHINT 4, pred:$p)
      AsmString = "sev$\xFF\x02\x01";
      break;
    }
    if (MCInst_getNumOperands(MI) == 3 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 5 &&
        ARM_getFeatureBits(MI->csh->mode, ARM_ModeThumb) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_FeatureThumb2) &&
        ARM_getFeatureBits(MI->csh->mode, ARM_HasV8Ops)) {
      // (tHINT 5, pred:$p)
      AsmString = "sevl$\xFF\x02\x01";
      break;
    }
    return false;
  }


  tmpString = cs_strdup(AsmString);

  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;

  tmpString[I] = 0;
  SStream_concat0(OS, tmpString);
  cs_mem_free(tmpString);

  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t') {
      SStream_concat0(OS, " ");
      ++I;
    }

    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          OpIdx = AsmString[I++] - 1;
          PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, OpIdx, PrintMethodIdx, OS);
        } else
            printOperand(MI, (unsigned)(AsmString[I++]) - 1, OS);
      } else {
        if (AsmString[I] == '[') {
          set_mem_access(MI, true);
        } else if (AsmString[I] == ']') {
          set_mem_access(MI, false);
        }
        SStream_concat1(OS, AsmString[I++]);
      }
    } while (AsmString[I] != '\0');
  }

  return true;
}

static void printCustomAliasOperand(
         MCInst *MI, unsigned OpIdx,
         unsigned PrintMethodIdx,
         SStream *OS)
{
  switch (PrintMethodIdx) {
  default:
    break;
  case 0:
    printPredicateOperand(MI, OpIdx, OS);
    break;
  }
}

#endif // PRINT_ALIAS_INSTR
