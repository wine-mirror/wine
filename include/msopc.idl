/*
 * Copyright 2018 Nikolay Sivov for CodeWeavers
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
 */

import "unknwn.idl";
import "ocidl.idl";

#include "opcbase.idl"
#include "opcobjectmodel.idl"
#include "opcparturi.idl"

#ifndef __WIDL__
#define threading(model)
#endif

interface IOpcUri;
interface IOpcPartUri;
interface IOpcPackage;
interface IOpcDigitalSignatureManager;

[
    object,
    uuid(6d0b4446-cd73-4ab3-94f4-8ccdf6116154),
    pointer_default(ref)
]
interface IOpcFactory : IUnknown
{
    HRESULT CreatePackageRootUri(
        [out, retval] IOpcUri **uri
    );

    HRESULT CreatePartUri(
        [in, string] LPCWSTR uri,
        [out, retval] IOpcPartUri **part_uri
    );

    [local]
    HRESULT CreateStreamOnFile(
        [in, string] LPCWSTR filename,
        [in] OPC_STREAM_IO_MODE io_mode,
        [in, unique] SECURITY_ATTRIBUTES *sa,
        [in] DWORD flags,
        [out, retval] IStream **stream
    );

    HRESULT CreatePackage(
        [out, retval] IOpcPackage **package
    );

    HRESULT ReadPackageFromStream(
        [in] IStream *stream,
        [in] OPC_READ_FLAGS flags,
        [out, retval] IOpcPackage **package
    );

    HRESULT WritePackageToStream(
        [in] IOpcPackage *package,
        [in] OPC_WRITE_FLAGS flags,
        [in] IStream *stream
    );

    HRESULT CreateDigitalSignatureManager(
        [in] IOpcPackage *package,
        [out, retval] IOpcDigitalSignatureManager **signature_manager
    );
}

[
    threading(both),
    uuid(6b2d6Ba0-9f3e-4f27-920b-313cc426a39e)
]
coclass OpcFactory
{
    interface IOpcFactory;
};
