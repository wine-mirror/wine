/* Capstone Disassembly Engine, http://www.capstone-engine.org */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013-2019 */

/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
static const char *getRegisterName(unsigned RegNo)
{

#ifndef CAPSTONE_DIET
  static const char AsmStrs[] = {
  /* 0 */ 's', 't', '(', '0', ')', 0,
  /* 6 */ 's', 't', '(', '1', ')', 0,
  /* 12 */ 's', 't', '(', '2', ')', 0,
  /* 18 */ 's', 't', '(', '3', ')', 0,
  /* 24 */ 's', 't', '(', '4', ')', 0,
  /* 30 */ 's', 't', '(', '5', ')', 0,
  /* 36 */ 's', 't', '(', '6', ')', 0,
  /* 42 */ 's', 't', '(', '7', ')', 0,
  /* 48 */ 'x', 'm', 'm', '1', '0', 0,
  /* 54 */ 'y', 'm', 'm', '1', '0', 0,
  /* 60 */ 'z', 'm', 'm', '1', '0', 0,
  /* 66 */ 'c', 'r', '1', '0', 0,
  /* 71 */ 'd', 'r', '1', '0', 0,
  /* 76 */ 'x', 'm', 'm', '2', '0', 0,
  /* 82 */ 'y', 'm', 'm', '2', '0', 0,
  /* 88 */ 'z', 'm', 'm', '2', '0', 0,
  /* 94 */ 'x', 'm', 'm', '3', '0', 0,
  /* 100 */ 'y', 'm', 'm', '3', '0', 0,
  /* 106 */ 'z', 'm', 'm', '3', '0', 0,
  /* 112 */ 'b', 'n', 'd', '0', 0,
  /* 117 */ 'k', '0', 0,
  /* 120 */ 'x', 'm', 'm', '0', 0,
  /* 125 */ 'y', 'm', 'm', '0', 0,
  /* 130 */ 'z', 'm', 'm', '0', 0,
  /* 135 */ 'f', 'p', '0', 0,
  /* 139 */ 'c', 'r', '0', 0,
  /* 143 */ 'd', 'r', '0', 0,
  /* 147 */ 'x', 'm', 'm', '1', '1', 0,
  /* 153 */ 'y', 'm', 'm', '1', '1', 0,
  /* 159 */ 'z', 'm', 'm', '1', '1', 0,
  /* 165 */ 'c', 'r', '1', '1', 0,
  /* 170 */ 'd', 'r', '1', '1', 0,
  /* 175 */ 'x', 'm', 'm', '2', '1', 0,
  /* 181 */ 'y', 'm', 'm', '2', '1', 0,
  /* 187 */ 'z', 'm', 'm', '2', '1', 0,
  /* 193 */ 'x', 'm', 'm', '3', '1', 0,
  /* 199 */ 'y', 'm', 'm', '3', '1', 0,
  /* 205 */ 'z', 'm', 'm', '3', '1', 0,
  /* 211 */ 'b', 'n', 'd', '1', 0,
  /* 216 */ 'k', '1', 0,
  /* 219 */ 'x', 'm', 'm', '1', 0,
  /* 224 */ 'y', 'm', 'm', '1', 0,
  /* 229 */ 'z', 'm', 'm', '1', 0,
  /* 234 */ 'f', 'p', '1', 0,
  /* 238 */ 'c', 'r', '1', 0,
  /* 242 */ 'd', 'r', '1', 0,
  /* 246 */ 'x', 'm', 'm', '1', '2', 0,
  /* 252 */ 'y', 'm', 'm', '1', '2', 0,
  /* 258 */ 'z', 'm', 'm', '1', '2', 0,
  /* 264 */ 'c', 'r', '1', '2', 0,
  /* 269 */ 'd', 'r', '1', '2', 0,
  /* 274 */ 'x', 'm', 'm', '2', '2', 0,
  /* 280 */ 'y', 'm', 'm', '2', '2', 0,
  /* 286 */ 'z', 'm', 'm', '2', '2', 0,
  /* 292 */ 'b', 'n', 'd', '2', 0,
  /* 297 */ 'k', '2', 0,
  /* 300 */ 'x', 'm', 'm', '2', 0,
  /* 305 */ 'y', 'm', 'm', '2', 0,
  /* 310 */ 'z', 'm', 'm', '2', 0,
  /* 315 */ 'f', 'p', '2', 0,
  /* 319 */ 'c', 'r', '2', 0,
  /* 323 */ 'd', 'r', '2', 0,
  /* 327 */ 'x', 'm', 'm', '1', '3', 0,
  /* 333 */ 'y', 'm', 'm', '1', '3', 0,
  /* 339 */ 'z', 'm', 'm', '1', '3', 0,
  /* 345 */ 'c', 'r', '1', '3', 0,
  /* 350 */ 'd', 'r', '1', '3', 0,
  /* 355 */ 'x', 'm', 'm', '2', '3', 0,
  /* 361 */ 'y', 'm', 'm', '2', '3', 0,
  /* 367 */ 'z', 'm', 'm', '2', '3', 0,
  /* 373 */ 'b', 'n', 'd', '3', 0,
  /* 378 */ 'k', '3', 0,
  /* 381 */ 'x', 'm', 'm', '3', 0,
  /* 386 */ 'y', 'm', 'm', '3', 0,
  /* 391 */ 'z', 'm', 'm', '3', 0,
  /* 396 */ 'f', 'p', '3', 0,
  /* 400 */ 'c', 'r', '3', 0,
  /* 404 */ 'd', 'r', '3', 0,
  /* 408 */ 'x', 'm', 'm', '1', '4', 0,
  /* 414 */ 'y', 'm', 'm', '1', '4', 0,
  /* 420 */ 'z', 'm', 'm', '1', '4', 0,
  /* 426 */ 'c', 'r', '1', '4', 0,
  /* 431 */ 'd', 'r', '1', '4', 0,
  /* 436 */ 'x', 'm', 'm', '2', '4', 0,
  /* 442 */ 'y', 'm', 'm', '2', '4', 0,
  /* 448 */ 'z', 'm', 'm', '2', '4', 0,
  /* 454 */ 'k', '4', 0,
  /* 457 */ 'x', 'm', 'm', '4', 0,
  /* 462 */ 'y', 'm', 'm', '4', 0,
  /* 467 */ 'z', 'm', 'm', '4', 0,
  /* 472 */ 'f', 'p', '4', 0,
  /* 476 */ 'c', 'r', '4', 0,
  /* 480 */ 'd', 'r', '4', 0,
  /* 484 */ 'x', 'm', 'm', '1', '5', 0,
  /* 490 */ 'y', 'm', 'm', '1', '5', 0,
  /* 496 */ 'z', 'm', 'm', '1', '5', 0,
  /* 502 */ 'c', 'r', '1', '5', 0,
  /* 507 */ 'd', 'r', '1', '5', 0,
  /* 512 */ 'x', 'm', 'm', '2', '5', 0,
  /* 518 */ 'y', 'm', 'm', '2', '5', 0,
  /* 524 */ 'z', 'm', 'm', '2', '5', 0,
  /* 530 */ 'k', '5', 0,
  /* 533 */ 'x', 'm', 'm', '5', 0,
  /* 538 */ 'y', 'm', 'm', '5', 0,
  /* 543 */ 'z', 'm', 'm', '5', 0,
  /* 548 */ 'f', 'p', '5', 0,
  /* 552 */ 'c', 'r', '5', 0,
  /* 556 */ 'd', 'r', '5', 0,
  /* 560 */ 'x', 'm', 'm', '1', '6', 0,
  /* 566 */ 'y', 'm', 'm', '1', '6', 0,
  /* 572 */ 'z', 'm', 'm', '1', '6', 0,
  /* 578 */ 'x', 'm', 'm', '2', '6', 0,
  /* 584 */ 'y', 'm', 'm', '2', '6', 0,
  /* 590 */ 'z', 'm', 'm', '2', '6', 0,
  /* 596 */ 'k', '6', 0,
  /* 599 */ 'x', 'm', 'm', '6', 0,
  /* 604 */ 'y', 'm', 'm', '6', 0,
  /* 609 */ 'z', 'm', 'm', '6', 0,
  /* 614 */ 'f', 'p', '6', 0,
  /* 618 */ 'c', 'r', '6', 0,
  /* 622 */ 'd', 'r', '6', 0,
  /* 626 */ 'x', 'm', 'm', '1', '7', 0,
  /* 632 */ 'y', 'm', 'm', '1', '7', 0,
  /* 638 */ 'z', 'm', 'm', '1', '7', 0,
  /* 644 */ 'x', 'm', 'm', '2', '7', 0,
  /* 650 */ 'y', 'm', 'm', '2', '7', 0,
  /* 656 */ 'z', 'm', 'm', '2', '7', 0,
  /* 662 */ 'k', '7', 0,
  /* 665 */ 'x', 'm', 'm', '7', 0,
  /* 670 */ 'y', 'm', 'm', '7', 0,
  /* 675 */ 'z', 'm', 'm', '7', 0,
  /* 680 */ 'f', 'p', '7', 0,
  /* 684 */ 'c', 'r', '7', 0,
  /* 688 */ 'd', 'r', '7', 0,
  /* 692 */ 'x', 'm', 'm', '1', '8', 0,
  /* 698 */ 'y', 'm', 'm', '1', '8', 0,
  /* 704 */ 'z', 'm', 'm', '1', '8', 0,
  /* 710 */ 'x', 'm', 'm', '2', '8', 0,
  /* 716 */ 'y', 'm', 'm', '2', '8', 0,
  /* 722 */ 'z', 'm', 'm', '2', '8', 0,
  /* 728 */ 'x', 'm', 'm', '8', 0,
  /* 733 */ 'y', 'm', 'm', '8', 0,
  /* 738 */ 'z', 'm', 'm', '8', 0,
  /* 743 */ 'c', 'r', '8', 0,
  /* 747 */ 'd', 'r', '8', 0,
  /* 751 */ 'x', 'm', 'm', '1', '9', 0,
  /* 757 */ 'y', 'm', 'm', '1', '9', 0,
  /* 763 */ 'z', 'm', 'm', '1', '9', 0,
  /* 769 */ 'x', 'm', 'm', '2', '9', 0,
  /* 775 */ 'y', 'm', 'm', '2', '9', 0,
  /* 781 */ 'z', 'm', 'm', '2', '9', 0,
  /* 787 */ 'x', 'm', 'm', '9', 0,
  /* 792 */ 'y', 'm', 'm', '9', 0,
  /* 797 */ 'z', 'm', 'm', '9', 0,
  /* 802 */ 'c', 'r', '9', 0,
  /* 806 */ 'd', 'r', '9', 0,
  /* 810 */ 'R', '1', '0', 'B', 'H', 0,
  /* 816 */ 'R', '1', '1', 'B', 'H', 0,
  /* 822 */ 'R', '1', '2', 'B', 'H', 0,
  /* 828 */ 'R', '1', '3', 'B', 'H', 0,
  /* 834 */ 'R', '1', '4', 'B', 'H', 0,
  /* 840 */ 'R', '1', '5', 'B', 'H', 0,
  /* 846 */ 'R', '8', 'B', 'H', 0,
  /* 851 */ 'R', '9', 'B', 'H', 0,
  /* 856 */ 'D', 'I', 'H', 0,
  /* 860 */ 'S', 'I', 'H', 0,
  /* 864 */ 'B', 'P', 'H', 0,
  /* 868 */ 'S', 'P', 'H', 0,
  /* 872 */ 'R', '1', '0', 'W', 'H', 0,
  /* 878 */ 'R', '1', '1', 'W', 'H', 0,
  /* 884 */ 'R', '1', '2', 'W', 'H', 0,
  /* 890 */ 'R', '1', '3', 'W', 'H', 0,
  /* 896 */ 'R', '1', '4', 'W', 'H', 0,
  /* 902 */ 'R', '1', '5', 'W', 'H', 0,
  /* 908 */ 'R', '8', 'W', 'H', 0,
  /* 913 */ 'R', '9', 'W', 'H', 0,
  /* 918 */ 'H', 'D', 'I', 0,
  /* 922 */ 'H', 'S', 'I', 0,
  /* 926 */ 'H', 'B', 'P', 0,
  /* 930 */ 'H', 'I', 'P', 0,
  /* 934 */ 'H', 'S', 'P', 0,
  /* 938 */ 'H', 'A', 'X', 0,
  /* 942 */ 'H', 'B', 'X', 0,
  /* 946 */ 'H', 'C', 'X', 0,
  /* 950 */ 'H', 'D', 'X', 0,
  /* 954 */ 'r', '1', '0', 'b', 0,
  /* 959 */ 'r', '1', '1', 'b', 0,
  /* 964 */ 'r', '1', '2', 'b', 0,
  /* 969 */ 'r', '1', '3', 'b', 0,
  /* 974 */ 'r', '1', '4', 'b', 0,
  /* 979 */ 'r', '1', '5', 'b', 0,
  /* 984 */ 'r', '8', 'b', 0,
  /* 988 */ 'r', '9', 'b', 0,
  /* 992 */ 'r', '1', '0', 'd', 0,
  /* 997 */ 'r', '1', '1', 'd', 0,
  /* 1002 */ 'r', '1', '2', 'd', 0,
  /* 1007 */ 'r', '1', '3', 'd', 0,
  /* 1012 */ 'r', '1', '4', 'd', 0,
  /* 1017 */ 'r', '1', '5', 'd', 0,
  /* 1022 */ 'r', '8', 'd', 0,
  /* 1026 */ 'r', '9', 'd', 0,
  /* 1030 */ 'd', 'i', 'r', 'f', 'l', 'a', 'g', 0,
  /* 1038 */ 'a', 'h', 0,
  /* 1041 */ 'b', 'h', 0,
  /* 1044 */ 'c', 'h', 0,
  /* 1047 */ 'd', 'h', 0,
  /* 1050 */ 'e', 'd', 'i', 0,
  /* 1054 */ 'r', 'd', 'i', 0,
  /* 1058 */ 'e', 's', 'i', 0,
  /* 1062 */ 'r', 's', 'i', 0,
  /* 1066 */ 'a', 'l', 0,
  /* 1069 */ 'b', 'l', 0,
  /* 1072 */ 'c', 'l', 0,
  /* 1075 */ 'd', 'l', 0,
  /* 1078 */ 'd', 'i', 'l', 0,
  /* 1082 */ 's', 'i', 'l', 0,
  /* 1086 */ 'b', 'p', 'l', 0,
  /* 1090 */ 's', 'p', 'l', 0,
  /* 1094 */ 'e', 'b', 'p', 0,
  /* 1098 */ 'r', 'b', 'p', 0,
  /* 1102 */ 'e', 'i', 'p', 0,
  /* 1106 */ 'r', 'i', 'p', 0,
  /* 1110 */ 'e', 's', 'p', 0,
  /* 1114 */ 'r', 's', 'p', 0,
  /* 1118 */ 's', 's', 'p', 0,
  /* 1122 */ 'c', 's', 0,
  /* 1125 */ 'd', 's', 0,
  /* 1128 */ 'e', 's', 0,
  /* 1131 */ 'f', 's', 0,
  /* 1134 */ 'f', 'l', 'a', 'g', 's', 0,
  /* 1140 */ 's', 's', 0,
  /* 1143 */ 'r', '1', '0', 'w', 0,
  /* 1148 */ 'r', '1', '1', 'w', 0,
  /* 1153 */ 'r', '1', '2', 'w', 0,
  /* 1158 */ 'r', '1', '3', 'w', 0,
  /* 1163 */ 'r', '1', '4', 'w', 0,
  /* 1168 */ 'r', '1', '5', 'w', 0,
  /* 1173 */ 'r', '8', 'w', 0,
  /* 1177 */ 'r', '9', 'w', 0,
  /* 1181 */ 'f', 'p', 's', 'w', 0,
  /* 1186 */ 'e', 'a', 'x', 0,
  /* 1190 */ 'r', 'a', 'x', 0,
  /* 1194 */ 'e', 'b', 'x', 0,
  /* 1198 */ 'r', 'b', 'x', 0,
  /* 1202 */ 'e', 'c', 'x', 0,
  /* 1206 */ 'r', 'c', 'x', 0,
  /* 1210 */ 'e', 'd', 'x', 0,
  /* 1214 */ 'r', 'd', 'x', 0,
  /* 1218 */ 'e', 'i', 'z', 0,
  /* 1222 */ 'r', 'i', 'z', 0,
  };

  static const uint16_t RegAsmOffset[] = {
    1038, 1066, 1187, 1041, 1069, 1095, 864, 1086, 1195, 1044, 1072, 1122, 1203, 1030,
    1047, 1051, 856, 1078, 1075, 1125, 1211, 1186, 1094, 1194, 1202, 1050, 1210, 1134,
    1102, 1218, 1128, 1058, 1110, 1181, 1131, 1137, 938, 926, 942, 946, 918, 950,
    930, 922, 934, 1103, 1190, 1098, 1198, 1206, 1054, 1214, 1106, 1222, 1062, 1114,
    1059, 860, 1082, 1111, 868, 1090, 1140, 1118, 112, 211, 292, 373, 139, 238,
    319, 400, 476, 552, 618, 684, 743, 802, 66, 165, 264, 345, 426, 502,
    143, 242, 323, 404, 480, 556, 622, 688, 747, 806, 71, 170, 269, 350,
    431, 507, 135, 234, 315, 396, 472, 548, 614, 680, 117, 216, 297, 378,
    454, 530, 596, 662, 121, 220, 301, 382, 458, 534, 600, 666, 744, 803,
    67, 166, 265, 346, 427, 503, 0, 6, 12, 18, 24, 30, 36, 42,
    120, 219, 300, 381, 457, 533, 599, 665, 728, 787, 48, 147, 246, 327,
    408, 484, 560, 626, 692, 751, 76, 175, 274, 355, 436, 512, 578, 644,
    710, 769, 94, 193, 125, 224, 305, 386, 462, 538, 604, 670, 733, 792,
    54, 153, 252, 333, 414, 490, 566, 632, 698, 757, 82, 181, 280, 361,
    442, 518, 584, 650, 716, 775, 100, 199, 130, 229, 310, 391, 467, 543,
    609, 675, 738, 797, 60, 159, 258, 339, 420, 496, 572, 638, 704, 763,
    88, 187, 286, 367, 448, 524, 590, 656, 722, 781, 106, 205, 984, 988,
    954, 959, 964, 969, 974, 979, 846, 851, 810, 816, 822, 828, 834, 840,
    1022, 1026, 992, 997, 1002, 1007, 1012, 1017, 1173, 1177, 1143, 1148, 1153, 1158,
    1163, 1168, 908, 913, 872, 878, 884, 890, 896, 902,
  };

  return AsmStrs+RegAsmOffset[RegNo-1];
#else
  return NULL;
#endif
}
