/*
 * Copyright 2023 Zhiyi Zhang for CodeWeavers
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
 */

import "wtypes.idl";
import "unknwn.idl";

[
    local,
    object,
    uuid(cbfd91d9-51b2-45e4-b3de-d19ccfb863c5),
    pointer_default(unique)
]
interface IDCompositionAnimation : IUnknown
{
    HRESULT Reset();
    HRESULT SetAbsoluteBeginTime([in] LARGE_INTEGER time);
    HRESULT AddCubic([in] double offset, [in] float constant_coefficient, [in] float linear_coefficient, [in] float quadratic_coefficient, [in] float cubic_coefficient);
    HRESULT AddSinusoidal([in] double offset, [in] float bias, [in] float amplitude, [in] float frequency, [in] float phase);
    HRESULT AddRepeat([in] double offset, [in] double duration);
    HRESULT End([in] double offset, [in] float value);
};
