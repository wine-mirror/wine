/*
 * Copyright (C) 2009 Huw Davies
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
 */

#if 0
#pragma makedep install
#endif

[
    object,
    uuid(0c733a63-2a1c-11ce-ade5-00aa0044773d),
    pointer_default(unique)
]
interface ICommand : IUnknown
{
    [local]
    HRESULT Cancel();

    [call_as(Cancel)]
    HRESULT RemoteCancel([out] IErrorInfo **ppErrorInfoRem);

    [local]
    HRESULT Execute([in, annotation("__in_opt")] IUnknown *pUnkOuter,
                    [in] REFIID riid,
                    [in, out, annotation("__inout_opt")] DBPARAMS *pParams,
                    [out, annotation("__out_opt")] DBROWCOUNT *pcRowsAffected,
                    [out, iid_is(riid), annotation("__deref_opt_out")] IUnknown **ppRowset);

    [call_as(Execute)]
    HRESULT RemoteExecute([in] IUnknown *pUnkOuter,
                          [in] REFIID riid,
                          [in] HACCESSOR hAccessor,
                          [in] DB_UPARAMS cParamSets,
                          [in, unique] GUID *pGuid,
                          [in] ULONG ulGuidOffset,
                          [in, unique] RMTPACK *pInputParams,
                          [in, out, unique] RMTPACK *pOutputParams,
                          [in] DBCOUNTITEM cBindings,
                          [in, unique, size_is((ULONG)cBindings)] DBBINDING *rgBindings,
                          [in, out, unique, size_is((ULONG)cBindings)] DBSTATUS *rgStatus,
                          [in, out, unique] DBROWCOUNT *pcRowsAffected,
                          [in, out, unique, iid_is(riid)] IUnknown **ppRowset);

    [local]
    HRESULT GetDBSession([in] REFIID riid,
                         [out, iid_is(riid), annotation("__deref_out_opt")] IUnknown **ppSession);

    [call_as(GetDBSession)]
    HRESULT RemoteGetDBSession([in] REFIID riid,
                               [out, iid_is(riid)] IUnknown **ppSession,
                               [out] IErrorInfo **ppErrorInfoRem);
}
